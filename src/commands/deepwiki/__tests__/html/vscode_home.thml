<!DOCTYPE html>
<html lang="en">

<head>
    <meta charSet="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="preload" href="/_next/static/media/569ce4b8f30dc480-s.p.woff2" as="font" crossorigin=""
        type="font/woff2" />
    <link rel="preload" href="/_next/static/media/93f479601ee12b01-s.p.woff2" as="font" crossorigin=""
        type="font/woff2" />
    <link rel="stylesheet" href="/_next/static/css/f30152c0704fba31.css?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        data-precedence="next" />
    <link rel="stylesheet" href="/_next/static/css/d162e991e7f49167.css?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        data-precedence="next" />
    <link rel="preload" as="script" fetchPriority="low"
        href="/_next/static/chunks/webpack-acbbbb548492d4a6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" />
    <script src="/_next/static/chunks/4bd1b696-cebf68b71ed1e85d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/1684-f23c1d6549f1d235.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/main-app-8ab5af3d6b81086e.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/9853-ba5965ca136d44c2.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/app/layout-54da70140f7127e0.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/c16f53c3-c80d3b6d0c4af7a0.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/537-d9d5e9261de3e69c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/2136-0f8d797058c844d4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/9970-05da82a5b9af6015.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/1235-2bb070afbba964c5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/4889-88dda955466eba30.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/168-d8e567d7acd9a9f8.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/2193-bd88dde7e3a2e1a4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/8335-cd2a11b5dbfe138d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script
        src="/_next/static/chunks/app/%5Borg%5D/%5Brepo%5D/%5B%5B...wikiRoutes%5D%5D/page-dfd2d90d0481fb54.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/7bf36345-20a79815585d2583.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script src="/_next/static/chunks/7646-a48026d39d9219b5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/3449-34296dd8d39c9ba6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/4393-60e403da10f49831.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script src="/_next/static/chunks/5805-44d30e670d12436d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3" async=""></script>
    <script
        src="/_next/static/chunks/app/%5Borg%5D/%5Brepo%5D/layout-f6177459e9003494.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <meta name="next-size-adjust" content="" />
    <title>microsoft/vscode | DeepWiki</title>
    <meta name="description"
        content="This document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core serv" />
    <meta property="og:title" content="microsoft/vscode | DeepWiki" />
    <meta property="og:description"
        content="This document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core serv" />
    <meta property="og:url" content="https://deepwiki.com/microsoft/vscode" />
    <meta property="og:site_name" content="DeepWiki" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="microsoft/vscode | DeepWiki" />
    <meta name="twitter:description"
        content="This document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core serv" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" sizes="48x48" />
    <link rel="icon" href="/icon.png?66aaf51e0e68c818" type="image/png" sizes="16x16" />
    <link rel="apple-touch-icon" href="/apple-icon.png?a4f658907db0ab87" type="image/png" sizes="180x180" />
    <script src="/_next/static/chunks/polyfills-42372ed130431b0a.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        noModule=""></script>
</head>

<body class="__variable_5cfdac font-geist-sans relative min-h-screen __variable_9a8899 bg-background antialiased">
    <section aria-label="Notifications alt+T" tabindex="-1" aria-live="polite" aria-relevant="additions text"
        aria-atomic="false"></section>
    <script>((e, t, r, n, a, o, i, s) => { let u = document.documentElement, l = ["light", "dark"]; function c(t) { var r; (Array.isArray(e) ? e : [e]).forEach(e => { let r = "class" === e, n = r && o ? a.map(e => o[e] || e) : a; r ? (u.classList.remove(...n), u.classList.add(o && o[t] ? o[t] : t)) : u.setAttribute(e, t) }), r = t, s && l.includes(r) && (u.style.colorScheme = r) } if (n) c(n); else try { let e = localStorage.getItem(t) || r, n = i && "system" === e ? window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light" : e; c(n) } catch (e) { } })("class", "theme", "light", null, ["light", "dark"], null, true, true)</script>
    <div class="flex min-h-screen w-full flex-col text-white" id="codebase-wiki-repo-page">
        <div class="bg-main border-b-border sticky top-0 z-30 border-b border-dashed">
            <div
                class="font-geist-mono relative flex h-8 items-center justify-center text-xs font-medium text-white sm:hidden">
                <div class="powered-by-devin-gradient absolute inset-0 z-[-1] h-8 w-full"></div><a target="_blank"
                    rel="noopener noreferrer" class="flex items-center gap-2" href="https://devin.ai"><svg
                        class="size-3 [&amp;_path]:stroke-0 [&amp;_path]:animate-[custom-pulse_1.8s_infinite_var(--delay,0s)]"
                        xmlns="http://www.w3.org/2000/svg" viewBox="110 110 460 500">
                        <path style="fill:#21c19a" class="[--delay:0.6s]"
                            d="M418.73,332.37c9.84-5.68,22.07-5.68,31.91,0l25.49,14.71c.82.48,1.69.8,2.58,1.06.19.06.37.11.55.16.87.21,1.76.34,2.65.35.04,0,.08.02.13.02.1,0,.19-.03.29-.04.83-.02,1.64-.13,2.45-.32.14-.03.28-.05.42-.09.87-.24,1.7-.59,2.5-1.03.08-.04.17-.06.25-.1l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22l-50.97-29.43c-3.65-2.11-8.15-2.11-11.81,0l-50.97,29.43c-.08.04-.13.11-.2.16-.78.48-1.51,1.02-2.15,1.66-.1.1-.18.21-.28.31-.57.6-1.08,1.26-1.51,1.97-.07.12-.15.22-.22.34-.44.77-.77,1.6-1.03,2.47-.05.19-.1.37-.14.56-.22.89-.37,1.81-.37,2.76v29.43c0,11.36-6.11,21.95-15.95,27.63-9.84,5.68-22.06,5.68-31.91,0l-25.49-14.71c-.82-.48-1.69-.8-2.57-1.06-.19-.06-.37-.11-.56-.16-.88-.21-1.76-.34-2.65-.34-.13,0-.26.02-.4.02-.84.02-1.66.13-2.47.32-.13.03-.27.05-.4.09-.87.24-1.71.6-2.51,1.04-.08.04-.16.06-.24.1l-50.97,29.43c-3.65,2.11-5.9,6.01-5.9,10.22v58.86c0,4.22,2.25,8.11,5.9,10.22l50.97,29.43c.08.04.17.06.24.1.8.44,1.64.79,2.5,1.03.14.04.28.06.42.09.81.19,1.62.3,2.45.32.1,0,.19.04.29.04.04,0,.08-.02.13-.02.89,0,1.77-.13,2.65-.35.19-.04.37-.1.56-.16.88-.26,1.75-.59,2.58-1.06l25.49-14.71c9.84-5.68,22.06-5.68,31.91,0,9.84,5.68,15.95,16.27,15.95,27.63v29.43c0,.95.15,1.87.37,2.76.05.19.09.37.14.56.25.86.59,1.69,1.03,2.47.07.12.15.22.22.34.43.71.94,1.37,1.51,1.97.1.1.18.21.28.31.65.63,1.37,1.18,2.15,1.66.07.04.13.11.2.16l50.97,29.43c1.83,1.05,3.86,1.58,5.9,1.58s4.08-.53,5.9-1.58l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22l-50.97-29.43c-.08-.04-.16-.06-.24-.1-.8-.44-1.64-.8-2.51-1.04-.13-.04-.26-.05-.39-.09-.82-.2-1.65-.31-2.49-.33-.13,0-.25-.02-.38-.02-.89,0-1.78.13-2.66.35-.18.04-.36.1-.54.15-.88.26-1.75.59-2.58,1.07l-25.49,14.72c-9.84,5.68-22.07,5.68-31.9,0-9.84-5.68-15.95-16.27-15.95-27.63s6.11-21.95,15.95-27.63Z">
                        </path>
                        <path style="fill:#3969ca"
                            d="M141.09,317.65l50.97,29.43c1.83,1.05,3.86,1.58,5.9,1.58s4.08-.53,5.9-1.58l50.97-29.43c.08-.04.13-.11.2-.16.78-.48,1.51-1.02,2.15-1.66.1-.1.18-.21.28-.31.57-.6,1.08-1.26,1.51-1.97.07-.12.15-.22.22-.34.44-.77.77-1.6,1.03-2.47.05-.19.1-.37.14-.56.22-.89.37-1.81.37-2.76v-29.43c0-11.36,6.11-21.95,15.96-27.63s22.06-5.68,31.91,0l25.49,14.71c.82.48,1.69.8,2.57,1.06.19.06.37.11.56.16.87.21,1.76.34,2.64.35.04,0,.09.02.13.02.1,0,.19-.04.29-.04.83-.02,1.65-.13,2.45-.32.14-.03.28-.05.41-.09.87-.24,1.71-.6,2.51-1.04.08-.04.16-.06.24-.1l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22l-50.97-29.43c-3.65-2.11-8.15-2.11-11.81,0l-50.97,29.43c-.08.04-.13.11-.2.16-.78.48-1.51,1.02-2.15,1.66-.1.1-.18.21-.28.31-.57.6-1.08,1.26-1.51,1.97-.07.12-.15.22-.22.34-.44.77-.77,1.6-1.03,2.47-.05.19-.1.37-.14.56-.22.89-.37,1.81-.37,2.76v29.43c0,11.36-6.11,21.95-15.95,27.63-9.84,5.68-22.07,5.68-31.91,0l-25.49-14.71c-.82-.48-1.69-.8-2.58-1.06-.19-.06-.37-.11-.55-.16-.88-.21-1.76-.34-2.65-.35-.13,0-.26.02-.4.02-.83.02-1.66.13-2.47.32-.13.03-.27.05-.4.09-.87.24-1.71.6-2.51,1.04-.08.04-.16.06-.24.1l-50.97,29.43c-3.65,2.11-5.9,6.01-5.9,10.22v58.86c0,4.22,2.25,8.11,5.9,10.22Z">
                        </path>
                        <path style="fill:#0294de" class="[--delay:1.2s]"
                            d="M396.88,484.35l-50.97-29.43c-.08-.04-.17-.06-.24-.1-.8-.44-1.64-.79-2.51-1.03-.14-.04-.27-.06-.41-.09-.81-.19-1.64-.3-2.47-.32-.13,0-.26-.02-.39-.02-.89,0-1.78.13-2.66.35-.18.04-.36.1-.54.15-.88.26-1.76.59-2.58,1.07l-25.49,14.72c-9.84,5.68-22.06,5.68-31.9,0-9.84-5.68-15.96-16.27-15.96-27.63v-29.43c0-.95-.15-1.87-.37-2.76-.05-.19-.09-.37-.14-.56-.25-.86-.59-1.69-1.03-2.47-.07-.12-.15-.22-.22-.34-.43-.71-.94-1.37-1.51-1.97-.1-.1-.18-.21-.28-.31-.65-.63-1.37-1.18-2.15-1.66-.07-.04-.13-.11-.2-.16l-50.97-29.43c-3.65-2.11-8.15-2.11-11.81,0l-50.97,29.43c-3.65,2.11-5.9,6.01-5.9,10.22v58.86c0,4.22,2.25,8.11,5.9,10.22l50.97,29.43c.08.04.17.06.25.1.8.44,1.63.79,2.5,1.03.14.04.29.06.43.09.8.19,1.61.3,2.43.32.1,0,.2.04.3.04.04,0,.09-.02.13-.02.88,0,1.77-.13,2.64-.34.19-.04.37-.1.56-.16.88-.26,1.75-.59,2.57-1.06l25.49-14.71c9.84-5.68,22.06-5.68,31.91,0,9.84,5.68,15.95,16.27,15.95,27.63v29.43c0,.95.15,1.87.37,2.76.05.19.09.37.14.56.25.86.59,1.69,1.03,2.47.07.12.15.22.22.34.43.71.94,1.37,1.51,1.97.1.1.18.21.28.31.65.63,1.37,1.18,2.15,1.66.07.04.13.11.2.16l50.97,29.43c1.83,1.05,3.86,1.58,5.9,1.58s4.08-.53,5.9-1.58l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22Z">
                        </path>
                    </svg>Powered by Devin</a>
            </div>
            <div class="container-wrapper">
                <div class="container mx-auto flex w-full flex-row items-center gap-2 py-4 md:py-6"><a
                        class="flex items-center gap-3" href="https://deepwiki.com"><span
                            class="text-base font-medium leading-none text-white md:text-lg hidden sm:block">DeepWiki</span></a>
                    <div class="flex-1">
                        <div class="flex flex-col gap-1"><a
                                class="block text-xs font-medium leading-none text-white sm:hidden md:text-lg"
                                href="/">DeepWiki</a>
                            <p class="text-text-secondary text-sm font-normal leading-none md:text-lg"><a
                                    href="https://github.com/microsoft/vscode" target="_blank" rel="noopener noreferrer"
                                    class="text-[#8f8f8f] transition-colors hover:text-black dark:hover:text-white">microsoft/vscode</a>
                            </p>
                        </div>
                    </div>
                    <div class="flex items-center gap-4"><a href="https://devin.ai" target="_blank"
                            rel="noopener noreferrer" class="group hidden items-center gap-1.5 md:flex">
                            <div class="relative"><span
                                    class="text-xs font-light text-white/70 transition-colors group-hover:text-white">powered
                                    by</span>
                                <div
                                    class="absolute bottom-0 left-0 h-[1px] w-0 bg-black/30 transition-all duration-300 group-hover:w-full dark:bg-white/30">
                                </div>
                            </div>
                            <div
                                class="flex items-center gap-1 transition-transform duration-300 group-hover:translate-x-0.5">
                                <svg class="size-4 transform transition-transform duration-700 group-hover:rotate-180 [&amp;_path]:stroke-0"
                                    xmlns="http://www.w3.org/2000/svg" viewBox="110 110 460 500">
                                    <path style="fill:#21c19a" class=""
                                        d="M418.73,332.37c9.84-5.68,22.07-5.68,31.91,0l25.49,14.71c.82.48,1.69.8,2.58,1.06.19.06.37.11.55.16.87.21,1.76.34,2.65.35.04,0,.08.02.13.02.1,0,.19-.03.29-.04.83-.02,1.64-.13,2.45-.32.14-.03.28-.05.42-.09.87-.24,1.7-.59,2.5-1.03.08-.04.17-.06.25-.1l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22l-50.97-29.43c-3.65-2.11-8.15-2.11-11.81,0l-50.97,29.43c-.08.04-.13.11-.2.16-.78.48-1.51,1.02-2.15,1.66-.1.1-.18.21-.28.31-.57.6-1.08,1.26-1.51,1.97-.07.12-.15.22-.22.34-.44.77-.77,1.6-1.03,2.47-.05.19-.1.37-.14.56-.22.89-.37,1.81-.37,2.76v29.43c0,11.36-6.11,21.95-15.95,27.63-9.84,5.68-22.06,5.68-31.91,0l-25.49-14.71c-.82-.48-1.69-.8-2.57-1.06-.19-.06-.37-.11-.56-.16-.88-.21-1.76-.34-2.65-.34-.13,0-.26.02-.4.02-.84.02-1.66.13-2.47.32-.13.03-.27.05-.4.09-.87.24-1.71.6-2.51,1.04-.08.04-.16.06-.24.1l-50.97,29.43c-3.65,2.11-5.9,6.01-5.9,10.22v58.86c0,4.22,2.25,8.11,5.9,10.22l50.97,29.43c.08.04.17.06.24.1.8.44,1.64.79,2.5,1.03.14.04.28.06.42.09.81.19,1.62.3,2.45.32.1,0,.19.04.29.04.04,0,.08-.02.13-.02.89,0,1.77-.13,2.65-.35.19-.04.37-.1.56-.16.88-.26,1.75-.59,2.58-1.06l25.49-14.71c9.84-5.68,22.06-5.68,31.91,0,9.84,5.68,15.95,16.27,15.95,27.63v29.43c0,.95.15,1.87.37,2.76.05.19.09.37.14.56.25.86.59,1.69,1.03,2.47.07.12.15.22.22.34.43.71.94,1.37,1.51,1.97.1.1.18.21.28.31.65.63,1.37,1.18,2.15,1.66.07.04.13.11.2.16l50.97,29.43c1.83,1.05,3.86,1.58,5.9,1.58s4.08-.53,5.9-1.58l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22l-50.97-29.43c-.08-.04-.16-.06-.24-.1-.8-.44-1.64-.8-2.51-1.04-.13-.04-.26-.05-.39-.09-.82-.2-1.65-.31-2.49-.33-.13,0-.25-.02-.38-.02-.89,0-1.78.13-2.66.35-.18.04-.36.1-.54.15-.88.26-1.75.59-2.58,1.07l-25.49,14.72c-9.84,5.68-22.07,5.68-31.9,0-9.84-5.68-15.95-16.27-15.95-27.63s6.11-21.95,15.95-27.63Z">
                                    </path>
                                    <path style="fill:#3969ca"
                                        d="M141.09,317.65l50.97,29.43c1.83,1.05,3.86,1.58,5.9,1.58s4.08-.53,5.9-1.58l50.97-29.43c.08-.04.13-.11.2-.16.78-.48,1.51-1.02,2.15-1.66.1-.1.18-.21.28-.31.57-.6,1.08-1.26,1.51-1.97.07-.12.15-.22.22-.34.44-.77.77-1.6,1.03-2.47.05-.19.1-.37.14-.56.22-.89.37-1.81.37-2.76v-29.43c0-11.36,6.11-21.95,15.96-27.63s22.06-5.68,31.91,0l25.49,14.71c.82.48,1.69.8,2.57,1.06.19.06.37.11.56.16.87.21,1.76.34,2.64.35.04,0,.09.02.13.02.1,0,.19-.04.29-.04.83-.02,1.65-.13,2.45-.32.14-.03.28-.05.41-.09.87-.24,1.71-.6,2.51-1.04.08-.04.16-.06.24-.1l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22l-50.97-29.43c-3.65-2.11-8.15-2.11-11.81,0l-50.97,29.43c-.08.04-.13.11-.2.16-.78.48-1.51,1.02-2.15,1.66-.1.1-.18.21-.28.31-.57.6-1.08,1.26-1.51,1.97-.07.12-.15.22-.22.34-.44.77-.77,1.6-1.03,2.47-.05.19-.1.37-.14.56-.22.89-.37,1.81-.37,2.76v29.43c0,11.36-6.11,21.95-15.95,27.63-9.84,5.68-22.07,5.68-31.91,0l-25.49-14.71c-.82-.48-1.69-.8-2.58-1.06-.19-.06-.37-.11-.55-.16-.88-.21-1.76-.34-2.65-.35-.13,0-.26.02-.4.02-.83.02-1.66.13-2.47.32-.13.03-.27.05-.4.09-.87.24-1.71.6-2.51,1.04-.08.04-.16.06-.24.1l-50.97,29.43c-3.65,2.11-5.9,6.01-5.9,10.22v58.86c0,4.22,2.25,8.11,5.9,10.22Z">
                                    </path>
                                    <path style="fill:#0294de" class=""
                                        d="M396.88,484.35l-50.97-29.43c-.08-.04-.17-.06-.24-.1-.8-.44-1.64-.79-2.51-1.03-.14-.04-.27-.06-.41-.09-.81-.19-1.64-.3-2.47-.32-.13,0-.26-.02-.39-.02-.89,0-1.78.13-2.66.35-.18.04-.36.1-.54.15-.88.26-1.76.59-2.58,1.07l-25.49,14.72c-9.84,5.68-22.06,5.68-31.9,0-9.84-5.68-15.96-16.27-15.96-27.63v-29.43c0-.95-.15-1.87-.37-2.76-.05-.19-.09-.37-.14-.56-.25-.86-.59-1.69-1.03-2.47-.07-.12-.15-.22-.22-.34-.43-.71-.94-1.37-1.51-1.97-.1-.1-.18-.21-.28-.31-.65-.63-1.37-1.18-2.15-1.66-.07-.04-.13-.11-.2-.16l-50.97-29.43c-3.65-2.11-8.15-2.11-11.81,0l-50.97,29.43c-3.65,2.11-5.9,6.01-5.9,10.22v58.86c0,4.22,2.25,8.11,5.9,10.22l50.97,29.43c.08.04.17.06.25.1.8.44,1.63.79,2.5,1.03.14.04.29.06.43.09.8.19,1.61.3,2.43.32.1,0,.2.04.3.04.04,0,.09-.02.13-.02.88,0,1.77-.13,2.64-.34.19-.04.37-.1.56-.16.88-.26,1.75-.59,2.57-1.06l25.49-14.71c9.84-5.68,22.06-5.68,31.91,0,9.84,5.68,15.95,16.27,15.95,27.63v29.43c0,.95.15,1.87.37,2.76.05.19.09.37.14.56.25.86.59,1.69,1.03,2.47.07.12.15.22.22.34.43.71.94,1.37,1.51,1.97.1.1.18.21.28.31.65.63,1.37,1.18,2.15,1.66.07.04.13.11.2.16l50.97,29.43c1.83,1.05,3.86,1.58,5.9,1.58s4.08-.53,5.9-1.58l50.97-29.43c3.65-2.11,5.9-6.01,5.9-10.22v-58.86c0-4.22-2.25-8.11-5.9-10.22Z">
                                    </path>
                                </svg><span class="text-sm font-medium text-white">Devin</span>
                            </div>
                        </a><button
                            class="border-border bg-surface hover:border-border-hover hover:bg-component ml-auto flex cursor-pointer items-center gap-1.5 rounded-md border px-3 py-1.5 text-sm font-medium text-white transition-all"
                            aria-label="Share"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round" class="h-4 w-4">
                                <circle cx="18" cy="5" r="3"></circle>
                                <circle cx="6" cy="12" r="3"></circle>
                                <circle cx="18" cy="19" r="3"></circle>
                                <line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line>
                                <line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>
                            </svg><span>Share</span></button>
                        <div class="h-8 w-8"></div>
                    </div>
                </div>
            </div>
        </div><!--$-->
        <div class="w-full flex-1">
            <div class="container-wrapper relative mx-auto h-full px-0">
                <div
                    class="container relative mx-auto flex h-full w-full flex-col gap-0 max-md:!px-0 md:flex-row md:gap-6 lg:gap-10">
                    <div
                        class="border-r-border hidden max-h-screen border-r border-dashed py-7 pr-4 transition-[border-radius] md:sticky md:left-0 md:top-20 md:block md:h-[calc(100vh-82px)] md:w-64 md:flex-shrink-0 md:overflow-y-auto lg:py-9 xl:w-72">
                        <div class="flex h-full w-full max-w-full flex-shrink-0 flex-col overflow-hidden"
                            style="scrollbar-color:var(--color-border) transparent">
                            <div class="flex-shrink-0 px-2">
                                <div class="text-secondary pb-1 text-xs">Last indexed: <!-- -->17 April 2025<!-- --> (<a
                                        href="https://github.com/microsoft/vscode/commits/47618583" target="_blank"
                                        rel="noopener noreferrer">476185</a>)</div>
                            </div>
                            <ul class="flex-1 flex-shrink-0 space-y-1 overflow-y-auto py-1"
                                style="scrollbar-width:none">
                                <li style="padding-left:0"><a data-selected="true"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/1-vs-code-architecture-overview">VS Code Architecture
                                        Overview</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/1.1-process-architecture">Process Architecture</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/1.2-dependency-management-and-build-system">Dependency
                                        Management and Build System</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/2-core-services-and-components">Core Services and
                                        Components</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/2.3-configuration-system">Configuration System</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/2.4-list-and-tree-components">List and Tree
                                        Components</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/3-monaco-editor">Monaco Editor</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/3.1-text-model-and-view-model">Text Model and View
                                        Model</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/3.2-editor-features-and-contributions">Editor Features
                                        and Contributions</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/4-extension-system">Extension System</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/4.1-extension-host-protocol">Extension Host Protocol</a>
                                </li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/4.2-extension-management">Extension Management</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/4.3-extension-api">Extension API</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/5-integrated-terminal">Integrated Terminal</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/5.1-terminal-instance-and-process-management">Terminal
                                        Instance and Process Management</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/5.2-terminal-ui-and-integration">Terminal UI and
                                        Integration</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/6-debugging-system">Debugging System</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/6.1-debug-service-and-session-management">Debug Service
                                        and Session Management</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/6.2-debug-adapter-protocol">Debug Adapter Protocol</a>
                                </li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/7-task-system">Task System</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/7.1-task-configuration-and-execution">Task Configuration
                                        and Execution</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/8-notebook-editor">Notebook Editor</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/8.1-notebook-model-and-view-model">Notebook Model and
                                        View Model</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/9-chat-and-ai-integration">Chat and AI Integration</a>
                                </li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/9.1-chat-ui-components">Chat UI Components</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/9.2-chat-service-and-agent-integration">Chat Service and
                                        Agent Integration</a></li>
                                <li style="padding-left:0"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/10-git-integration">Git Integration</a></li>
                                <li style="padding-left:12px"><a data-selected="false"
                                        class="hover:bg-hover block w-full rounded px-2 py-1.5 text-left text-sm transition-none text-secondary data-[selected=true]:bg-hover data-[selected=true]:text-primary font-normal data-[selected=true]:font-normal"
                                        href="/microsoft/vscode/10.1-git-extension-architecture">Git Extension
                                        Architecture</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="flex h-full flex-1 flex-col overflow-hidden">
                        <div class="bg-main border-b-border sticky top-0 z-10 border-b border-dashed md:hidden">
                            <div class="flex cursor-pointer items-center gap-2 p-3"><svg
                                    xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                                    viewBox="0 0 256 256" class="transition-transform">
                                    <path
                                        d="M184.49,136.49l-80,80a12,12,0,0,1-17-17L159,128,87.51,56.49a12,12,0,1,1,17-17l80,80A12,12,0,0,1,184.49,136.49Z">
                                    </path>
                                </svg><span class="truncate text-base font-normal">Menu</span></div>
                        </div>
                        <div class="relative flex-1 overflow-y-auto px-3 pt-3 md:rounded-md md:px-0 md:pt-0 [&amp;_::selection]:bg-purple-500/40"
                            style="scrollbar-color:var(--color-night) transparent">
                            <div class="pb-30 mx-auto max-w-2xl md:pb-40 md:pt-6 lg:pt-8">
                                <div
                                    class="prose prose-invert dark:prose-invert prose-headings:text-inherit prose-p:text-inherit max-w-none">
                                    <div>
                                        <div
                                            class="prose-custom prose-custom-md prose-custom-gray !max-w-none text-neutral-300 [overflow-wrap:anywhere]">
                                            <h1 id="vs-code-architecture-overview" class="group flex items-center"
                                                data-header="true">VS Code Architecture Overview<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h1>
                                            <details>
                                                <summary>Relevant source files</summary>
                                                <ul>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/.npmrc"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>.npmrc</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/.moduleignore"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/.moduleignore</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/.webignore"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/.webignore</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/azure-pipelines/linux/setup-env.sh"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/azure-pipelines/linux/setup-env.sh</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/checksums/electron.txt"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/checksums/electron.txt</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/checksums/nodejs.txt"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/checksums/nodejs.txt</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/debian/calculate-deps.js"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/debian/calculate-deps.js</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/debian/calculate-deps.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/debian/calculate-deps.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/debian/dep-lists.js"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/debian/dep-lists.js</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/debian/dep-lists.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/debian/dep-lists.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/dependencies-generator.js"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/dependencies-generator.js</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/dependencies-generator.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/dependencies-generator.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/rpm/dep-lists.js"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/rpm/dep-lists.js</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/linux/rpm/dep-lists.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/linux/rpm/dep-lists.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/monaco/monaco.d.ts.recipe"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/monaco/monaco.d.ts.recipe</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>build/package.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/cgmanifest.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>cgmanifest.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/extensions/vscode-colorize-tests/src/colorizer.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>extensions/vscode-colorize-tests/src/colorizer.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/package-lock.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>package-lock.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>package.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/.npmrc"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>remote/.npmrc</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/package-lock.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>remote/package-lock.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>remote/package.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/web/package-lock.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>remote/web/package-lock.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/web/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>remote/web/package.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/code/electron-main/app.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/code/electron-main/app.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/code/electron-main/main.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/code/electron-main/main.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/code/node/cliProcessMain.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/code/node/cliProcessMain.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/editorBrowser.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/editorBrowser.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/view/domLineBreaksComputer.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/view/domLineBreaksComputer.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/viewParts/minimap/minimap.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/viewParts/minimap/minimap.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/config/editorConfigurationSchema.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/config/editorConfigurationSchema.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/config/editorOptions.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/config/editorOptions.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/core/rgba.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/core/rgba.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/editorCommon.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/editorCommon.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/model.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/model.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/model/guidesTextModelPart.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/model/guidesTextModelPart.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/model/textModel.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/model/textModel.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/standalone/standaloneEnums.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/standalone/standaloneEnums.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/textModelGuides.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/textModelGuides.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/viewModel/minimapTokensColorTracker.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/viewModel/minimapTokensColorTracker.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/viewModel/modelLineProjection.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/viewModel/modelLineProjection.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/viewModel/viewModelImpl.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/viewModel/viewModelImpl.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/viewModel/viewModelLines.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/common/viewModel/viewModelLines.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/standalone/browser/standaloneCodeEditor.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/standalone/browser/standaloneCodeEditor.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/standalone/browser/standaloneEditor.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/standalone/browser/standaloneEditor.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/test/browser/view/minimapCharRenderer.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/test/browser/view/minimapCharRenderer.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/test/common/model/modelInjectedText.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/test/common/model/modelInjectedText.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/test/common/viewModel/lineBreakData.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/test/common/viewModel/lineBreakData.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/monaco.d.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/monaco.d.ts</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/environment/test/node/nativeModules.integrationTest.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/environment/test/node/nativeModules.integrationTest.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/launch/electron-main/launchMainService.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/launch/electron-main/launchMainService.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/menubar/electron-main/menubar.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/menubar/electron-main/menubar.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/native/common/native.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/native/common/native.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/native/electron-main/nativeHostMainService.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/native/electron-main/nativeHostMainService.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/sharedProcess/electron-main/sharedProcess.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/sharedProcess/electron-main/sharedProcess.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/sharedProcess/node/sharedProcess.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/sharedProcess/node/sharedProcess.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/window/common/window.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/window/common/window.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/window/electron-main/window.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/window/electron-main/window.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/windows/electron-main/windowImpl.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/windows/electron-main/windowImpl.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/windows/electron-main/windows.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/windows/electron-main/windows.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/windows/electron-main/windowsMainService.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/windows/electron-main/windowsMainService.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/windows/test/electron-main/windowsFinder.test.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/platform/windows/test/electron-main/windowsFinder.test.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/electron-sandbox/desktop.contribution.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/workbench/electron-sandbox/desktop.contribution.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/test/electron-sandbox/workbenchTestServices.ts"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>src/vs/workbench/test/electron-sandbox/workbenchTestServices.ts</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/test/automation/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>test/automation/package.json</span></a></li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/test/integration/browser/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>test/integration/browser/package.json</span></a>
                                                    </li>
                                                    <li><a href="https://github.com/microsoft/vscode/blob/47618583/test/smoke/package.json"
                                                            target="_blank" rel="noopener noreferrer"
                                                            class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                                class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                    class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                    fill="currentColor" viewBox="0 0 24 24">
                                                                    <path
                                                                        d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                    </path>
                                                                </svg>test/smoke/package.json</span></a></li>
                                                </ul>
                                            </details>
                                            <p>This document provides a high-level overview of the Visual Studio Code
                                                architecture, explaining the core components and how they interact with
                                                each other. It covers the process architecture, core services, and the
                                                main building blocks that make up VS Code.</p>
                                            <p>For detailed information about specific subsystems, please refer to the
                                                dedicated pages for each component, such as the <a
                                                    href="/microsoft/vscode/3-monaco-editor"
                                                    class="text-neutral-300 hover:text-neutral-200 hover:underline">Monaco
                                                    Editor</a>, <a href="/microsoft/vscode/4-extension-system"
                                                    class="text-neutral-300 hover:text-neutral-200 hover:underline">Extension
                                                    System</a>, or <a href="/microsoft/vscode/5-integrated-terminal"
                                                    class="text-neutral-300 hover:text-neutral-200 hover:underline">Integrated
                                                    Terminal</a>.</p>
                                            <h2 id="process-architecture" class="group flex items-center"
                                                data-header="true">Process Architecture<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code uses a multi-process architecture to ensure stability,
                                                performance, and security. The application is split into several
                                                processes, each with specific responsibilities:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <h3 id="main-process" class="group flex items-center" data-header="true">
                                                Main Process<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h3>
                                            <p>The main process is the entry point of the application and is responsible
                                                for:</p>
                                            <ul>
                                                <li>Managing application lifecycle</li>
                                                <li>Creating and managing windows</li>
                                                <li>Handling native OS integration</li>
                                                <li>Coordinating other processes</li>
                                            </ul>
                                            <p>The main process is implemented in <code
                                                    class="rounded-sm bg-[#e5e5e5] px-[0.25rem] py-[0.20rem] text-xs font-normal leading-[15px] before:hidden after:hidden dark:bg-[#484848]/30">CodeApplication</code>
                                                class, which initializes all the core services and sets up the necessary
                                                event listeners.</p>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/code/electron-main/app.ts#L130-L1000"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/code/electron-main/app.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">130-1000</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/code/electron-main/main.ts#L84-L200"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/code/electron-main/main.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">84-200</span></a>
                                                </li>
                                            </ul>
                                            <h3 id="renderer-process" class="group flex items-center"
                                                data-header="true">Renderer Process<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h3>
                                            <p>The renderer process hosts the VS Code workbench UI and is responsible
                                                for:</p>
                                            <ul>
                                                <li>Rendering the user interface</li>
                                                <li>Handling user interactions</li>
                                                <li>Managing editors and views</li>
                                                <li>Communicating with other processes</li>
                                            </ul>
                                            <p>Each window in VS Code has its own renderer process, which helps isolate
                                                windows from each other.</p>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/windows/electron-main/windowImpl.ts#L1-L100"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/platform/windows/electron-main/windowImpl.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">1-100</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/windows/electron-main/windowsMainService.ts#L183-L300"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/platform/windows/electron-main/windowsMainService.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">183-300</span></a>
                                                </li>
                                            </ul>
                                            <h3 id="extension-host-process" class="group flex items-center"
                                                data-header="true">Extension Host Process<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h3>
                                            <p>The extension host process runs extensions in a separate process to
                                                ensure stability:</p>
                                            <ul>
                                                <li>Isolates extension code from the main application</li>
                                                <li>Provides extension API surface</li>
                                                <li>Communicates with the renderer process via IPC</li>
                                                <li>Hosts language services, debuggers, and other extension features
                                                </li>
                                            </ul>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/api/node/extHost.api.impl.ts"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/workbench/api/node/extHost.api.impl.ts</span></a>
                                                </li>
                                            </ul>
                                            <h3 id="shared-process" class="group flex items-center" data-header="true">
                                                Shared Process<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h3>
                                            <p>The shared process handles background tasks that are shared across
                                                windows:</p>
                                            <ul>
                                                <li>Extension management (installation, updates)</li>
                                                <li>File search and indexing</li>
                                                <li>Telemetry</li>
                                                <li>Update management</li>
                                            </ul>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/sharedProcess/electron-main/sharedProcess.ts#L1-L100"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/platform/sharedProcess/electron-main/sharedProcess.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">1-100</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="core-services-architecture" class="group flex items-center"
                                                data-header="true">Core Services Architecture<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code is built on a service-oriented architecture with dependency
                                                injection. The core services are organized in a hierarchical manner:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The service architecture uses interfaces to define service contracts and
                                                implementations to provide the actual functionality. This allows for:
                                            </p>
                                            <ul>
                                                <li>Loose coupling between components</li>
                                                <li>Easier testing through service mocking</li>
                                                <li>Extensibility through service replacement</li>
                                            </ul>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/instantiation/common/instantiation.js"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/platform/instantiation/common/instantiation.js</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/code/electron-main/app.ts#L142-L154"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/code/electron-main/app.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">142-154</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="workbench-and-layout" class="group flex items-center"
                                                data-header="true">Workbench and Layout<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>The workbench is the main UI component of VS Code, providing the overall
                                                layout and hosting various parts:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The workbench layout is highly customizable, allowing users to resize,
                                                move, and hide different parts according to their preferences.</p>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/browser/layout.ts"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/workbench/browser/layout.ts</span></a></li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/browser/parts/editor/editorPart.ts"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/workbench/browser/parts/editor/editorPart.ts</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="monaco-editor" class="group flex items-center" data-header="true">
                                                Monaco Editor<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>At the core of VS Code&#x27;s editing capabilities is the Monaco Editor,
                                                a sophisticated text editor component:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The Monaco Editor is composed of several key components:</p>
                                            <ul>
                                                <li><strong>TextModel</strong>: Manages the text content and provides
                                                    APIs for text manipulation</li>
                                                <li><strong>ViewModel</strong>: Handles the visual representation of the
                                                    text model, including line wrapping and decorations</li>
                                                <li><strong>CodeEditorWidget</strong>: The main editor component that
                                                    integrates the model, view, and user interactions</li>
                                            </ul>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/model/textModel.ts#L178-L410"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/editor/common/model/textModel.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">178-410</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/viewModel/viewModelImpl.ts#L47-L100"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/editor/common/viewModel/viewModelImpl.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">47-100</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/monaco.d.ts#L1-L100"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/monaco.d.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">1-100</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="extension-system" class="group flex items-center"
                                                data-header="true">Extension System<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code&#x27;s extension system allows for powerful customization and
                                                additional functionality:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The extension system uses a proxy-based architecture to communicate
                                                between the main thread and extension host process. This ensures that
                                                extensions can&#x27;t directly affect the stability of the main
                                                application.</p>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/api/browser/mainThreadExtensionService.ts"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/workbench/api/browser/mainThreadExtensionService.ts</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/workbench/api/common/extHost.protocol.ts"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/workbench/api/common/extHost.protocol.ts</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="configuration-system" class="group flex items-center"
                                                data-header="true">Configuration System<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code&#x27;s configuration system manages settings from various
                                                sources:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The configuration system merges settings from multiple sources with a
                                                specific precedence order:</p>
                                            <ol>
                                                <li>Default settings</li>
                                                <li>User settings</li>
                                                <li>Workspace settings</li>
                                                <li>Folder-specific settings</li>
                                                <li>Memory settings (programmatically set)</li>
                                            </ol>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/configuration/common/configuration.js"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/platform/configuration/common/configuration.js</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/platform/configuration/common/configurationRegistry.js"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4] rounded-r"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/platform/configuration/common/configurationRegistry.js</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/src/vs/editor/common/config/editorOptions.ts#L52-L786"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>src/vs/editor/common/config/editorOptions.ts</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">52-786</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="dependency-management" class="group flex items-center"
                                                data-header="true">Dependency Management<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code uses npm for dependency management, with a carefully curated set
                                                of dependencies:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The main dependencies are defined in <code
                                                    class="rounded-sm bg-[#e5e5e5] px-[0.25rem] py-[0.20rem] text-xs font-normal leading-[15px] before:hidden after:hidden dark:bg-[#484848]/30">package.json</code>
                                                and include:</p>
                                            <ul>
                                                <li><strong>Electron</strong>: The framework for building cross-platform
                                                    desktop applications</li>
                                                <li><strong>Monaco Editor</strong>: The core text editor component</li>
                                                <li><strong>xterm.js</strong>: Terminal emulation library</li>
                                                <li><strong>vscode-oniguruma</strong> and
                                                    <strong>vscode-textmate</strong>: For syntax highlighting
                                                </li>
                                                <li>Various native modules for platform-specific functionality</li>
                                            </ul>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/package.json#L71-L116"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>package.json</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">71-116</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/package.json#L5-L42"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>remote/package.json</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">5-42</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/remote/web/package.json#L4-L24"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>remote/web/package.json</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">4-24</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="build-system" class="group flex items-center" data-header="true">
                                                Build System<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code uses a sophisticated build system based on TypeScript, Gulp, and
                                                Webpack:</p>
                                            <pre
                                                class="px-2 py-1.5 has-[code]:rounded-md has-[code]:!bg-[#e5e5e5] has-[div]:bg-transparent has-[div]:!p-0 has-[code]:text-stone-900 dark:has-[code]:!bg-[#242424] has-[code]:dark:text-white [&amp;_code]:block [&amp;_code]:border-none [&amp;_code]:bg-transparent [&amp;_code]:p-0"><!--$!--><template data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></pre>
                                            <p>The build system supports multiple targets:</p>
                                            <ul>
                                                <li>Desktop application (Electron-based)</li>
                                                <li>Web version (browser-based)</li>
                                                <li>Remote server (for remote development)</li>
                                            </ul>
                                            <p>Sources:</p>
                                            <ul>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/package.json#L12-L69"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>package.json</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">12-69</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/build/package.json#L4-L69"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>build/package.json</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">4-69</span></a>
                                                </li>
                                                <li><a href="https://github.com/microsoft/vscode/blob/47618583/.npmrc#L1-L2"
                                                        target="_blank" rel="noopener noreferrer"
                                                        class="mb-1 mr-1 inline-flex items-stretch font-mono text-xs !no-underline transition-opacity hover:opacity-75"><span
                                                            class="flex items-center break-all rounded-l px-2 py-1.5 bg-[#e5e5e5] text-[#333333] dark:bg-[#252525] dark:text-[#e4e4e4]"><svg
                                                                class="mr-1.5 hidden h-3.5 w-3.5 flex-shrink-0 opacity-40 md:block"
                                                                fill="currentColor" viewBox="0 0 24 24">
                                                                <path
                                                                    d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z">
                                                                </path>
                                                            </svg>.npmrc</span><span
                                                            class="flex flex-shrink-0 items-center rounded-r border-l px-2 py-1.5 border-[#dddddd] bg-[#d8d8d8] text-[#666666] dark:border-[#333333] dark:bg-[#2a2a2a] dark:text-[#888888]">1-2</span></a>
                                                </li>
                                            </ul>
                                            <h2 id="conclusion" class="group flex items-center" data-header="true">
                                                Conclusion<button
                                                    class="relative ml-2 cursor-pointer text-gray-400 opacity-0 transition-opacity hover:text-blue-400 focus:opacity-100 group-hover:opacity-100"
                                                    aria-label="Copy link to header"><svg
                                                        xmlns="http://www.w3.org/2000/svg" width="1em" height="1em"
                                                        fill="currentColor" viewBox="0 0 256 256" class="h-4 w-4">
                                                        <path
                                                            d="M117.18,188.74a12,12,0,0,1,0,17l-5.12,5.12A58.26,58.26,0,0,1,70.6,228h0A58.62,58.62,0,0,1,29.14,127.92L63.89,93.17a58.64,58.64,0,0,1,98.56,28.11,12,12,0,1,1-23.37,5.44,34.65,34.65,0,0,0-58.22-16.58L46.11,144.89A34.62,34.62,0,0,0,70.57,204h0a34.41,34.41,0,0,0,24.49-10.14l5.11-5.12A12,12,0,0,1,117.18,188.74ZM226.83,45.17a58.65,58.65,0,0,0-82.93,0l-5.11,5.11a12,12,0,0,0,17,17l5.12-5.12a34.63,34.63,0,1,1,49,49L175.1,145.86A34.39,34.39,0,0,1,150.61,156h0a34.63,34.63,0,0,1-33.69-26.72,12,12,0,0,0-23.38,5.44A58.64,58.64,0,0,0,150.56,180h.05a58.28,58.28,0,0,0,41.47-17.17l34.75-34.75a58.62,58.62,0,0,0,0-82.91Z">
                                                        </path>
                                                    </svg></button></h2>
                                            <p>VS Code&#x27;s architecture is designed for extensibility, performance,
                                                and stability. The multi-process architecture isolates different
                                                components, the service-oriented design enables loose coupling, and the
                                                extension system allows for powerful customization.</p>
                                            <p>This overview provides a foundation for understanding the VS Code
                                                codebase. For more detailed information about specific components, refer
                                                to the dedicated pages for each subsystem.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="hidden overflow-hidden transition-[border-radius] xl:sticky xl:right-0 xl:top-20 xl:block xl:h-[calc(100vh-82px)] xl:w-64 xl:flex-shrink-0 2xl:w-72"
                        style="scrollbar-width:none">
                        <div class="flex max-h-full w-full flex-shrink-0 flex-col py-6 pt-0 text-sm lg:pb-4 lg:pt-8 xl:w-64 2xl:w-72"
                            style="scrollbar-color:var(--color-night) transparent">
                            <div>
                                <div
                                    class="mx-4 mb-3 rounded-md border border-neutral-200 bg-neutral-100 p-3 text-sm text-neutral-600 dark:border-neutral-800 dark:bg-neutral-900 dark:text-neutral-400">
                                    <p class="text-sm font-medium">Auto-refresh not enabled yet<svg
                                            xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                            fill="currentColor" viewBox="0 0 256 256"
                                            class="ml-1.5 inline-block cursor-help text-neutral-400 transition-colors hover:text-neutral-600 dark:text-neutral-500 dark:hover:text-neutral-400"
                                            data-state="closed">
                                            <path
                                                d="M128,24A104,104,0,1,0,232,128,104.11,104.11,0,0,0,128,24Zm0,192a88,88,0,1,1,88-88A88.1,88.1,0,0,1,128,216Zm16-40a8,8,0,0,1-8,8,16,16,0,0,1-16-16V128a8,8,0,0,1,0-16,16,16,0,0,1,16,16v40A8,8,0,0,1,144,176ZM112,84a12,12,0,1,1,12,12A12,12,0,0,1,112,84Z">
                                            </path>
                                        </svg></p>
                                </div>
                                <div
                                    class="mx-4 mb-3 rounded-md border border-neutral-200 bg-neutral-100 p-3 text-sm text-neutral-600 dark:border-neutral-800 dark:bg-neutral-900 dark:text-neutral-400">
                                    <p class="text-sm font-medium">Try DeepWiki on your private codebase with<!-- --> <a
                                            href="/private-repo" class="text-pacific hover:underline">Devin</a></p>
                                </div>
                            </div>
                            <h3 class="px-4 pb-5 text-lg font-medium leading-none">On this page</h3>
                            <ul style="scrollbar-width:none" class="min-h-0 flex-1 space-y-3 overflow-y-auto p-4 pt-0">
                                <li class=""><a href="#vs-code-architecture-overview"
                                        class="hover:text-primary pr-1 transition-all text-primary font-medium">VS Code
                                        Architecture Overview</a></li>
                                <li class="ml-3"><a href="#process-architecture"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Process
                                        Architecture</a></li>
                                <li class="ml-6"><a href="#main-process"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Main
                                        Process</a></li>
                                <li class="ml-6"><a href="#renderer-process"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Renderer
                                        Process</a></li>
                                <li class="ml-6"><a href="#extension-host-process"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Extension
                                        Host Process</a></li>
                                <li class="ml-6"><a href="#shared-process"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Shared
                                        Process</a></li>
                                <li class="ml-3"><a href="#core-services-architecture"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Core
                                        Services Architecture</a></li>
                                <li class="ml-3"><a href="#workbench-and-layout"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Workbench
                                        and Layout</a></li>
                                <li class="ml-3"><a href="#monaco-editor"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Monaco
                                        Editor</a></li>
                                <li class="ml-3"><a href="#extension-system"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Extension
                                        System</a></li>
                                <li class="ml-3"><a href="#configuration-system"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Configuration
                                        System</a></li>
                                <li class="ml-3"><a href="#dependency-management"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Dependency
                                        Management</a></li>
                                <li class="ml-3"><a href="#build-system"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Build
                                        System</a></li>
                                <li class="ml-3"><a href="#conclusion"
                                        class="hover:text-primary pr-1 font-normal transition-all text-secondary">Conclusion</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div
                        class="pointer-events-none fixed bottom-2 left-2 right-2 mt-2 md:bottom-4 md:left-0 md:right-0">
                        <div class="z-10 mx-auto max-w-3xl"><!--$!--><template
                                data-dgst="BAILOUT_TO_CLIENT_SIDE_RENDERING"></template><!--/$--></div>
                    </div>
                </div>
            </div>
        </div><!--/$-->
    </div>
    <script src="/_next/static/chunks/webpack-acbbbb548492d4a6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3"
        async=""></script>
    <script>(self.__next_f = self.__next_f || []).push([0])</script>
    <script>self.__next_f.push([1, "1:\"$Sreact.fragment\"\n2:I[54276,[\"9453\",\"static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8970\",\"static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1585\",\"static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5009\",\"static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3377\",\"static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"6671\",\"static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9853\",\"static/chunks/9853-ba5965ca136d44c2.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"7177\",\"static/chunks/app/layout-54da70140f7127e0.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\"],\"RootProvider\"]\n3:I[87555,[],\"\"]\n4:I[31295,[],\"\"]\n6:I[90894,[],\"ClientPageRoot\"]\n7:I[87667,[\"9453\",\"static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8970\",\"static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1585\",\"static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2545\",\"static/chunks/c16f53c3-c80d3b6d0c4af7a0.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"537\",\"static/chunks/537-d9d5e9261de3e69c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5009\",\"static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2136\",\"static/chunks/2136-0f8d797058c844d4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3377\",\"static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"6671\",\"static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9970\",\"static/chunks/9970-05da82a5b9af6015.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1235\",\"static/chunks/1235-2bb070afbba964c5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4889\",\"static/chunks/4889-88dda955466eba30.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"168\",\"static/chunks/168-d8e567d7acd9a9f8.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9853\",\"static/chunks/9853-ba5965ca136d44c2.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2193\",\"static/chunks/2"])</script>
    <script>self.__next_f.push([1, "193-bd88dde7e3a2e1a4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8335\",\"static/chunks/8335-cd2a11b5dbfe138d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3285\",\"static/chunks/app/%5Borg%5D/%5Brepo%5D/%5B%5B...wikiRoutes%5D%5D/page-dfd2d90d0481fb54.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\"],\"default\"]\na:I[59665,[],\"OutletBoundary\"]\nd:I[59665,[],\"ViewportBoundary\"]\nf:I[59665,[],\"MetadataBoundary\"]\n11:I[26614,[],\"\"]\n:HL[\"/_next/static/media/569ce4b8f30dc480-s.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n:HL[\"/_next/static/media/93f479601ee12b01-s.p.woff2\",\"font\",{\"crossOrigin\":\"\",\"type\":\"font/woff2\"}]\n:HL[\"/_next/static/css/f30152c0704fba31.css?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"style\"]\n:HL[\"/_next/static/css/d162e991e7f49167.css?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"style\"]\n"])</script>
    <script>self.__next_f.push([1, "0:{\"P\":null,\"b\":\"4OK_GYCBLB5CelA8Qa6VZ\",\"p\":\"\",\"c\":[\"\",\"microsoft\",\"vscode\",\"\"],\"i\":false,\"f\":[[[\"\",{\"children\":[[\"org\",\"microsoft\",\"d\"],{\"children\":[[\"repo\",\"vscode\",\"d\"],{\"children\":[[\"wikiRoutes\",\"\",\"oc\"],{\"children\":[\"__PAGE__\",{}]}]}]}]},\"$undefined\",\"$undefined\",true],[\"\",[\"$\",\"$1\",\"c\",{\"children\":[[[\"$\",\"link\",\"0\",{\"rel\":\"stylesheet\",\"href\":\"/_next/static/css/f30152c0704fba31.css?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}],[\"$\",\"link\",\"1\",{\"rel\":\"stylesheet\",\"href\":\"/_next/static/css/d162e991e7f49167.css?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"precedence\":\"next\",\"crossOrigin\":\"$undefined\",\"nonce\":\"$undefined\"}]],[\"$\",\"html\",null,{\"lang\":\"en\",\"suppressHydrationWarning\":true,\"children\":[[\"$\",\"head\",null,{}],[\"$\",\"body\",null,{\"className\":\"__variable_5cfdac font-geist-sans relative min-h-screen __variable_9a8899 bg-background antialiased\",\"children\":[\"$\",\"$L2\",null,{\"children\":[\"$\",\"$L3\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L4\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":[[[\"$\",\"title\",null,{\"children\":\"404: This page could not be found.\"}],[\"$\",\"div\",null,{\"style\":{\"fontFamily\":\"system-ui,\\\"Segoe UI\\\",Roboto,Helvetica,Arial,sans-serif,\\\"Apple Color Emoji\\\",\\\"Segoe UI Emoji\\\"\",\"height\":\"100vh\",\"textAlign\":\"center\",\"display\":\"flex\",\"flexDirection\":\"column\",\"alignItems\":\"center\",\"justifyContent\":\"center\"},\"children\":[\"$\",\"div\",null,{\"children\":[[\"$\",\"style\",null,{\"dangerouslySetInnerHTML\":{\"__html\":\"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}\"}}],[\"$\",\"h1\",null,{\"className\":\"next-error-h1\",\"style\":{\"display\":\"inline-block\",\"margin\":\"0 20px 0 0\",\"padding\":\"0 23px 0 0\",\"fontSize\":24,\"fontWeight\":500,\"verticalAlign\":\"top\",\"lineHeight\":\"49px\"},\"children\":404}],[\"$\",\"div\",null,{\"style\":{\"display\":\"inline-block\"},\"children\":[\"$\",\"h2\",null,{\"style\":{\"fontSize\":14,\"fontWeight\":400,\"lineHeight\":\"49px\",\"margin\":0},\"children\":\"This page could not be found.\"}]}]]}]}]],[]],\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]}]}]]}]]}],{\"children\":[[\"org\",\"microsoft\",\"d\"],[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L3\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L4\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[[\"repo\",\"vscode\",\"d\"],[\"$\",\"$1\",\"c\",{\"children\":[null,\"$L5\"]}],{\"children\":[[\"wikiRoutes\",\"\",\"oc\"],[\"$\",\"$1\",\"c\",{\"children\":[null,[\"$\",\"$L3\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L4\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]]}],{\"children\":[\"__PAGE__\",[\"$\",\"$1\",\"c\",{\"children\":[[\"$\",\"$L6\",null,{\"Component\":\"$7\",\"searchParams\":{},\"params\":{\"org\":\"microsoft\",\"repo\":\"vscode\"},\"promises\":[\"$@8\",\"$@9\"]}],\"$undefined\",null,[\"$\",\"$La\",null,{\"children\":[\"$Lb\",\"$Lc\",null]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false],[\"$\",\"$1\",\"h\",{\"children\":[null,[\"$\",\"$1\",\"5L2vaPw7E0SnFYRuPBmaD\",{\"children\":[[\"$\",\"$Ld\",null,{\"children\":\"$Le\"}],[\"$\",\"meta\",null,{\"name\":\"next-size-adjust\",\"content\":\"\"}]]}],[\"$\",\"$Lf\",null,{\"children\":\"$L10\"}]]}],false]],\"m\":\"$undefined\",\"G\":[\"$11\",\"$undefined\"],\"s\":false,\"S\":true}\n"])</script>
    <script>self.__next_f.push([1, "12:I[93691,[\"9453\",\"static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8970\",\"static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1585\",\"static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4129\",\"static/chunks/7bf36345-20a79815585d2583.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"537\",\"static/chunks/537-d9d5e9261de3e69c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5009\",\"static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2136\",\"static/chunks/2136-0f8d797058c844d4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3377\",\"static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"6671\",\"static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9970\",\"static/chunks/9970-05da82a5b9af6015.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1235\",\"static/chunks/1235-2bb070afbba964c5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4889\",\"static/chunks/4889-88dda955466eba30.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"7646\",\"static/chunks/7646-a48026d39d9219b5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3449\",\"static/chunks/3449-34296dd8d39c9ba6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4393\",\"static/chunks/4393-60e403da10f49831.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5805\",\"static/chunks/5805-44d30e670d12436d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2933\",\"static/chunks/app/%5Borg%5D/%5Brepo%5D/layout-f6177459e9003494.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\"],\"CodebaseWikiHeader\"]\n13:I[6874,[\"9453\",\"static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8970\",\"static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1585\",\"static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4129\",\"static/chunks/7bf36345-20a79815585d2583.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"537\",\"static/chunks/537-d9d5e9261de3e69c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5009\",\"static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkY"])</script>
    <script>self.__next_f.push([1, "MSGDN3\",\"2136\",\"static/chunks/2136-0f8d797058c844d4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3377\",\"static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"6671\",\"static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9970\",\"static/chunks/9970-05da82a5b9af6015.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1235\",\"static/chunks/1235-2bb070afbba964c5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4889\",\"static/chunks/4889-88dda955466eba30.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"7646\",\"static/chunks/7646-a48026d39d9219b5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3449\",\"static/chunks/3449-34296dd8d39c9ba6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4393\",\"static/chunks/4393-60e403da10f49831.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5805\",\"static/chunks/5805-44d30e670d12436d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2933\",\"static/chunks/app/%5Borg%5D/%5Brepo%5D/layout-f6177459e9003494.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\"],\"\"]\n14:\"$Sreact.suspense\"\n15:I[67807,[\"9453\",\"static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8970\",\"static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1585\",\"static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4129\",\"static/chunks/7bf36345-20a79815585d2583.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"537\",\"static/chunks/537-d9d5e9261de3e69c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5009\",\"static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2136\",\"static/chunks/2136-0f8d797058c844d4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3377\",\"static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"6671\",\"static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9970\",\"static/chunks/9970-05da82a5b9af6015.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1235\",\"static/chunks/1235-2bb070afbba964c5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4889\",\"static/chunks/4889-88dda955466eba30.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"7646"])</script>
    <script>self.__next_f.push([1, "\",\"static/chunks/7646-a48026d39d9219b5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3449\",\"static/chunks/3449-34296dd8d39c9ba6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4393\",\"static/chunks/4393-60e403da10f49831.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5805\",\"static/chunks/5805-44d30e670d12436d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2933\",\"static/chunks/app/%5Borg%5D/%5Brepo%5D/layout-f6177459e9003494.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\"],\"ShinyText\"]\n8:{}\n9:{\"org\":\"microsoft\",\"repo\":\"vscode\"}\n5:[\"$\",\"div\",null,{\"className\":\"flex min-h-screen w-full flex-col text-white\",\"id\":\"codebase-wiki-repo-page\",\"children\":[[\"$\",\"$L12\",null,{\"hideOnSm\":true,\"children\":[\"$\",\"div\",null,{\"className\":\"flex flex-col gap-1\",\"children\":[[\"$\",\"$L13\",null,{\"href\":\"/\",\"className\":\"block text-xs font-medium leading-none text-white sm:hidden md:text-lg\",\"children\":\"DeepWiki\"}],[\"$\",\"p\",null,{\"className\":\"text-text-secondary text-sm font-normal leading-none md:text-lg\",\"children\":[\"$\",\"a\",null,{\"href\":\"https://github.com/microsoft/vscode\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"className\":\"text-[#8f8f8f] transition-colors hover:text-black dark:hover:text-white\",\"children\":\"microsoft/vscode\"}]}]]}]}],[\"$\",\"$14\",null,{\"fallback\":[\"$\",\"div\",null,{\"className\":\"container-wrapper flex flex-1 items-center justify-center px-4\",\"children\":[\"$\",\"$L15\",null,{\"className\":\"text-center text-lg\",\"text\":\"Loading microsoft/vscode...\",\"speed\":1}]}],\"children\":\"$L16\"}]]}]\n"])</script>
    <script>self.__next_f.push([1, "e:[[\"$\",\"meta\",\"0\",{\"charSet\":\"utf-8\"}],[\"$\",\"meta\",\"1\",{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1\"}]]\nb:null\n"])</script>
    <script>self.__next_f.push([1, "17:I[60168,[\"9453\",\"static/chunks/b1298b8d-549c141f97a3b262.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"8970\",\"static/chunks/378e5a93-3b0f971d3611a8a5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1585\",\"static/chunks/f7f68e2d-40290491c524df5c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4129\",\"static/chunks/7bf36345-20a79815585d2583.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"537\",\"static/chunks/537-d9d5e9261de3e69c.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5009\",\"static/chunks/5009-cf1c1739f4eccbfa.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2136\",\"static/chunks/2136-0f8d797058c844d4.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3377\",\"static/chunks/3377-d302682beb4206f6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"6671\",\"static/chunks/6671-b0da8a89e8d16b02.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"9970\",\"static/chunks/9970-05da82a5b9af6015.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"1235\",\"static/chunks/1235-2bb070afbba964c5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4889\",\"static/chunks/4889-88dda955466eba30.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"7646\",\"static/chunks/7646-a48026d39d9219b5.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"3449\",\"static/chunks/3449-34296dd8d39c9ba6.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"4393\",\"static/chunks/4393-60e403da10f49831.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"5805\",\"static/chunks/5805-44d30e670d12436d.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\",\"2933\",\"static/chunks/app/%5Borg%5D/%5Brepo%5D/layout-f6177459e9003494.js?dpl=dpl_9YgLbzZSV9Zzw7HzcsGmkYMSGDN3\"],\"WikiLayout\"]\n18:T5cfc,"])</script>
    <script>self.__next_f.push([1, "# VS Code Architecture Overview\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [.npmrc](.npmrc)\n- [build/.moduleignore](build/.moduleignore)\n- [build/.webignore](build/.webignore)\n- [build/azure-pipelines/linux/setup-env.sh](build/azure-pipelines/linux/setup-env.sh)\n- [build/checksums/electron.txt](build/checksums/electron.txt)\n- [build/checksums/nodejs.txt](build/checksums/nodejs.txt)\n- [build/linux/debian/calculate-deps.js](build/linux/debian/calculate-deps.js)\n- [build/linux/debian/calculate-deps.ts](build/linux/debian/calculate-deps.ts)\n- [build/linux/debian/dep-lists.js](build/linux/debian/dep-lists.js)\n- [build/linux/debian/dep-lists.ts](build/linux/debian/dep-lists.ts)\n- [build/linux/dependencies-generator.js](build/linux/dependencies-generator.js)\n- [build/linux/dependencies-generator.ts](build/linux/dependencies-generator.ts)\n- [build/linux/rpm/dep-lists.js](build/linux/rpm/dep-lists.js)\n- [build/linux/rpm/dep-lists.ts](build/linux/rpm/dep-lists.ts)\n- [build/monaco/monaco.d.ts.recipe](build/monaco/monaco.d.ts.recipe)\n- [build/package.json](build/package.json)\n- [cgmanifest.json](cgmanifest.json)\n- [extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts](extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts)\n- [extensions/vscode-colorize-tests/src/colorizer.test.ts](extensions/vscode-colorize-tests/src/colorizer.test.ts)\n- [package-lock.json](package-lock.json)\n- [package.json](package.json)\n- [remote/.npmrc](remote/.npmrc)\n- [remote/package-lock.json](remote/package-lock.json)\n- [remote/package.json](remote/package.json)\n- [remote/web/package-lock.json](remote/web/package-lock.json)\n- [remote/web/package.json](remote/web/package.json)\n- [src/vs/code/electron-main/app.ts](src/vs/code/electron-main/app.ts)\n- [src/vs/code/electron-main/main.ts](src/vs/code/electron-main/main.ts)\n- [src/vs/code/node/cliProcessMain.ts](src/vs/code/node/cliProcessMain.ts)\n- [src/vs/editor/browser/editorBrowser.ts](src/vs/editor/browser/editorBrowser.ts)\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts](src/vs/editor/browser/view/domLineBreaksComputer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts](src/vs/editor/browser/viewParts/minimap/minimap.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts](src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts](src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts)\n- [src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts](src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts)\n- [src/vs/editor/common/config/editorConfigurationSchema.ts](src/vs/editor/common/config/editorConfigurationSchema.ts)\n- [src/vs/editor/common/config/editorOptions.ts](src/vs/editor/common/config/editorOptions.ts)\n- [src/vs/editor/common/core/rgba.ts](src/vs/editor/common/core/rgba.ts)\n- [src/vs/editor/common/editorCommon.ts](src/vs/editor/common/editorCommon.ts)\n- [src/vs/editor/common/model.ts](src/vs/editor/common/model.ts)\n- [src/vs/editor/common/model/guidesTextModelPart.ts](src/vs/editor/common/model/guidesTextModelPart.ts)\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/standalone/standaloneEnums.ts](src/vs/editor/common/standalone/standaloneEnums.ts)\n- [src/vs/editor/common/textModelGuides.ts](src/vs/editor/common/textModelGuides.ts)\n- [src/vs/editor/common/viewModel/minimapTokensColorTracker.ts](src/vs/editor/common/viewModel/minimapTokensColorTracker.ts)\n- [src/vs/editor/common/viewModel/modelLineProjection.ts](src/vs/editor/common/viewModel/modelLineProjection.ts)\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts](src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)\n- [src/vs/editor/common/viewModel/viewModelLines.ts](src/vs/editor/common/viewModel/viewModelLines.ts)\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts](src/vs/editor/standalone/browser/standaloneCodeEditor.ts)\n- [src/vs/editor/standalone/browser/standaloneEditor.ts](src/vs/editor/standalone/browser/standaloneEditor.ts)\n- [src/vs/editor/test/browser/view/minimapCharRenderer.test.ts](src/vs/editor/test/browser/view/minimapCharRenderer.test.ts)\n- [src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts](src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts)\n- [src/vs/editor/test/common/model/modelInjectedText.test.ts](src/vs/editor/test/common/model/modelInjectedText.test.ts)\n- [src/vs/editor/test/common/viewModel/lineBreakData.test.ts](src/vs/editor/test/common/viewModel/lineBreakData.test.ts)\n- [src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts](src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts)\n- [src/vs/monaco.d.ts](src/vs/monaco.d.ts)\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts](src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts)\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts](src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts)\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts](src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts)\n- [src/vs/platform/environment/test/node/nativeModules.integrationTest.ts](src/vs/platform/environment/test/node/nativeModules.integrationTest.ts)\n- [src/vs/platform/launch/electron-main/launchMainService.ts](src/vs/platform/launch/electron-main/launchMainService.ts)\n- [src/vs/platform/menubar/electron-main/menubar.ts](src/vs/platform/menubar/electron-main/menubar.ts)\n- [src/vs/platform/native/common/native.ts](src/vs/platform/native/common/native.ts)\n- [src/vs/platform/native/electron-main/nativeHostMainService.ts](src/vs/platform/native/electron-main/nativeHostMainService.ts)\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts](src/vs/platform/sharedProcess/electron-main/sharedProcess.ts)\n- [src/vs/platform/sharedProcess/node/sharedProcess.ts](src/vs/platform/sharedProcess/node/sharedProcess.ts)\n- [src/vs/platform/window/common/window.ts](src/vs/platform/window/common/window.ts)\n- [src/vs/platform/window/electron-main/window.ts](src/vs/platform/window/electron-main/window.ts)\n- [src/vs/platform/windows/electron-main/windowImpl.ts](src/vs/platform/windows/electron-main/windowImpl.ts)\n- [src/vs/platform/windows/electron-main/windows.ts](src/vs/platform/windows/electron-main/windows.ts)\n- [src/vs/platform/windows/electron-main/windowsMainService.ts](src/vs/platform/windows/electron-main/windowsMainService.ts)\n- [src/vs/platform/windows/test/electron-main/windowsFinder.test.ts](src/vs/platform/windows/test/electron-main/windowsFinder.test.ts)\n- [src/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts](src/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts)\n- [src/vs/workbench/electron-sandbox/desktop.contribution.ts](src/vs/workbench/electron-sandbox/desktop.contribution.ts)\n- [src/vs/workbench/test/electron-sandbox/workbenchTestServices.ts](src/vs/workbench/test/electron-sandbox/workbenchTestServices.ts)\n- [test/automation/package.json](test/automation/package.json)\n- [test/integration/browser/package.json](test/integration/browser/package.json)\n- [test/smoke/package.json](test/smoke/package.json)\n\n\u003c/details\u003e\n\n\n\nThis document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core services, and the main building blocks that make up VS Code.\n\nFor detailed information about specific subsystems, please refer to the dedicated pages for each component, such as the [Monaco Editor](#3), [Extension System](#4), or [Integrated Terminal](#5).\n\n## Process Architecture\n\nVS Code uses a multi-process architecture to ensure stability, performance, and security. The application is split into several processes, each with specific responsibilities:\n\n```mermaid\nflowchart TD\n    subgraph \"Main Process\"\n        Main[\"Main Process\u003cbr\u003e(app.ts)\"]\n        WindowsService[\"WindowsMainService\"]\n        SharedProcessService[\"SharedProcessService\"]\n        UpdateService[\"UpdateService\"]\n        MenuService[\"MenubarMainService\"]\n    end\n    \n    subgraph \"Renderer Process\"\n        Workbench[\"Workbench\"]\n        EditorPart[\"EditorPart\"]\n        TerminalPart[\"TerminalPart\"]\n        SidebarPart[\"SidebarPart\"]\n        PanelPart[\"PanelPart\"]\n        StatusbarPart[\"StatusbarPart\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHost[\"Extension Host\"]\n        ExtensionRuntime[\"Extension Runtime\"]\n        LanguageFeatures[\"Language Features\"]\n        DebugAdapters[\"Debug Adapters\"]\n    end\n    \n    subgraph \"Shared Process\"\n        ExtensionManagement[\"Extension Management\"]\n        FileSearch[\"File Search\"]\n        Telemetry[\"Telemetry\"]\n        Updates[\"Update Management\"]\n    end\n    \n    Main --\u003e WindowsService\n    Main --\u003e SharedProcessService\n    Main --\u003e UpdateService\n    Main --\u003e MenuService\n    \n    WindowsService --\u003e Workbench\n    \n    Workbench --\u003e EditorPart\n    Workbench --\u003e TerminalPart\n    Workbench --\u003e SidebarPart\n    Workbench --\u003e PanelPart\n    Workbench --\u003e StatusbarPart\n    \n    Workbench \u003c--\u003e|\"IPC\"| ExtHost\n    \n    ExtHost --\u003e ExtensionRuntime\n    ExtHost --\u003e LanguageFeatures\n    ExtHost --\u003e DebugAdapters\n    \n    SharedProcessService --\u003e SharedProcess\n    \n    Workbench \u003c--\u003e|\"IPC\"| SharedProcess\n    \n    SharedProcess --\u003e ExtensionManagement\n    SharedProcess --\u003e FileSearch\n    SharedProcess --\u003e Telemetry\n    SharedProcess --\u003e Updates\n```\n\n### Main Process\n\nThe main process is the entry point of the application and is responsible for:\n- Managing application lifecycle\n- Creating and managing windows\n- Handling native OS integration\n- Coordinating other processes\n\nThe main process is implemented in `CodeApplication` class, which initializes all the core services and sets up the necessary event listeners.\n\nSources:\n- [src/vs/code/electron-main/app.ts:130-1000]()\n- [src/vs/code/electron-main/main.ts:84-200]()\n\n### Renderer Process\n\nThe renderer process hosts the VS Code workbench UI and is responsible for:\n- Rendering the user interface\n- Handling user interactions\n- Managing editors and views\n- Communicating with other processes\n\nEach window in VS Code has its own renderer process, which helps isolate windows from each other.\n\nSources:\n- [src/vs/platform/windows/electron-main/windowImpl.ts:1-100]()\n- [src/vs/platform/windows/electron-main/windowsMainService.ts:183-300]()\n\n### Extension Host Process\n\nThe extension host process runs extensions in a separate process to ensure stability:\n- Isolates extension code from the main application\n- Provides extension API surface\n- Communicates with the renderer process via IPC\n- Hosts language services, debuggers, and other extension features\n\nSources:\n- [src/vs/workbench/api/node/extHost.api.impl.ts]()\n\n### Shared Process\n\nThe shared process handles background tasks that are shared across windows:\n- Extension management (installation, updates)\n- File search and indexing\n- Telemetry\n- Update management\n\nSources:\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts:1-100]()\n\n## Core Services Architecture\n\nVS Code is built on a service-oriented architecture with dependency injection. The core services are organized in a hierarchical manner:\n\n```mermaid\ngraph TD\n    IInstantiationService[\"IInstantiationService\u003cbr\u003e(Service Factory)\"]\n    \n    IEditorService[\"IEditorService\u003cbr\u003e(Editor Management)\"]\n    IWorkbenchLayoutService[\"IWorkbenchLayoutService\u003cbr\u003e(Layout Management)\"]\n    IConfigurationService[\"IConfigurationService\u003cbr\u003e(Configuration)\"]\n    IExtensionService[\"IExtensionService\u003cbr\u003e(Extension Management)\"]\n    ITerminalService[\"ITerminalService\u003cbr\u003e(Terminal Management)\"]\n    IDebugService[\"IDebugService\u003cbr\u003e(Debug Management)\"]\n    ITaskService[\"ITaskService\u003cbr\u003e(Task Management)\"]\n    IWindowsMainService[\"IWindowsMainService\u003cbr\u003e(Window Management)\"]\n    ILifecycleMainService[\"ILifecycleMainService\u003cbr\u003e(Lifecycle Management)\"]\n    \n    IInstantiationService --\u003e IEditorService\n    IInstantiationService --\u003e IWorkbenchLayoutService\n    IInstantiationService --\u003e IConfigurationService\n    IInstantiationService --\u003e IExtensionService\n    IInstantiationService --\u003e ITerminalService\n    IInstantiationService --\u003e IDebugService\n    IInstantiationService --\u003e ITaskService\n    IInstantiationService --\u003e IWindowsMainService\n    IInstantiationService --\u003e ILifecycleMainService\n    \n    IEditorService --\u003e IWorkbenchLayoutService\n    ITerminalService --\u003e IWorkbenchLayoutService\n    \n    IDebugService --\u003e ITerminalService\n    ITaskService --\u003e ITerminalService\n    \n    IExtensionService --\u003e IDebugService\n    IExtensionService --\u003e ITaskService\n    \n    IConfigurationService --\u003e IEditorService\n    IConfigurationService --\u003e ITerminalService\n    IConfigurationService --\u003e IDebugService\n    IConfigurationService --\u003e ITaskService\n```\n\nThe service architecture uses interfaces to define service contracts and implementations to provide the actual functionality. This allows for:\n- Loose coupling between components\n- Easier testing through service mocking\n- Extensibility through service replacement\n\nSources:\n- [src/vs/platform/instantiation/common/instantiation.js]()\n- [src/vs/code/electron-main/app.ts:142-154]()\n\n## Workbench and Layout\n\nThe workbench is the main UI component of VS Code, providing the overall layout and hosting various parts:\n\n```mermaid\ngraph TD\n    subgraph \"Workbench Layout\"\n        Layout[\"Layout\"]\n        EditorPart[\"EditorPart\"]\n        SidebarPart[\"SidebarPart\"]\n        PanelPart[\"PanelPart\"]\n        AuxiliaryBarPart[\"AuxiliaryBarPart\"]\n        StatusBarPart[\"StatusBarPart\"]\n        TitleBarPart[\"TitleBarPart\"]\n        ActivityBarPart[\"ActivityBarPart\"]\n    end\n    \n    subgraph \"Editor Management\"\n        EditorService[\"EditorService\"]\n        EditorGroupsService[\"EditorGroupsService\"]\n        EditorGroup[\"EditorGroup\"]\n        EditorInput[\"EditorInput\"]\n        EditorPane[\"EditorPane\"]\n    end\n    \n    subgraph \"Editor Types\"\n        TextEditor[\"TextEditor\"]\n        NotebookEditor[\"NotebookEditor\"]\n        TerminalEditor[\"TerminalEditor\"]\n        ChatEditor[\"ChatEditor\"]\n        CustomEditor[\"CustomEditor\"]\n    end\n    \n    Layout --\u003e EditorPart\n    Layout --\u003e SidebarPart\n    Layout --\u003e PanelPart\n    Layout --\u003e AuxiliaryBarPart\n    Layout --\u003e StatusBarPart\n    Layout --\u003e TitleBarPart\n    Layout --\u003e ActivityBarPart\n    \n    EditorPart --\u003e EditorGroupsService\n    EditorService --\u003e EditorGroupsService\n    \n    EditorGroupsService --\u003e EditorGroup\n    EditorGroup --\u003e EditorInput\n    EditorInput --\u003e EditorPane\n    \n    EditorPane --\u003e TextEditor\n    EditorPane --\u003e NotebookEditor\n    EditorPane --\u003e TerminalEditor\n    EditorPane --\u003e ChatEditor\n    EditorPane --\u003e CustomEditor\n```\n\nThe workbench layout is highly customizable, allowing users to resize, move, and hide different parts according to their preferences.\n\nSources:\n- [src/vs/workbench/browser/layout.ts]()\n- [src/vs/workbench/browser/parts/editor/editorPart.ts]()\n\n## Monaco Editor\n\nAt the core of VS Code's editing capabilities is the Monaco Editor, a sophisticated text editor component:\n\n```mermaid\ngraph TD\n    subgraph \"Monaco Editor\"\n        CodeEditorWidget[\"CodeEditorWidget\"]\n        TextModel[\"TextModel\"]\n        ViewModel[\"ViewModel\"]\n        ListView[\"ListView\"]\n    end\n    \n    subgraph \"Editor Features\"\n        CompletionProvider[\"CompletionProvider\"]\n        HoverProvider[\"HoverProvider\"]\n        DefinitionProvider[\"DefinitionProvider\"]\n        FormatProvider[\"FormatProvider\"]\n        DiagnosticsProvider[\"DiagnosticsProvider\"]\n    end\n    \n    subgraph \"Extension Integration\"\n        ExtHostLanguageFeatures[\"ExtHostLanguageFeatures\"]\n        MainThreadLanguageFeatures[\"MainThreadLanguageFeatures\"]\n    end\n    \n    CodeEditorWidget --\u003e TextModel\n    CodeEditorWidget --\u003e ViewModel\n    CodeEditorWidget --\u003e ListView\n    \n    ViewModel --\u003e TextModel\n    \n    MainThreadLanguageFeatures --\u003e CompletionProvider\n    MainThreadLanguageFeatures --\u003e HoverProvider\n    MainThreadLanguageFeatures --\u003e DefinitionProvider\n    MainThreadLanguageFeatures --\u003e FormatProvider\n    MainThreadLanguageFeatures --\u003e DiagnosticsProvider\n    \n    ExtHostLanguageFeatures \u003c--\u003e|\"RPC\"| MainThreadLanguageFeatures\n```\n\nThe Monaco Editor is composed of several key components:\n- **TextModel**: Manages the text content and provides APIs for text manipulation\n- **ViewModel**: Handles the visual representation of the text model, including line wrapping and decorations\n- **CodeEditorWidget**: The main editor component that integrates the model, view, and user interactions\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:178-410]()\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:47-100]()\n- [src/vs/monaco.d.ts:1-100]()\n\n## Extension System\n\nVS Code's extension system allows for powerful customization and additional functionality:\n\n```mermaid\ngraph TD\n    subgraph \"Main Thread (Renderer Process)\"\n        MainThreadAPI[\"Main Thread API\"]\n        MainThreadExtensionService[\"MainThreadExtensionService\"]\n        MainThreadLanguageFeatures[\"MainThreadLanguageFeatures\"]\n        MainThreadDebug[\"MainThreadDebugService\"]\n        MainThreadTerminal[\"MainThreadTerminalService\"]\n        MainThreadTask[\"MainThreadTaskService\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHostAPI[\"Extension Host API\"]\n        ExtHostExtensionService[\"ExtHostExtensionService\"]\n        ExtHostLanguageFeatures[\"ExtHostLanguageFeatures\"]\n        ExtHostDebug[\"ExtHostDebugService\"]\n        ExtHostTerminal[\"ExtHostTerminalService\"]\n        ExtHostTask[\"ExtHostTaskService\"]\n        \n        Extensions[\"Extensions\"]\n    end\n    \n    MainThreadAPI \u003c--\u003e|\"RPC Protocol\"| ExtHostAPI\n    \n    MainThreadExtensionService \u003c--\u003e|\"RPC\"| ExtHostExtensionService\n    MainThreadLanguageFeatures \u003c--\u003e|\"RPC\"| ExtHostLanguageFeatures\n    MainThreadDebug \u003c--\u003e|\"RPC\"| ExtHostDebug\n    MainThreadTerminal \u003c--\u003e|\"RPC\"| ExtHostTerminal\n    MainThreadTask \u003c--\u003e|\"RPC\"| ExtHostTask\n    \n    Extensions --\u003e ExtHostExtensionService\n    Extensions --\u003e ExtHostLanguageFeatures\n    Extensions --\u003e ExtHostDebug\n    Extensions --\u003e ExtHostTerminal\n    Extensions --\u003e ExtHostTask\n```\n\nThe extension system uses a proxy-based architecture to communicate between the main thread and extension host process. This ensures that extensions can't directly affect the stability of the main application.\n\nSources:\n- [src/vs/workbench/api/browser/mainThreadExtensionService.ts]()\n- [src/vs/workbench/api/common/extHost.protocol.ts]()\n\n## Configuration System\n\nVS Code's configuration system manages settings from various sources:\n\n```mermaid\ngraph TD\n    subgraph \"Configuration Sources\"\n        DefaultConfig[\"Default Configuration\"]\n        UserConfig[\"User Configuration\"]\n        WorkspaceConfig[\"Workspace Configuration\"]\n        FolderConfig[\"Folder Configuration\"]\n        MemoryConfig[\"Memory Configuration\"]\n    end\n    \n    subgraph \"Configuration Services\"\n        ConfigurationService[\"ConfigurationService\"]\n        ConfigurationRegistry[\"ConfigurationRegistry\"]\n        ConfigurationEditingService[\"ConfigurationEditingService\"]\n    end\n    \n    subgraph \"Extension Integration\"\n        ExtensionContributions[\"Extension Contributions\"]\n        ConfigurationExtensionPoint[\"Configuration Extension Point\"]\n    end\n    \n    DefaultConfig --\u003e ConfigurationService\n    UserConfig --\u003e ConfigurationService\n    WorkspaceConfig --\u003e ConfigurationService\n    FolderConfig --\u003e ConfigurationService\n    MemoryConfig --\u003e ConfigurationService\n    \n    ExtensionContributions --\u003e ConfigurationExtensionPoint\n    ConfigurationExtensionPoint --\u003e ConfigurationRegistry\n    ConfigurationRegistry --\u003e ConfigurationService\n    \n    ConfigurationService --\u003e ConfigurationEditingService\n```\n\nThe configuration system merges settings from multiple sources with a specific precedence order:\n1. Default settings\n2. User settings\n3. Workspace settings\n4. Folder-specific settings\n5. Memory settings (programmatically set)\n\nSources:\n- [src/vs/platform/configuration/common/configuration.js]()\n- [src/vs/platform/configuration/common/configurationRegistry.js]()\n- [src/vs/editor/common/config/editorOptions.ts:52-786]()\n\n## Dependency Management\n\nVS Code uses npm for dependency management, with a carefully curated set of dependencies:\n\n```mermaid\ngraph TD\n    VSCode[\"VS Code\"]\n    \n    subgraph \"Core Dependencies\"\n        Electron[\"Electron\"]\n        Monaco[\"Monaco Editor\"]\n        XTerm[\"xterm.js\"]\n        Oniguruma[\"vscode-oniguruma\"]\n        TextMate[\"vscode-textmate\"]\n    end\n    \n    subgraph \"Platform-specific Dependencies\"\n        NodePty[\"node-pty\"]\n        NativeKeymap[\"native-keymap\"]\n        NativeWatchdog[\"native-watchdog\"]\n        Ripgrep[\"@vscode/ripgrep\"]\n        SQLite[\"@vscode/sqlite3\"]\n    end\n    \n    VSCode --\u003e Electron\n    VSCode --\u003e Monaco\n    VSCode --\u003e XTerm\n    VSCode --\u003e Oniguruma\n    VSCode --\u003e TextMate\n    \n    VSCode --\u003e NodePty\n    VSCode --\u003e NativeKeymap\n    VSCode --\u003e NativeWatchdog\n    VSCode --\u003e Ripgrep\n    VSCode --\u003e SQLite\n```\n\nThe main dependencies are defined in `package.json` and include:\n- **Electron**: The framework for building cross-platform desktop applications\n- **Monaco Editor**: The core text editor component\n- **xterm.js**: Terminal emulation library\n- **vscode-oniguruma** and **vscode-textmate**: For syntax highlighting\n- Various native modules for platform-specific functionality\n\nSources:\n- [package.json:71-116]()\n- [remote/package.json:5-42]()\n- [remote/web/package.json:4-24]()\n\n## Build System\n\nVS Code uses a sophisticated build system based on TypeScript, Gulp, and Webpack:\n\n```mermaid\ngraph TD\n    subgraph \"Build Tools\"\n        TypeScript[\"TypeScript Compiler\"]\n        Gulp[\"Gulp Task Runner\"]\n        Webpack[\"Webpack Bundler\"]\n        ESLint[\"ESLint\"]\n    end\n    \n    subgraph \"Build Tasks\"\n        Compile[\"compile\"]\n        CompileExtensions[\"compile-extensions\"]\n        Watch[\"watch\"]\n        Lint[\"eslint\"]\n        Package[\"package\"]\n    end\n    \n    subgraph \"Output\"\n        VSCodeDesktop[\"VS Code Desktop\"]\n        VSCodeWeb[\"VS Code Web\"]\n        VSCodeServer[\"VS Code Server\"]\n    end\n    \n    TypeScript --\u003e Compile\n    Gulp --\u003e Compile\n    Gulp --\u003e CompileExtensions\n    Gulp --\u003e Watch\n    Gulp --\u003e Package\n    ESLint --\u003e Lint\n    Webpack --\u003e VSCodeWeb\n    \n    Compile --\u003e VSCodeDesktop\n    Compile --\u003e VSCodeServer\n    CompileExtensions --\u003e VSCodeDesktop\n    CompileExtensions --\u003e VSCodeServer\n    Package --\u003e VSCodeDesktop\n```\n\nThe build system supports multiple targets:\n- Desktop application (Electron-based)\n- Web version (browser-based)\n- Remote server (for remote development)\n\nSources:\n- [package.json:12-69]()\n- [build/package.json:4-69]()\n- [.npmrc:1-2]()\n\n## Conclusion\n\nVS Code's architecture is designed for extensibility, performance, and stability. The multi-process architecture isolates different components, the service-oriented design enables loose coupling, and the extension system allows for powerful customization.\n\nThis overview provides a foundation for understanding the VS Code codebase. For more detailed information about specific components, refer to the dedicated pages for each subsystem."])</script>
    <script>self.__next_f.push([1, "19:T51d7,"])</script>
    <script>self.__next_f.push([1, "# Process Architecture\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/code/electron-main/app.ts](src/vs/code/electron-main/app.ts)\n- [src/vs/code/electron-main/main.ts](src/vs/code/electron-main/main.ts)\n- [src/vs/code/node/cliProcessMain.ts](src/vs/code/node/cliProcessMain.ts)\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts](src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts)\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts](src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts)\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts](src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts)\n- [src/vs/platform/launch/electron-main/launchMainService.ts](src/vs/platform/launch/electron-main/launchMainService.ts)\n- [src/vs/platform/menubar/electron-main/menubar.ts](src/vs/platform/menubar/electron-main/menubar.ts)\n- [src/vs/platform/native/common/native.ts](src/vs/platform/native/common/native.ts)\n- [src/vs/platform/native/electron-main/nativeHostMainService.ts](src/vs/platform/native/electron-main/nativeHostMainService.ts)\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts](src/vs/platform/sharedProcess/electron-main/sharedProcess.ts)\n- [src/vs/platform/sharedProcess/node/sharedProcess.ts](src/vs/platform/sharedProcess/node/sharedProcess.ts)\n- [src/vs/platform/window/common/window.ts](src/vs/platform/window/common/window.ts)\n- [src/vs/platform/window/electron-main/window.ts](src/vs/platform/window/electron-main/window.ts)\n- [src/vs/platform/windows/electron-main/windowImpl.ts](src/vs/platform/windows/electron-main/windowImpl.ts)\n- [src/vs/platform/windows/electron-main/windows.ts](src/vs/platform/windows/electron-main/windows.ts)\n- [src/vs/platform/windows/electron-main/windowsMainService.ts](src/vs/platform/windows/electron-main/windowsMainService.ts)\n- [src/vs/platform/windows/test/electron-main/windowsFinder.test.ts](src/vs/platform/windows/test/electron-main/windowsFinder.test.ts)\n- [src/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts](src/vs/workbench/contrib/relauncher/browser/relauncher.contribution.ts)\n- [src/vs/workbench/electron-sandbox/desktop.contribution.ts](src/vs/workbench/electron-sandbox/desktop.contribution.ts)\n- [src/vs/workbench/test/electron-sandbox/workbenchTestServices.ts](src/vs/workbench/test/electron-sandbox/workbenchTestServices.ts)\n\n\u003c/details\u003e\n\n\n\nThis document explains the multi-process architecture of VS Code, including the main process, renderer process, extension host process, and shared process. It covers how these processes communicate with each other and their specific responsibilities within the application.\n\nFor information about dependency management and build system, see [Dependency Management and Build System](#1.2).\n\n## Overview\n\nVS Code uses a multi-process architecture to ensure stability, security, and performance. This architecture is built on Electron, which combines Chromium (for rendering) and Node.js (for file system access and other native capabilities).\n\nThe application is divided into several processes, each with specific responsibilities:\n\n1. **Main Process**: Coordinates the application lifecycle and manages windows\n2. **Renderer Process**: Handles the UI and workbench components\n3. **Extension Host Process**: Runs extensions in isolation\n4. **Shared Process**: Handles resource-intensive operations shared across windows\n\nThis separation provides several benefits:\n- Isolates extensions from the main UI to prevent crashes\n- Improves security through process boundaries\n- Enables better performance by distributing work across processes\n\nSources:\n- [src/vs/code/electron-main/app.ts:126-129]()\n- [src/vs/code/electron-main/main.ts:76-83]()\n\n## Process Architecture Diagram\n\n```mermaid\ngraph TD\n    subgraph \"Electron Main Process\"\n        Main[\"Main Process\u003cbr\u003e(CodeApplication)\"]\n        WindowsService[\"WindowsMainService\"]\n        SharedProcessService[\"SharedProcessService\"]\n        UpdateService[\"UpdateService\"]\n        MenuService[\"MenubarMainService\"]\n        LifecycleService[\"LifecycleMainService\"]\n        NativeHostService[\"NativeHostMainService\"]\n    end\n    \n    subgraph \"Renderer Process\"\n        Workbench[\"Workbench\"]\n        EditorPart[\"EditorPart\"]\n        TerminalPart[\"TerminalPart\"]\n        SidebarPart[\"SidebarPart\"]\n        PanelPart[\"PanelPart\"]\n        StatusbarPart[\"StatusbarPart\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHost[\"Extension Host\"]\n        ExtensionRuntime[\"Extension Runtime\"]\n        LanguageFeatures[\"Language Features\"]\n        DebugAdapters[\"Debug Adapters\"]\n    end\n    \n    subgraph \"Shared Process\"\n        SharedProcess[\"Shared Process\"]\n        ExtensionManagement[\"Extension Management\"]\n        FileSearch[\"File Search\"]\n        Telemetry[\"Telemetry\"]\n        Updates[\"Update Management\"]\n    end\n    \n    Main --\u003e WindowsService\n    Main --\u003e SharedProcessService\n    Main --\u003e UpdateService\n    Main --\u003e MenuService\n    Main --\u003e LifecycleService\n    Main --\u003e NativeHostService\n    \n    WindowsService --\u003e Workbench\n    \n    Workbench --\u003e EditorPart\n    Workbench --\u003e TerminalPart\n    Workbench --\u003e SidebarPart\n    Workbench --\u003e PanelPart\n    Workbench --\u003e StatusbarPart\n    \n    Workbench \u003c--\u003e|\"IPC\"| ExtHost\n    \n    ExtHost --\u003e ExtensionRuntime\n    ExtHost --\u003e LanguageFeatures\n    ExtHost --\u003e DebugAdapters\n    \n    SharedProcessService --\u003e SharedProcess\n    \n    Workbench \u003c--\u003e|\"IPC\"| SharedProcess\n    \n    SharedProcess --\u003e ExtensionManagement\n    SharedProcess --\u003e FileSearch\n    SharedProcess --\u003e Telemetry\n    SharedProcess --\u003e Updates\n```\n\nSources:\n- [src/vs/code/electron-main/app.ts:130-607]()\n- [src/vs/platform/windows/electron-main/windowsMainService.ts:183-657]()\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts:24-193]()\n\n## Main Process\n\nThe main process is the entry point of the application and is responsible for coordinating the overall lifecycle of VS Code. It's implemented in the `CodeApplication` class.\n\n### Responsibilities\n\n- Application lifecycle management\n- Window management\n- Menu management\n- Protocol handling\n- Security policies enforcement\n- IPC (Inter-Process Communication) coordination\n\n### Key Components\n\n1. **CodeApplication**: The core class that initializes and manages the application\n2. **WindowsMainService**: Manages window creation, focus, and lifecycle\n3. **LifecycleMainService**: Handles application startup and shutdown\n4. **MenubarMainService**: Manages the application menu\n5. **NativeHostMainService**: Provides native OS functionality\n6. **SharedProcessService**: Manages the shared process\n\n### Startup Sequence\n\n1. The application starts in `main.ts` which creates a `CodeMain` instance\n2. `CodeMain` initializes core services and claims the instance lock\n3. `CodeApplication` is created and starts the application\n4. Windows are opened based on command line arguments or previous session state\n\n```mermaid\nsequenceDiagram\n    participant Main as main.ts\n    participant CodeMain\n    participant CodeApp as CodeApplication\n    participant Windows as WindowsMainService\n    participant Shared as SharedProcess\n    \n    Main-\u003e\u003eCodeMain: startup()\n    CodeMain-\u003e\u003eCodeMain: createServices()\n    CodeMain-\u003e\u003eCodeMain: claimInstance()\n    CodeMain-\u003e\u003eCodeApp: startup()\n    CodeApp-\u003e\u003eCodeApp: setupSharedProcess()\n    CodeApp-\u003e\u003eCodeApp: initServices()\n    CodeApp-\u003e\u003eCodeApp: setupProtocolUrlHandlers()\n    CodeApp-\u003e\u003eWindows: openFirstWindow()\n    Windows-\u003e\u003eWindows: open()\n    CodeApp-\u003e\u003eShared: whenReady()\n```\n\nSources:\n- [src/vs/code/electron-main/main.ts:84-484]()\n- [src/vs/code/electron-main/app.ts:522-620]()\n- [src/vs/platform/windows/electron-main/windowsMainService.ts:272-450]()\n\n## Renderer Process\n\nThe renderer process hosts the VS Code workbench UI and is responsible for rendering the user interface. Each window in VS Code has its own renderer process.\n\n### Responsibilities\n\n- Rendering the UI (workbench)\n- Handling user interactions\n- Managing editors and views\n- Communicating with the extension host and shared process\n\n### Key Components\n\n1. **Workbench**: The main UI component that hosts all other UI parts\n2. **EditorPart**: Manages editor groups and editors\n3. **SidebarPart**: Hosts views like Explorer, Search, etc.\n4. **PanelPart**: Hosts panels like Terminal, Output, etc.\n5. **StatusbarPart**: Shows status information\n\n### Window Implementation\n\nThe `CodeWindow` class (extending `BaseWindow`) represents a window in VS Code and manages the lifecycle of the renderer process associated with it.\n\n```mermaid\nclassDiagram\n    class IBaseWindow {\n        +readonly id: number\n        +readonly win: BrowserWindow\n        +focus()\n        +setRepresentedFilename()\n        +toggleFullScreen()\n    }\n    \n    class BaseWindow {\n        #_win: BrowserWindow\n        +setWin()\n        +applyState()\n    }\n    \n    class ICodeWindow {\n        +readonly config: INativeWindowConfiguration\n        +readonly openedWorkspace?: IWorkspaceIdentifier\n        +load()\n        +reload()\n        +ready()\n    }\n    \n    class CodeWindow {\n        -readyState: ReadyState\n        +load()\n        +reload()\n        +send()\n    }\n    \n    IBaseWindow \u003c|-- BaseWindow\n    BaseWindow \u003c|-- CodeWindow\n    ICodeWindow \u003c|-- CodeWindow\n```\n\nSources:\n- [src/vs/platform/window/electron-main/window.ts:16-83]()\n- [src/vs/platform/windows/electron-main/windowImpl.ts:86-200]()\n- [src/vs/platform/windows/electron-main/windowImpl.ts:1000-1100]()\n\n## Extension Host Process\n\nThe extension host process runs extensions in isolation from the main UI to prevent extensions from affecting the stability of the editor.\n\n### Responsibilities\n\n- Running extension code in isolation\n- Providing extension API\n- Communicating with the renderer process\n- Managing extension lifecycle\n\n### Process Creation\n\nExtensions run in a separate Node.js process that is spawned by the main process. This process communicates with the renderer process through an RPC protocol.\n\n```mermaid\nsequenceDiagram\n    participant Main as Main Process\n    participant Renderer as Renderer Process\n    participant ExtHost as Extension Host Process\n    \n    Main-\u003e\u003eExtHost: spawn process\n    ExtHost-\u003e\u003eExtHost: initialize\n    ExtHost-\u003e\u003eRenderer: establish IPC connection\n    Renderer-\u003e\u003eExtHost: activate extensions\n    ExtHost-\u003e\u003eExtHost: load extensions\n    ExtHost-\u003e\u003eRenderer: extension API ready\n    Renderer-\u003e\u003eExtHost: API calls\n    ExtHost-\u003e\u003eRenderer: events \u0026 results\n```\n\n### Extension Isolation\n\nThe extension host provides a controlled environment for extensions to run in, with access to a specific set of APIs defined by VS Code. This isolation ensures that:\n\n1. Extensions cannot crash the main editor\n2. Extensions have limited access to the UI\n3. Extensions run in a consistent environment\n\nSources:\n- [src/vs/code/electron-main/app.ts:42-44]()\n- [src/vs/platform/windows/electron-main/windowImpl.ts:252-269]()\n\n## Shared Process\n\nThe shared process handles resource-intensive operations that are shared across multiple windows, such as extension management and file search.\n\n### Responsibilities\n\n- Extension management (installation, updates)\n- File search and indexing\n- Telemetry\n- Update management\n\n### Implementation\n\nThe shared process is implemented as a utility process that is spawned by the main process. It communicates with the renderer processes through IPC.\n\n```mermaid\nflowchart TD\n    Main[\"Main Process\u003cbr\u003e(SharedProcessService)\"]\n    Shared[\"Shared Process\u003cbr\u003e(UtilityProcess)\"]\n    Window1[\"Window 1\u003cbr\u003e(Renderer Process)\"]\n    Window2[\"Window 2\u003cbr\u003e(Renderer Process)\"]\n    \n    Main --\u003e|\"spawn\"| Shared\n    Window1 \u003c--\u003e|\"IPC Channel\"| Shared\n    Window2 \u003c--\u003e|\"IPC Channel\"| Shared\n    Main \u003c--\u003e|\"control\"| Shared\n```\n\n### Initialization\n\nThe shared process is initialized during the startup of the application:\n\n1. The main process creates a `SharedProcess` instance\n2. The shared process is spawned as a utility process\n3. The shared process initializes its services\n4. Windows connect to the shared process through IPC\n\nSources:\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts:24-193]()\n- [src/vs/code/electron-main/app.ts:573-574]()\n- [src/vs/platform/sharedProcess/node/sharedProcess.ts:13-34]()\n\n## Inter-Process Communication\n\nVS Code uses several IPC mechanisms to enable communication between its different processes.\n\n### IPC Channels\n\n1. **Electron IPC**: Used for communication between the main process and renderer processes\n2. **Node.js IPC**: Used for communication with the extension host and shared process\n3. **Message Ports**: Used for high-performance communication between processes\n\n### Main Process as Coordinator\n\nThe main process acts as a coordinator for IPC, setting up channels and routing messages between processes.\n\n```mermaid\ngraph TD\n    Main[\"Main Process\u003cbr\u003e(IPC Server)\"]\n    Renderer[\"Renderer Process\u003cbr\u003e(IPC Client)\"]\n    ExtHost[\"Extension Host\u003cbr\u003e(IPC Client)\"]\n    Shared[\"Shared Process\u003cbr\u003e(IPC Client)\"]\n    \n    Main \u003c--\u003e|\"Electron IPC\"| Renderer\n    Main \u003c--\u003e|\"Node.js IPC\"| ExtHost\n    Main \u003c--\u003e|\"Node.js IPC\"| Shared\n    Renderer \u003c-.-\u003e|\"Message Ports\"| ExtHost\n    Renderer \u003c-.-\u003e|\"Message Ports\"| Shared\n```\n\n### Service Architecture\n\nVS Code uses a service-oriented architecture where services are exposed through IPC channels. This allows services to be consumed across process boundaries.\n\nSources:\n- [src/vs/code/electron-main/app.ts:551-561]()\n- [src/vs/code/electron-main/app.ts:588-594]()\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts:51-92]()\n\n## Window Management\n\nWindow management is a core responsibility of the main process, handled primarily by the `WindowsMainService`.\n\n### Window Creation\n\nWindows are created through the `WindowsMainService`, which manages the lifecycle of all windows in the application.\n\n```mermaid\nsequenceDiagram\n    participant App as CodeApplication\n    participant WindowsService as WindowsMainService\n    participant Window as CodeWindow\n    \n    App-\u003e\u003eWindowsService: openFirstWindow()\n    WindowsService-\u003e\u003eWindowsService: open()\n    WindowsService-\u003e\u003eWindowsService: doOpen()\n    WindowsService-\u003e\u003eWindow: openInBrowserWindow()\n    Window-\u003e\u003eWindow: load()\n    Window--\u003e\u003eWindowsService: window ready\n    WindowsService--\u003e\u003eApp: windows opened\n```\n\n### Window States\n\nWindows go through several states during their lifecycle:\n\n1. **Creation**: Window is created but not yet loaded\n2. **Loading**: Window is loading the workbench\n3. **Ready**: Window is fully loaded and ready for user interaction\n4. **Closing**: Window is in the process of closing\n\n### Multi-Window Support\n\nVS Code supports multiple windows, each with its own renderer process. The `WindowsMainService` keeps track of all open windows and manages focus, z-order, and window state.\n\nSources:\n- [src/vs/platform/windows/electron-main/windowsMainService.ts:183-657]()\n- [src/vs/platform/windows/electron-main/windows.ts:58-237]()\n- [src/vs/platform/window/electron-main/window.ts:45-83]()\n\n## Process Lifecycle Management\n\nVS Code carefully manages the lifecycle of all its processes to ensure proper startup, shutdown, and resource management.\n\n### Application Lifecycle\n\nThe `LifecycleMainService` manages the overall application lifecycle, including:\n\n1. **Startup**: Initializing services and opening windows\n2. **Running**: Managing the running application\n3. **Shutdown**: Gracefully shutting down all processes\n\n### Lifecycle Phases\n\nThe application goes through several phases during its lifecycle:\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Starting\n    Starting --\u003e Ready: Services initialized\n    Ready --\u003e AfterWindowOpen: First window opened\n    AfterWindowOpen --\u003e Eventually: After delay\n    Eventually --\u003e [*]: Shutdown\n```\n\n1. **Starting**: Application is initializing\n2. **Ready**: Core services are initialized\n3. **AfterWindowOpen**: First window is opened\n4. **Eventually**: Application is fully initialized\n5. **Shutdown**: Application is shutting down\n\n### Process Coordination\n\nDuring shutdown, processes are terminated in a coordinated manner:\n\n1. Renderer processes are closed first\n2. Extension host processes are terminated\n3. Shared process is terminated\n4. Main process exits\n\nSources:\n- [src/vs/code/electron-main/app.ts:596-620]()\n- [src/vs/code/electron-main/app.ts:374-386]()\n- [src/vs/platform/windows/electron-main/windowImpl.ts:1000-1100]()\n\n## Security Considerations\n\nVS Code's multi-process architecture provides security benefits by isolating different components.\n\n### Process Isolation\n\nBy running extensions in a separate process, VS Code prevents extensions from directly accessing the UI or other sensitive parts of the application.\n\n### Content Security\n\nThe main process implements several security measures:\n\n1. **Permission handling**: Controls what permissions are granted to web content\n2. **Content filtering**: Blocks potentially dangerous content\n3. **Protocol handling**: Securely handles custom protocols\n\n### Sandbox\n\nVS Code uses Electron's sandbox feature to restrict what renderer processes can do, providing an additional layer of security.\n\nSources:\n- [src/vs/code/electron-main/app.ts:161-205]()\n- [src/vs/code/electron-main/app.ts:267-320]()\n- [src/vs/code/electron-main/app.ts:397-442]()\n\n## Command Line Integration\n\nVS Code supports being launched from the command line with various arguments. This is handled through a special CLI process.\n\n### CLI Process\n\nWhen VS Code is launched from the command line, a CLI process is created that communicates with the main process to handle the command.\n\n```mermaid\nsequenceDiagram\n    participant CLI as CLI Process\n    participant Main as Main Process\n    participant Windows as WindowsMainService\n    \n    CLI-\u003e\u003eCLI: parse arguments\n    CLI-\u003e\u003eMain: connect to running instance\n    Main-\u003e\u003eWindows: open(args)\n    Windows-\u003e\u003eWindows: handle command\n    Windows--\u003e\u003eMain: windows opened\n    Main--\u003e\u003eCLI: command handled\n    CLI-\u003e\u003eCLI: exit\n```\n\n### Single Instance\n\nVS Code ensures that only one instance of the application is running at a time. When a new instance is launched, it communicates with the existing instance and then exits.\n\nSources:\n- [src/vs/code/node/cliProcessMain.ts:72-342]()\n- [src/vs/code/electron-main/main.ts:291-419]()\n- [src/vs/platform/launch/electron-main/launchMainService.ts:39-93]()\n\n## Auxiliary Windows\n\nVS Code supports auxiliary windows (like dialog windows) that are managed separately from the main application windows.\n\n### Auxiliary Window Management\n\nAuxiliary windows are managed by the `AuxiliaryWindowsMainService`, which handles their creation, focus, and lifecycle.\n\n```mermaid\nclassDiagram\n    class IAuxiliaryWindowsMainService {\n        +createWindow()\n        +registerWindow()\n        +getWindowByWebContents()\n        +getWindows()\n    }\n    \n    class AuxiliaryWindowsMainService {\n        -windows: Map\n        +createWindow()\n        +registerWindow()\n    }\n    \n    class IAuxiliaryWindow {\n        +readonly parentId: number\n        +readonly id: number\n    }\n    \n    class AuxiliaryWindow {\n        +readonly id: number\n        +parentId: number\n    }\n    \n    IAuxiliaryWindowsMainService \u003c|-- AuxiliaryWindowsMainService\n    IAuxiliaryWindow \u003c|-- AuxiliaryWindow\n    AuxiliaryWindowsMainService --\u003e AuxiliaryWindow\n```\n\nSources:\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindow.ts:17-67]()\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindowsMainService.ts:18-36]()\n- [src/vs/platform/auxiliaryWindow/electron-main/auxiliaryWindows.ts:13-32]()\n\n## Summary\n\nVS Code's multi-process architecture provides a robust foundation for the application, with clear separation of concerns between processes:\n\n1. **Main Process**: Coordinates the application and manages windows\n2. **Renderer Process**: Handles the UI and user interactions\n3. **Extension Host Process**: Runs extensions in isolation\n4. **Shared Process**: Handles shared operations across windows\n\nThis architecture enables VS Code to be stable, secure, and performant, while providing a rich platform for extensions.\n\n| Process | Main Responsibilities | Key Components |\n|---------|----------------------|----------------|\n| Main Process | Application lifecycle, Window management | CodeApplication, WindowsMainService, LifecycleMainService |\n| Renderer Process | UI rendering, User interaction | Workbench, EditorPart, SidebarPart |\n| Extension Host | Running extensions, API provision | Extension Host, Extension Runtime |\n| Shared Process | Shared operations, Resource management | Extension Management, File Search |\n\nSources:\n- [src/vs/code/electron-main/app.ts:126-130]()\n- [src/vs/platform/windows/electron-main/windowsMainService.ts:183-237]()\n- [src/vs/platform/sharedProcess/electron-main/sharedProcess.ts:24-34]()"])</script>
    <script>self.__next_f.push([1, "1a:T329a,"])</script>
    <script>self.__next_f.push([1, "# Dependency Management and Build System\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [.npmrc](.npmrc)\n- [build/.moduleignore](build/.moduleignore)\n- [build/.webignore](build/.webignore)\n- [build/azure-pipelines/linux/setup-env.sh](build/azure-pipelines/linux/setup-env.sh)\n- [build/checksums/electron.txt](build/checksums/electron.txt)\n- [build/checksums/nodejs.txt](build/checksums/nodejs.txt)\n- [build/linux/debian/calculate-deps.js](build/linux/debian/calculate-deps.js)\n- [build/linux/debian/calculate-deps.ts](build/linux/debian/calculate-deps.ts)\n- [build/linux/debian/dep-lists.js](build/linux/debian/dep-lists.js)\n- [build/linux/debian/dep-lists.ts](build/linux/debian/dep-lists.ts)\n- [build/linux/dependencies-generator.js](build/linux/dependencies-generator.js)\n- [build/linux/dependencies-generator.ts](build/linux/dependencies-generator.ts)\n- [build/linux/rpm/dep-lists.js](build/linux/rpm/dep-lists.js)\n- [build/linux/rpm/dep-lists.ts](build/linux/rpm/dep-lists.ts)\n- [build/package.json](build/package.json)\n- [cgmanifest.json](cgmanifest.json)\n- [extensions/vscode-colorize-tests/src/colorizer.test.ts](extensions/vscode-colorize-tests/src/colorizer.test.ts)\n- [package-lock.json](package-lock.json)\n- [package.json](package.json)\n- [remote/.npmrc](remote/.npmrc)\n- [remote/package-lock.json](remote/package-lock.json)\n- [remote/package.json](remote/package.json)\n- [remote/web/package-lock.json](remote/web/package-lock.json)\n- [remote/web/package.json](remote/web/package.json)\n- [src/vs/editor/common/config/editorConfigurationSchema.ts](src/vs/editor/common/config/editorConfigurationSchema.ts)\n- [src/vs/platform/environment/test/node/nativeModules.integrationTest.ts](src/vs/platform/environment/test/node/nativeModules.integrationTest.ts)\n- [test/automation/package.json](test/automation/package.json)\n- [test/integration/browser/package.json](test/integration/browser/package.json)\n- [test/smoke/package.json](test/smoke/package.json)\n\n\u003c/details\u003e\n\n\n\nThis document details how VS Code manages its dependencies, builds the application, and packages it for different platforms. It covers the package management approach, build tools, and the process of creating distributable packages for Windows, macOS, and Linux.\n\n## Overview\n\nVS Code uses npm as its primary package manager and employs a multi-stage build system based on Gulp to compile, bundle, and package the application. The build system handles different target platforms (desktop, web, remote) and architectures (x64, arm64, etc.).\n\nSources:\n- [package.json:1-241]()\n- [.npmrc:1-8]()\n- [remote/.npmrc:1-8]()\n\n## Dependency Management\n\nVS Code manages three distinct sets of dependencies across different package.json files:\n\n```mermaid\ngraph TD\n    subgraph \"Dependency Management\"\n        MainPackage[\"Main package.json\u003cbr\u003e(Root)\"]\n        RemotePackage[\"Remote package.json\u003cbr\u003e(Remote Extension Host)\"]\n        WebPackage[\"Web package.json\u003cbr\u003e(Browser Version)\"]\n        BuildPackage[\"Build package.json\u003cbr\u003e(Build Tools)\"]\n        \n        MainPackage --\u003e ElectronDeps[\"Electron-specific\u003cbr\u003eDependencies\"]\n        MainPackage --\u003e SharedDeps[\"Shared Dependencies\"]\n        MainPackage --\u003e DevDeps[\"Development\u003cbr\u003eDependencies\"]\n        \n        RemotePackage --\u003e RemoteDeps[\"Remote-specific\u003cbr\u003eDependencies\"]\n        RemotePackage --\u003e SharedDeps\n        \n        WebPackage --\u003e WebDeps[\"Web-specific\u003cbr\u003eDependencies\"]\n        WebPackage --\u003e SharedDeps\n        \n        BuildPackage --\u003e BuildTools[\"Build Tools\u003cbr\u003eDependencies\"]\n    end\n```\n\n### Main Dependencies\n\nThe root `package.json` defines dependencies for the Electron-based desktop application. It includes:\n\n1. **Runtime dependencies**: Libraries required for VS Code's functionality\n2. **Native modules**: Platform-specific binary modules\n3. **Development dependencies**: Tools for building, testing, and packaging\n\nKey native modules include:\n- `@vscode/spdlog`: Logging\n- `@vscode/ripgrep`: Fast search\n- `node-pty`: Terminal support\n- `@vscode/sqlite3`: Database storage\n- `native-keymap`: Keyboard handling\n- `@parcel/watcher`: File system watching\n\nSources:\n- [package.json:71-116]()\n- [package.json:117-224]()\n- [package.json:238-240]()\n\n### Remote and Web Dependencies\n\nSeparate package.json files exist for:\n\n1. **Remote Extension Host**: A subset of dependencies needed for VS Code's remote capabilities\n2. **Web Version**: Dependencies for the browser-based version of VS Code\n\nThese package files include only the dependencies needed for their specific environments, avoiding unnecessary packages.\n\nSources:\n- [remote/package.json:1-49]()\n- [remote/web/package.json:1-25]()\n\n### Dependency Overrides\n\nVS Code uses the `overrides` field in package.json to enforce specific versions of transitive dependencies, ensuring compatibility and security:\n\n```json\n\"overrides\": {\n  \"node-gyp-build\": \"4.8.1\",\n  \"kerberos@2.1.1\": {\n    \"node-addon-api\": \"7.1.0\"\n  }\n}\n```\n\nSources:\n- [package.json:225-230]()\n- [remote/package.json:43-48]()\n\n## Build System\n\nVS Code uses a Gulp-based build system to handle the compilation, bundling, and packaging process.\n\n```mermaid\ngraph TD\n    subgraph \"Build System\"\n        NPM[\"npm scripts\u003cbr\u003e(package.json)\"]\n        Gulp[\"Gulp Tasks\u003cbr\u003e(gulpfile.js)\"]\n        TypeScript[\"TypeScript Compiler\"]\n        Webpack[\"Webpack\u003cbr\u003e(Bundling)\"]\n        \n        NPM --\u003e |\"npm run compile\"| Gulp\n        NPM --\u003e |\"npm run watch\"| Gulp\n        \n        Gulp --\u003e TypeScript\n        Gulp --\u003e Webpack\n        \n        TypeScript --\u003e |\"Compiled JS\"| CompiledOutput[\"Compiled Output\u003cbr\u003e(out/)\"]\n        Webpack --\u003e |\"Bundled JS\"| BundledOutput[\"Bundled Output\"]\n        \n        CompiledOutput --\u003e Packaging[\"Packaging\u003cbr\u003e(Electron, Web, etc.)\"]\n        BundledOutput --\u003e Packaging\n    end\n```\n\n### Build Scripts\n\nThe main build commands are defined as npm scripts in package.json:\n\n- `compile`: Compiles the entire codebase\n- `watch`: Watches for changes and recompiles\n- `compile-web`: Compiles for web target\n- `compile-cli`: Compiles for CLI\n- `minify-vscode`: Minifies the VS Code codebase\n- `download-builtin-extensions`: Downloads built-in extensions\n\nSources:\n- [package.json:12-69]()\n- [build/package.json:61-65]()\n\n### Build Tools\n\nThe build process relies on several tools:\n\n1. **TypeScript**: Compiles TypeScript to JavaScript\n2. **Gulp**: Orchestrates the build process\n3. **Webpack**: Bundles modules for production\n4. **Electron**: Packages the desktop application\n\nThe build tools themselves are defined as dependencies in the build/package.json file.\n\nSources:\n- [build/package.json:5-69]()\n- [package.json:117-224]()\n\n### Build Variants\n\nVS Code supports multiple build variants:\n\n1. **Desktop (Electron)**: The standard desktop application\n2. **Web**: Browser-based version\n3. **Remote Extension Host**: For remote development scenarios\n\nEach variant has specific compilation and packaging steps.\n\nSources:\n- [package.json:50-62]()\n\n## Native Module Management\n\nVS Code depends on several native modules that require compilation for each platform and architecture.\n\n```mermaid\ngraph TD\n    subgraph \"Native Module Management\"\n        PreInstall[\"preinstall\u003cbr\u003e(build/npm/preinstall.js)\"]\n        PostInstall[\"postinstall\u003cbr\u003e(build/npm/postinstall.js)\"]\n        \n        PreInstall --\u003e |\"Platform Detection\"| PlatformSetup[\"Platform Setup\"]\n        PostInstall --\u003e |\"Compile Native Modules\"| NativeModules[\"Native Modules\"]\n        PostInstall --\u003e |\"Download Pre-built Binaries\"| PrebuiltBinaries[\"Pre-built Binaries\"]\n        \n        NativeModules --\u003e ModuleCleanup[\"Module Cleanup\u003cbr\u003e(.moduleignore)\"]\n        PrebuiltBinaries --\u003e ModuleCleanup\n        \n        ModuleCleanup --\u003e FinalPackage[\"Final Package\"]\n    end\n```\n\n### Native Module Compilation\n\nNative modules are compiled during the `postinstall` phase using:\n\n1. **node-gyp**: For compiling C/C++ modules\n2. **Electron's headers**: To ensure compatibility with Electron's Node.js version\n\nThe `.npmrc` file configures the build environment for native modules:\n\n```\ndisturl=\"https://electronjs.org/headers\"\ntarget=\"34.4.1\"\nms_build_id=\"11317338\"\nruntime=\"electron\"\nbuild_from_source=\"true\"\n```\n\nSources:\n- [.npmrc:1-8]()\n- [package.json:18-19]()\n- [build/.moduleignore:1-189]()\n\n### Native Module Cleanup\n\nAfter installation, unnecessary files from native modules are removed using the `.moduleignore` file, which specifies patterns for files to exclude from the final package.\n\nSources:\n- [build/.moduleignore:1-189]()\n- [build/.webignore:1-60]()\n\n## Platform-Specific Packaging\n\nVS Code is packaged for multiple platforms, each with its own requirements and dependencies.\n\n```mermaid\ngraph TD\n    subgraph \"Platform Packaging\"\n        BuildProcess[\"Build Process\"]\n        \n        BuildProcess --\u003e WindowsPackaging[\"Windows Packaging\u003cbr\u003e(NSIS, MSI)\"]\n        BuildProcess --\u003e MacOSPackaging[\"macOS Packaging\u003cbr\u003e(DMG, PKG)\"]\n        BuildProcess --\u003e LinuxPackaging[\"Linux Packaging\u003cbr\u003e(deb, rpm, snap)\"]\n        \n        WindowsPackaging --\u003e WindowsInstallers[\"Windows Installers\"]\n        MacOSPackaging --\u003e MacOSInstallers[\"macOS Installers\"]\n        LinuxPackaging --\u003e LinuxPackages[\"Linux Packages\"]\n        \n        LinuxPackaging --\u003e DebDependencies[\"Debian Dependencies\"]\n        LinuxPackaging --\u003e RPMDependencies[\"RPM Dependencies\"]\n    end\n```\n\n### Linux Packaging\n\nFor Linux, VS Code generates both Debian (.deb) and RPM (.rpm) packages with appropriate dependencies.\n\n#### Debian Dependencies\n\nDebian packages require a list of dependencies that VS Code needs to run. These are calculated based on:\n\n1. **Generated dependencies**: Determined by analyzing binary files\n2. **Additional dependencies**: Manually specified dependencies\n\nSources:\n- [build/linux/debian/dep-lists.ts:1-141]()\n- [build/linux/debian/calculate-deps.ts:1-20]()\n- [build/linux/dependencies-generator.ts:1-20]()\n\n#### RPM Dependencies\n\nSimilar to Debian, RPM packages have their own dependency format and requirements.\n\nSources:\n- [build/linux/rpm/dep-lists.ts:1-140]()\n- [build/linux/rpm/dep-lists.js:1-140]()\n\n### Windows and macOS Packaging\n\nFor Windows, VS Code uses:\n- Inno Setup for creating installers\n- Electron's packaging capabilities\n\nFor macOS:\n- DMG creation tools\n- Code signing for notarization\n\nSources:\n- [cgmanifest.json:538-562]()\n\n## Electron and Node.js Integration\n\nVS Code is built on Electron, which combines Chromium and Node.js.\n\n```mermaid\ngraph TD\n    subgraph \"Electron Integration\"\n        VSCode[\"VS Code Application\"]\n        \n        VSCode --\u003e Electron[\"Electron v34.4.1\"]\n        \n        Electron --\u003e Chromium[\"Chromium\u003cbr\u003ev132.0.6834.210\"]\n        Electron --\u003e NodeJS[\"Node.js\u003cbr\u003ev20.18.3\"]\n        \n        Chromium --\u003e V8[\"V8 JavaScript Engine\"]\n        NodeJS --\u003e V8\n        \n        VSCode --\u003e NativeModules[\"Native Modules\"]\n        NativeModules --\u003e NodeJS\n    end\n```\n\n### Electron Version Management\n\nVS Code tracks specific versions of Electron to ensure stability and compatibility:\n\n- The Electron version is specified in `.npmrc` and package.json\n- Checksums for Electron binaries are stored in `build/checksums/electron.txt`\n\nSources:\n- [.npmrc:1-3]()\n- [package.json:158]()\n- [build/checksums/electron.txt:1-75]()\n\n### Node.js Version Management\n\nFor the remote extension host, VS Code uses a specific Node.js version:\n\n- The Node.js version is specified in `remote/.npmrc`\n- Checksums for Node.js binaries are stored in `build/checksums/nodejs.txt`\n\nSources:\n- [remote/.npmrc:1-3]()\n- [build/checksums/nodejs.txt:1-8]()\n- [cgmanifest.json:517-524]()\n\n## Testing Infrastructure\n\nVS Code includes several test suites that depend on the build system:\n\n1. **Unit tests**: For testing individual components\n2. **Integration tests**: For testing component interactions\n3. **Smoke tests**: For testing the full application\n4. **Browser tests**: For testing the web version\n\nEach test suite has its own dependencies and build requirements.\n\nSources:\n- [package.json:13-17]()\n- [test/smoke/package.json:1-26]()\n- [test/automation/package.json:1-34]()\n- [test/integration/browser/package.json:1-18]()\n\n## Third-Party Dependencies\n\nVS Code tracks third-party dependencies in `cgmanifest.json`, which includes:\n\n1. **Chromium**: The browser engine\n2. **Node.js**: The JavaScript runtime\n3. **Electron**: The application framework\n4. **FFmpeg**: For media support\n5. **Inno Setup**: For Windows installers\n\nSources:\n- [cgmanifest.json:1-486]()\n\n## Conclusion\n\nVS Code's dependency management and build system is designed to handle multiple platforms, architectures, and deployment scenarios. It uses a combination of npm, Gulp, and platform-specific tools to create optimized packages for each target environment.\n\nThe system is highly configurable and extensible, allowing for different build variants and packaging options while maintaining a consistent development experience across platforms."])</script>
    <script>self.__next_f.push([1, "1b:T508b,"])</script>
    <script>self.__next_f.push([1, "# Core Services and Components\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/platform/configuration/common/configuration.ts](src/vs/platform/configuration/common/configuration.ts)\n- [src/vs/platform/configuration/common/configurationModels.ts](src/vs/platform/configuration/common/configurationModels.ts)\n- [src/vs/platform/configuration/common/configurationRegistry.ts](src/vs/platform/configuration/common/configurationRegistry.ts)\n- [src/vs/platform/configuration/common/configurationService.ts](src/vs/platform/configuration/common/configurationService.ts)\n- [src/vs/platform/configuration/test/common/configurationModels.test.ts](src/vs/platform/configuration/test/common/configurationModels.test.ts)\n- [src/vs/platform/configuration/test/common/configurationRegistry.test.ts](src/vs/platform/configuration/test/common/configurationRegistry.test.ts)\n- [src/vs/platform/configuration/test/common/configurationService.test.ts](src/vs/platform/configuration/test/common/configurationService.test.ts)\n- [src/vs/platform/configuration/test/common/configurations.test.ts](src/vs/platform/configuration/test/common/configurations.test.ts)\n- [src/vs/platform/userData/common/fileUserDataProvider.ts](src/vs/platform/userData/common/fileUserDataProvider.ts)\n- [src/vs/platform/userData/test/browser/fileUserDataProvider.test.ts](src/vs/platform/userData/test/browser/fileUserDataProvider.test.ts)\n- [src/vs/workbench/api/browser/mainThreadConfiguration.ts](src/vs/workbench/api/browser/mainThreadConfiguration.ts)\n- [src/vs/workbench/api/common/configurationExtensionPoint.ts](src/vs/workbench/api/common/configurationExtensionPoint.ts)\n- [src/vs/workbench/api/common/extHostConfiguration.ts](src/vs/workbench/api/common/extHostConfiguration.ts)\n- [src/vs/workbench/api/test/browser/extHostConfiguration.test.ts](src/vs/workbench/api/test/browser/extHostConfiguration.test.ts)\n- [src/vs/workbench/services/configuration/browser/configuration.ts](src/vs/workbench/services/configuration/browser/configuration.ts)\n- [src/vs/workbench/services/configuration/browser/configurationService.ts](src/vs/workbench/services/configuration/browser/configurationService.ts)\n- [src/vs/workbench/services/configuration/common/configuration.ts](src/vs/workbench/services/configuration/common/configuration.ts)\n- [src/vs/workbench/services/configuration/common/configurationModels.ts](src/vs/workbench/services/configuration/common/configurationModels.ts)\n- [src/vs/workbench/services/configuration/test/browser/configuration.test.ts](src/vs/workbench/services/configuration/test/browser/configuration.test.ts)\n- [src/vs/workbench/services/configuration/test/browser/configurationService.test.ts](src/vs/workbench/services/configuration/test/browser/configurationService.test.ts)\n- [src/vs/workbench/services/configuration/test/common/configurationModels.test.ts](src/vs/workbench/services/configuration/test/common/configurationModels.test.ts)\n- [src/vs/workbench/services/keybinding/test/browser/keybindingEditing.test.ts](src/vs/workbench/services/keybinding/test/browser/keybindingEditing.test.ts)\n\n\u003c/details\u003e\n\n\n\nThis document provides an overview of the core services and components that form the foundation of VS Code's architecture. It focuses on the configuration system, service infrastructure, and other essential components that enable VS Code's functionality.\n\nFor information about the Monaco Editor, see [Monaco Editor](#3). For details on the Extension System, see [Extension System](#4).\n\n## Configuration System Architecture\n\nVS Code's configuration system is a sophisticated framework that manages settings across multiple scopes and sources. It provides a unified way to access and modify configuration values while respecting priorities between different configuration sources.\n\n### Configuration Sources and Hierarchy\n\nThe configuration system combines settings from multiple sources in a specific order of precedence:\n\n```mermaid\nflowchart TD\n    subgraph \"Configuration Sources\"\n        direction TB\n        DefaultConfig[\"Default Configuration\\n(DefaultConfiguration)\"]\n        PolicyConfig[\"Policy Configuration\\n(PolicyConfiguration)\"]\n        ApplicationConfig[\"Application Configuration\\n(ApplicationConfiguration)\"]\n        UserLocalConfig[\"User Local Configuration\\n(UserConfiguration)\"]\n        UserRemoteConfig[\"Remote User Configuration\\n(RemoteUserConfiguration)\"]\n        WorkspaceConfig[\"Workspace Configuration\\n(WorkspaceConfiguration)\"]\n        FolderConfig[\"Folder Configuration\\n(FolderConfiguration)\"]\n        MemoryConfig[\"Memory Configuration\"]\n    end\n\n    DefaultConfig --\u003e PolicyConfig\n    PolicyConfig --\u003e ApplicationConfig\n    ApplicationConfig --\u003e UserLocalConfig\n    UserLocalConfig --\u003e UserRemoteConfig\n    UserRemoteConfig --\u003e WorkspaceConfig\n    WorkspaceConfig --\u003e FolderConfig\n    FolderConfig --\u003e MemoryConfig\n\n    subgraph \"Overrides\"\n        LanguageOverrides[\"Language-specific Overrides\\n([language])\"]\n    end\n\n    MemoryConfig -.-\u003e LanguageOverrides\n```\n\nSources (from lowest to highest precedence):\n1. **Default Configuration**: Built-in default values for all settings\n2. **Policy Configuration**: Settings enforced by system policies\n3. **Application Configuration**: Settings applied to all profiles\n4. **User Configuration**: User settings (local and remote)\n5. **Workspace Configuration**: Settings specific to a workspace\n6. **Folder Configuration**: Settings specific to a workspace folder\n7. **Memory Configuration**: Temporary in-memory settings\n\nSources: [src/vs/workbench/services/configuration/browser/configurationService.ts:62-170](). [src/vs/platform/configuration/common/configurationModels.ts:29-296]().\n\n### Configuration Scopes\n\nEach configuration property has a scope that determines where it can be set:\n\n```mermaid\nflowchart TD\n    subgraph \"Configuration Scopes\"\n        APPLICATION[\"APPLICATION\\nApplication-wide settings\"]\n        MACHINE[\"MACHINE\\nMachine-specific settings\"]\n        APPLICATION_MACHINE[\"APPLICATION_MACHINE\\nApplication settings for machine\"]\n        WINDOW[\"WINDOW\\nWindow-level settings\"]\n        RESOURCE[\"RESOURCE\\nResource-specific settings\"]\n        LANGUAGE_OVERRIDABLE[\"LANGUAGE_OVERRIDABLE\\nLanguage-specific settings\"]\n        MACHINE_OVERRIDABLE[\"MACHINE_OVERRIDABLE\\nMachine settings that can be overridden\"]\n    end\n\n    subgraph \"Configuration Targets\"\n        DEFAULT[\"DEFAULT\\nDefault values\"]\n        USER[\"USER\\nUser settings\"]\n        USER_LOCAL[\"USER_LOCAL\\nLocal user settings\"]\n        USER_REMOTE[\"USER_REMOTE\\nRemote user settings\"]\n        WORKSPACE[\"WORKSPACE\\nWorkspace settings\"]\n        WORKSPACE_FOLDER[\"WORKSPACE_FOLDER\\nWorkspace folder settings\"]\n        MEMORY[\"MEMORY\\nIn-memory settings\"]\n    end\n```\n\nSources: [src/vs/platform/configuration/common/configurationRegistry.ts:128-157](). [src/vs/workbench/services/configuration/common/configuration.ts:28-35]().\n\n### Configuration Models\n\nThe configuration system uses a series of model classes to represent and manage configuration data:\n\n```mermaid\nclassDiagram\n    class ConfigurationModel {\n        +contents: any\n        +keys: string[]\n        +overrides: IOverrides[]\n        +getValue(section)\n        +inspect(section, overrideIdentifier)\n        +override(identifier)\n        +merge(others)\n    }\n    \n    class Configuration {\n        -defaultConfiguration: ConfigurationModel\n        -policyConfiguration: ConfigurationModel\n        -applicationConfiguration: ConfigurationModel\n        -userLocalConfiguration: ConfigurationModel\n        -userRemoteConfiguration: ConfigurationModel\n        -workspaceConfiguration: ConfigurationModel\n        -folderConfigurations: Map\n        -memoryConfiguration: ConfigurationModel\n        +getValue(key, overrides)\n        +inspect(key, overrides)\n        +updateValue(key, value, target)\n    }\n    \n    class ConfigurationModelParser {\n        +parse(content, options)\n        +configurationModel: ConfigurationModel\n    }\n    \n    ConfigurationModel \u003c-- Configuration\n    ConfigurationModelParser --\u003e ConfigurationModel\n```\n\nSources: [src/vs/platform/configuration/common/configurationModels.ts:29-296](). [src/vs/workbench/services/configuration/common/configurationModels.ts:97-172]().\n\n### WorkspaceService\n\nThe `WorkspaceService` is the central implementation of the configuration system in VS Code. It implements both `IWorkspaceContextService` and `IWorkbenchConfigurationService` interfaces, providing workspace information and configuration management.\n\n```mermaid\nclassDiagram\n    class WorkspaceService {\n        -workspace: Workspace\n        -configuration: Configuration\n        -defaultConfiguration: DefaultConfiguration\n        -policyConfiguration: IPolicyConfiguration\n        -applicationConfiguration: ApplicationConfiguration\n        -localUserConfiguration: UserConfiguration\n        -remoteUserConfiguration: RemoteUserConfiguration\n        -workspaceConfiguration: WorkspaceConfiguration\n        -cachedFolderConfigs: ResourceMap\n        +getWorkspace()\n        +getWorkbenchState()\n        +getValue(section, overrides)\n        +updateValue(key, value, target)\n        +reloadConfiguration()\n    }\n    \n    class IWorkspaceContextService {\n        +getWorkspace()\n        +getWorkbenchState()\n        +getWorkspaceFolder(resource)\n        +isInsideWorkspace(resource)\n    }\n    \n    class IWorkbenchConfigurationService {\n        +getValue(section, overrides)\n        +updateValue(key, value, target)\n        +inspect(key, overrides)\n        +restrictedSettings\n        +onDidChangeRestrictedSettings\n    }\n    \n    IWorkspaceContextService \u003c|-- WorkspaceService\n    IWorkbenchConfigurationService \u003c|-- WorkspaceService\n```\n\nSources: [src/vs/workbench/services/configuration/browser/configurationService.ts:62-170](). [src/vs/workbench/services/configuration/common/configuration.ts:68-97]().\n\n## Configuration Registration and Extension Points\n\nVS Code uses a registry pattern to manage configuration properties and their metadata.\n\n### Configuration Registry\n\nThe `ConfigurationRegistry` maintains a registry of all configuration properties, their schemas, and default values:\n\n```mermaid\nclassDiagram\n    class IConfigurationRegistry {\n        +registerConfiguration(configuration)\n        +registerConfigurations(configurations)\n        +registerDefaultConfigurations(defaults)\n        +getConfigurationProperties()\n        +onDidUpdateConfiguration\n    }\n    \n    class ConfigurationRegistry {\n        -configurationProperties: Map\n        -configurationDefaultsOverrides: Map\n        -configurationContributors: IConfigurationNode[]\n        +registerConfiguration(configuration)\n        +registerDefaultConfigurations(defaults)\n        +deltaConfiguration(delta)\n    }\n    \n    IConfigurationRegistry \u003c|-- ConfigurationRegistry\n```\n\nSources: [src/vs/platform/configuration/common/configurationRegistry.ts:34-116](). [src/vs/platform/configuration/common/configurationRegistry.ts:276-307]().\n\n### Extension Points for Configuration\n\nVS Code provides extension points that allow extensions to contribute configuration properties and default values:\n\n```mermaid\nflowchart TD\n    subgraph \"Extension Points\"\n        ConfigEP[\"configuration\\nContributes configuration properties\"]\n        DefaultsEP[\"configurationDefaults\\nContributes default values\"]\n    end\n    \n    subgraph \"Configuration Registry\"\n        Registry[\"ConfigurationRegistry\"]\n    end\n    \n    ConfigEP --\u003e Registry\n    DefaultsEP --\u003e Registry\n    \n    subgraph \"Extension Host\"\n        ExtConfig[\"ExtHostConfiguration\\nProvides configuration to extensions\"]\n    end\n    \n    Registry --\u003e ExtConfig\n```\n\nSources: [src/vs/workbench/api/common/configurationExtensionPoint.ts:138-306](). [src/vs/workbench/api/common/extHostConfiguration.ts:97-132]().\n\n## Service Infrastructure\n\nVS Code uses a service-based architecture with dependency injection to manage components and their dependencies.\n\n### Service Instantiation\n\nThe instantiation service is responsible for creating and managing service instances:\n\n```mermaid\nclassDiagram\n    class IInstantiationService {\n        +createInstance(ctor, ...args)\n        +invokeFunction(fn, ...args)\n        +createChild(services)\n    }\n    \n    class InstantiationService {\n        -_services: Map\n        -_strict: boolean\n        +createInstance(ctor, ...args)\n        +invokeFunction(fn, ...args)\n        -_createInstance(ctor, args)\n        -_getServiceDependencies(ctor)\n    }\n    \n    IInstantiationService \u003c|-- InstantiationService\n```\n\nSources: [src/vs/workbench/services/configuration/browser/configurationService.ts:492-495]().\n\n### Service Decorators\n\nVS Code uses TypeScript decorators to define service dependencies:\n\n```typescript\n// Service interface declaration with decorator\nexport const IConfigurationService = createDecorator\u003cIConfigurationService\u003e('configurationService');\n\n// Service implementation with dependencies\nclass ConfigurationService implements IConfigurationService {\n    constructor(\n        @IFileService private readonly fileService: IFileService,\n        @ILogService private readonly logService: ILogService\n    ) { /* ... */ }\n}\n```\n\nSources: [src/vs/platform/configuration/common/configuration.ts:14-15](). [src/vs/platform/configuration/common/configurationService.ts:42-48]().\n\n## Configuration Access Patterns\n\n### Accessing Configuration Values\n\nVS Code provides several ways to access configuration values:\n\n1. **Direct access through IConfigurationService**:\n   ```typescript\n   const value = configurationService.getValue('editor.fontSize');\n   ```\n\n2. **Scoped access with overrides**:\n   ```typescript\n   const value = configurationService.getValue('editor.fontSize', { resource: uri });\n   ```\n\n3. **Inspecting configuration**:\n   ```typescript\n   const inspect = configurationService.inspect('editor.fontSize');\n   // Access specific layers: inspect.defaultValue, inspect.userValue, etc.\n   ```\n\nSources: [src/vs/platform/configuration/common/configuration.ts:165-168](). [src/vs/workbench/services/configuration/browser/configurationService.ts:323-332]().\n\n### Updating Configuration Values\n\nConfiguration values can be updated at different targets:\n\n```typescript\n// Update user settings\nconfigurationService.updateValue('editor.fontSize', 14, ConfigurationTarget.USER);\n\n// Update workspace settings\nconfigurationService.updateValue('editor.fontSize', 14, ConfigurationTarget.WORKSPACE);\n\n// Update folder settings\nconfigurationService.updateValue('editor.fontSize', 14, \n    { resource: folderUri }, ConfigurationTarget.WORKSPACE_FOLDER);\n```\n\nSources: [src/vs/platform/configuration/common/configuration.ts:188-192](). [src/vs/workbench/services/configuration/browser/configurationService.ts:334-363]().\n\n## Configuration Change Events\n\nThe configuration system provides events to notify components when configuration changes:\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant ConfigService as ConfigurationService\n    participant Component as Component\n    \n    Component-\u003e\u003eConfigService: onDidChangeConfiguration(handler)\n    User-\u003e\u003eConfigService: updateValue('setting', value)\n    ConfigService-\u003e\u003eConfigService: _onDidChangeConfiguration.fire(event)\n    ConfigService-\u003e\u003eComponent: handler(event)\n    Component-\u003e\u003eConfigService: event.affectsConfiguration('setting')\n```\n\nSources: [src/vs/platform/configuration/common/configuration.ts:66-73](). [src/vs/workbench/services/configuration/browser/configurationService.ts:83-86]().\n\n## Configuration Storage\n\nVS Code stores configuration in different locations based on their scope:\n\n| Configuration Type | Storage Location | Format |\n|-------------------|------------------|--------|\n| Default Configuration | In-memory | JSON |\n| User Configuration | `settings.json` in user data directory | JSON |\n| Workspace Configuration | `.vscode/settings.json` in workspace | JSON |\n| Folder Configuration | `.vscode/settings.json` in folder | JSON |\n\nSources: [src/vs/workbench/services/configuration/browser/configuration.ts:123-172](). [src/vs/workbench/services/configuration/common/configuration.ts:14-18]().\n\n## Restricted Settings\n\nVS Code supports the concept of restricted settings, which are only applied when the workspace is trusted:\n\n```mermaid\nflowchart TD\n    Setting[\"Configuration Setting\"] --\u003e IsRestricted{\"Is restricted?\"}\n    IsRestricted --\u003e|Yes| IsTrusted{\"Is workspace trusted?\"}\n    IsRestricted --\u003e|No| Apply[\"Apply setting\"]\n    IsTrusted --\u003e|Yes| Apply\n    IsTrusted --\u003e|No| Skip[\"Skip setting\"]\n```\n\nSources: [src/vs/workbench/services/configuration/browser/configurationService.ts:451-490](). [src/vs/platform/configuration/common/configurationRegistry.ts:167-169]().\n\n## Configuration Caching\n\nVS Code caches configuration to improve performance, especially for remote workspaces:\n\n```mermaid\nflowchart TD\n    Start[\"Load configuration\"] --\u003e HasCache{\"Cache exists?\"}\n    HasCache --\u003e|Yes| LoadCache[\"Load from cache\"]\n    HasCache --\u003e|No| LoadFiles[\"Load from files\"]\n    LoadCache --\u003e NeedsRefresh{\"Needs refresh?\"}\n    NeedsRefresh --\u003e|Yes| LoadFiles\n    NeedsRefresh --\u003e|No| UseCache[\"Use cached configuration\"]\n    LoadFiles --\u003e UpdateCache[\"Update cache\"]\n    UpdateCache --\u003e Done[\"Configuration loaded\"]\n    UseCache --\u003e Done\n```\n\nSources: [src/vs/workbench/services/configuration/browser/configurationService.ts:606-631](). [src/vs/workbench/services/configuration/common/configuration.ts:50-56]().\n\n## Integration with Extension Host\n\nVS Code's configuration system integrates with the extension host to provide configuration to extensions:\n\n```mermaid\nsequenceDiagram\n    participant Main as Main Thread\n    participant ExtHost as Extension Host\n    participant Extension as Extension\n    \n    Main-\u003e\u003eExtHost: $initializeConfiguration(data)\n    ExtHost-\u003e\u003eExtHost: Create ExtHostConfigProvider\n    Extension-\u003e\u003eExtHost: getConfiguration()\n    ExtHost-\u003e\u003eExtension: Return WorkspaceConfiguration\n    Extension-\u003e\u003eExtHost: config.get('setting')\n    ExtHost-\u003e\u003eExtension: Return setting value\n    Extension-\u003e\u003eExtHost: config.update('setting', value)\n    ExtHost-\u003e\u003eMain: $updateConfigurationOption(target, key, value)\n    Main-\u003e\u003eExtHost: $acceptConfigurationChanged(data, change)\n    ExtHost-\u003e\u003eExtension: onDidChangeConfiguration event\n```\n\nSources: [src/vs/workbench/api/common/extHostConfiguration.ts:97-132](). [src/vs/workbench/api/browser/mainThreadConfiguration.ts:16-48]().\n\n## Key Components and Services\n\n### WorkspaceService\n\nThe `WorkspaceService` is the central implementation of both workspace context and configuration services. It manages:\n\n1. Workspace information (folders, state)\n2. Configuration from multiple sources\n3. Configuration change events\n4. Workspace trust state\n\nSources: [src/vs/workbench/services/configuration/browser/configurationService.ts:62-170]().\n\n### ConfigurationRegistry\n\nThe `ConfigurationRegistry` maintains the registry of all configuration properties, their schemas, and default values. It handles:\n\n1. Registration of configuration properties\n2. Registration of default values\n3. Schema validation\n4. Configuration property overrides\n\nSources: [src/vs/platform/configuration/common/configurationRegistry.ts:276-307]().\n\n### Configuration Models\n\nSeveral model classes represent configuration data:\n\n1. `ConfigurationModel`: Represents a single layer of configuration\n2. `Configuration`: Combines multiple configuration models with proper precedence\n3. `ConfigurationModelParser`: Parses configuration from JSON\n\nSources: [src/vs/platform/configuration/common/configurationModels.ts:29-296](). [src/vs/workbench/services/configuration/common/configurationModels.ts:97-172]().\n\n### Configuration Editing\n\nThe `ConfigurationEditing` service provides functionality to edit configuration files:\n\n1. Update configuration values in the appropriate file\n2. Handle file format and JSON structure\n3. Validate changes against schemas\n\nSources: [src/vs/workbench/services/keybinding/test/browser/keybindingEditing.test.ts:80-81]().\n\n## Conclusion\n\nVS Code's configuration system is a sophisticated framework that manages settings across multiple scopes and sources. It provides a unified way to access and modify configuration values while respecting priorities between different configuration sources. The system is designed to be extensible, allowing extensions to contribute their own configuration properties and default values.\n\nThe core services and components described in this document form the foundation of VS Code's architecture, enabling its rich functionality and extensibility."])</script>
    <script>self.__next_f.push([1, "1c:T65ea,"])</script>
    <script>self.__next_f.push([1, "# Configuration System\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [.npmrc](.npmrc)\n- [build/.moduleignore](build/.moduleignore)\n- [build/.webignore](build/.webignore)\n- [build/azure-pipelines/linux/setup-env.sh](build/azure-pipelines/linux/setup-env.sh)\n- [build/checksums/electron.txt](build/checksums/electron.txt)\n- [build/checksums/nodejs.txt](build/checksums/nodejs.txt)\n- [build/linux/debian/calculate-deps.js](build/linux/debian/calculate-deps.js)\n- [build/linux/debian/calculate-deps.ts](build/linux/debian/calculate-deps.ts)\n- [build/linux/debian/dep-lists.js](build/linux/debian/dep-lists.js)\n- [build/linux/debian/dep-lists.ts](build/linux/debian/dep-lists.ts)\n- [build/linux/dependencies-generator.js](build/linux/dependencies-generator.js)\n- [build/linux/dependencies-generator.ts](build/linux/dependencies-generator.ts)\n- [build/linux/rpm/dep-lists.js](build/linux/rpm/dep-lists.js)\n- [build/linux/rpm/dep-lists.ts](build/linux/rpm/dep-lists.ts)\n- [build/package.json](build/package.json)\n- [cgmanifest.json](cgmanifest.json)\n- [extensions/vscode-colorize-tests/src/colorizer.test.ts](extensions/vscode-colorize-tests/src/colorizer.test.ts)\n- [package-lock.json](package-lock.json)\n- [package.json](package.json)\n- [remote/.npmrc](remote/.npmrc)\n- [remote/package-lock.json](remote/package-lock.json)\n- [remote/package.json](remote/package.json)\n- [remote/web/package-lock.json](remote/web/package-lock.json)\n- [remote/web/package.json](remote/web/package.json)\n- [src/vs/editor/common/config/editorConfigurationSchema.ts](src/vs/editor/common/config/editorConfigurationSchema.ts)\n- [src/vs/platform/configuration/common/configuration.ts](src/vs/platform/configuration/common/configuration.ts)\n- [src/vs/platform/configuration/common/configurationModels.ts](src/vs/platform/configuration/common/configurationModels.ts)\n- [src/vs/platform/configuration/common/configurationRegistry.ts](src/vs/platform/configuration/common/configurationRegistry.ts)\n- [src/vs/platform/configuration/common/configurationService.ts](src/vs/platform/configuration/common/configurationService.ts)\n- [src/vs/platform/configuration/test/common/configurationModels.test.ts](src/vs/platform/configuration/test/common/configurationModels.test.ts)\n- [src/vs/platform/configuration/test/common/configurationRegistry.test.ts](src/vs/platform/configuration/test/common/configurationRegistry.test.ts)\n- [src/vs/platform/configuration/test/common/configurationService.test.ts](src/vs/platform/configuration/test/common/configurationService.test.ts)\n- [src/vs/platform/configuration/test/common/configurations.test.ts](src/vs/platform/configuration/test/common/configurations.test.ts)\n- [src/vs/platform/environment/test/node/nativeModules.integrationTest.ts](src/vs/platform/environment/test/node/nativeModules.integrationTest.ts)\n- [src/vs/platform/userData/common/fileUserDataProvider.ts](src/vs/platform/userData/common/fileUserDataProvider.ts)\n- [src/vs/platform/userData/test/browser/fileUserDataProvider.test.ts](src/vs/platform/userData/test/browser/fileUserDataProvider.test.ts)\n- [src/vs/workbench/api/browser/mainThreadConfiguration.ts](src/vs/workbench/api/browser/mainThreadConfiguration.ts)\n- [src/vs/workbench/api/common/configurationExtensionPoint.ts](src/vs/workbench/api/common/configurationExtensionPoint.ts)\n- [src/vs/workbench/api/common/extHostConfiguration.ts](src/vs/workbench/api/common/extHostConfiguration.ts)\n- [src/vs/workbench/api/test/browser/extHostConfiguration.test.ts](src/vs/workbench/api/test/browser/extHostConfiguration.test.ts)\n- [src/vs/workbench/services/configuration/browser/configuration.ts](src/vs/workbench/services/configuration/browser/configuration.ts)\n- [src/vs/workbench/services/configuration/browser/configurationService.ts](src/vs/workbench/services/configuration/browser/configurationService.ts)\n- [src/vs/workbench/services/configuration/common/configuration.ts](src/vs/workbench/services/configuration/common/configuration.ts)\n- [src/vs/workbench/services/configuration/common/configurationModels.ts](src/vs/workbench/services/configuration/common/configurationModels.ts)\n- [src/vs/workbench/services/configuration/test/browser/configuration.test.ts](src/vs/workbench/services/configuration/test/browser/configuration.test.ts)\n- [src/vs/workbench/services/configuration/test/browser/configurationService.test.ts](src/vs/workbench/services/configuration/test/browser/configurationService.test.ts)\n- [src/vs/workbench/services/configuration/test/common/configurationModels.test.ts](src/vs/workbench/services/configuration/test/common/configurationModels.test.ts)\n- [src/vs/workbench/services/keybinding/test/browser/keybindingEditing.test.ts](src/vs/workbench/services/keybinding/test/browser/keybindingEditing.test.ts)\n- [test/automation/package.json](test/automation/package.json)\n- [test/integration/browser/package.json](test/integration/browser/package.json)\n- [test/smoke/package.json](test/smoke/package.json)\n\n\u003c/details\u003e\n\n\n\nThe VS Code Configuration System manages settings across different scopes and sources, providing a unified way to access and modify configuration values throughout the application. This system is responsible for loading, merging, and providing access to settings from various sources such as user settings, workspace settings, and default settings.\n\nThis page focuses on the core configuration architecture and how settings are managed internally. For information about extension configuration contributions, see [Extension System](#4).\n\n## Overview\n\nThe Configuration System in VS Code is designed to handle settings from multiple sources with different priorities. It provides a unified API for accessing and modifying configuration values while respecting the appropriate scopes and overrides.\n\n```mermaid\nflowchart TD\n    subgraph \"Configuration Sources\"\n        DefaultConfig[\"Default Configuration\"]\n        PolicyConfig[\"Policy Configuration\"]\n        ApplicationConfig[\"Application Configuration\"]\n        UserConfig[\"User Configuration\"]\n        RemoteUserConfig[\"Remote User Configuration\"]\n        WorkspaceConfig[\"Workspace Configuration\"]\n        FolderConfig[\"Folder Configuration\"]\n        MemoryConfig[\"Memory Configuration\"]\n    end\n    \n    subgraph \"Configuration Service\"\n        ConfigService[\"ConfigurationService\"]\n        ConfigModel[\"Configuration Model\"]\n    end\n    \n    subgraph \"Consumers\"\n        Components[\"VS Code Components\"]\n        Extensions[\"Extensions\"]\n        ExtHost[\"Extension Host\"]\n    end\n    \n    DefaultConfig --\u003e ConfigService\n    PolicyConfig --\u003e ConfigService\n    ApplicationConfig --\u003e ConfigService\n    UserConfig --\u003e ConfigService\n    RemoteUserConfig --\u003e ConfigService\n    WorkspaceConfig --\u003e ConfigService\n    FolderConfig --\u003e ConfigService\n    MemoryConfig --\u003e ConfigService\n    \n    ConfigService --\u003e ConfigModel\n    ConfigModel --\u003e Components\n    ConfigModel --\u003e ExtHost\n    ExtHost --\u003e Extensions\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:130-131](src/vs/workbench/services/configuration/browser/configurationService.ts:130-131)\n- [src/vs/workbench/services/configuration/browser/configuration.ts:32-121](src/vs/workbench/services/configuration/browser/configuration.ts:32-121)\n\n## Configuration Scopes\n\nVS Code settings can be applied at different scopes, which determine where a setting can be configured and how it's applied.\n\n```mermaid\ngraph TD\n    subgraph \"Configuration Scopes\"\n        APPLICATION[\"APPLICATION (1)\"]\n        MACHINE[\"MACHINE (2)\"]\n        APPLICATION_MACHINE[\"APPLICATION_MACHINE (3)\"]\n        WINDOW[\"WINDOW (4)\"]\n        RESOURCE[\"RESOURCE (5)\"]\n        LANGUAGE_OVERRIDABLE[\"LANGUAGE_OVERRIDABLE (6)\"]\n        MACHINE_OVERRIDABLE[\"MACHINE_OVERRIDABLE (7)\"]\n    end\n    \n    APPLICATION --\u003e |\"Default profile only\"| DefaultProfile\n    MACHINE --\u003e |\"Local and remote\"| UserSettings\n    APPLICATION_MACHINE --\u003e |\"Default profile and remote\"| MixedSettings\n    WINDOW --\u003e |\"User or workspace\"| WorkspaceSettings\n    RESOURCE --\u003e |\"User, workspace, or folder\"| FolderSettings\n    LANGUAGE_OVERRIDABLE --\u003e |\"Language-specific settings\"| LanguageSettings\n    MACHINE_OVERRIDABLE --\u003e |\"Machine settings overridable in workspace\"| WorkspaceMachineSettings\n    \n    subgraph \"Setting Locations\"\n        DefaultProfile[\"Default Profile Settings\"]\n        UserSettings[\"User Settings\"]\n        MixedSettings[\"Mixed Settings\"]\n        WorkspaceSettings[\"Workspace Settings\"]\n        FolderSettings[\"Folder Settings\"]\n        LanguageSettings[\"Language Settings\"]\n        WorkspaceMachineSettings[\"Workspace Machine Settings\"]\n    end\n```\n\nSources:\n- [src/vs/platform/configuration/common/configurationRegistry.ts:128-157](src/vs/platform/configuration/common/configurationRegistry.ts:128-157)\n- [src/vs/workbench/services/configuration/common/configuration.ts:28-33](src/vs/workbench/services/configuration/common/configuration.ts:28-33)\n\n## Configuration Targets\n\nConfiguration targets define where a setting is stored when updated. Each target corresponds to a specific settings file or storage location.\n\n| Target | Description | File Location |\n|--------|-------------|---------------|\n| `APPLICATION` | Application-wide settings | Default profile settings.json |\n| `USER` | User settings (auto-determines local vs remote) | User settings.json |\n| `USER_LOCAL` | Local user settings | Local user settings.json |\n| `USER_REMOTE` | Remote user settings | Remote user settings.json |\n| `WORKSPACE` | Workspace settings | workspace.json or .code-workspace file |\n| `WORKSPACE_FOLDER` | Folder-specific settings | .vscode/settings.json in folder |\n| `DEFAULT` | Default settings (read-only) | Built-in defaults |\n| `MEMORY` | In-memory settings (temporary) | Not persisted to disk |\n\nSources:\n- [src/vs/platform/configuration/common/configuration.ts:38-47](src/vs/platform/configuration/common/configuration.ts:38-47)\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:362-363](src/vs/workbench/services/configuration/browser/configurationService.ts:362-363)\n\n## Configuration Architecture\n\nThe configuration system is built around several key components that work together to provide a unified configuration experience.\n\n```mermaid\nclassDiagram\n    class IConfigurationService {\n        \u003c\u003cinterface\u003e\u003e\n        +getValue(section, overrides)\n        +updateValue(key, value, target)\n        +inspect(key, overrides)\n        +onDidChangeConfiguration\n    }\n    \n    class WorkspaceService {\n        -defaultConfiguration: DefaultConfiguration\n        -policyConfiguration: IPolicyConfiguration\n        -applicationConfiguration: ApplicationConfiguration\n        -localUserConfiguration: UserConfiguration\n        -remoteUserConfiguration: RemoteUserConfiguration\n        -workspaceConfiguration: WorkspaceConfiguration\n        -cachedFolderConfigs: ResourceMap~FolderConfiguration~\n        -_configuration: Configuration\n        +getValue(section, overrides)\n        +updateValue(key, value, target)\n        +reloadConfiguration()\n    }\n    \n    class Configuration {\n        -defaults: ConfigurationModel\n        -policy: ConfigurationModel\n        -application: ConfigurationModel\n        -localUser: ConfigurationModel\n        -remoteUser: ConfigurationModel\n        -workspace: ConfigurationModel\n        -folders: ResourceMap~ConfigurationModel~\n        -memory: ConfigurationModel\n        +getValue(section, overrides)\n        +inspect(key, overrides)\n        +toData()\n    }\n    \n    class ConfigurationModel {\n        -_contents: any\n        -_keys: string[]\n        -_overrides: IOverrides[]\n        +getValue(section)\n        +getOverrideValue(section, overrideIdentifier)\n        +override(identifier)\n        +merge(others)\n    }\n    \n    IConfigurationService \u003c|-- WorkspaceService\n    WorkspaceService --\u003e Configuration\n    Configuration --\u003e ConfigurationModel\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:63-109](src/vs/workbench/services/configuration/browser/configurationService.ts:63-109)\n- [src/vs/platform/configuration/common/configurationModels.ts:29-296](src/vs/platform/configuration/common/configurationModels.ts:29-296)\n\n## Configuration Loading Process\n\nThe configuration loading process involves several steps to gather and merge settings from different sources.\n\n```mermaid\nsequenceDiagram\n    participant WS as WorkspaceService\n    participant DC as DefaultConfiguration\n    participant PC as PolicyConfiguration\n    participant AC as ApplicationConfiguration\n    participant LUC as LocalUserConfiguration\n    participant RUC as RemoteUserConfiguration\n    participant WC as WorkspaceConfiguration\n    participant FC as FolderConfiguration\n    participant C as Configuration\n\n    WS-\u003e\u003eDC: initialize()\n    WS-\u003e\u003ePC: initialize()\n    WS-\u003e\u003eAC: initialize()\n    WS-\u003e\u003eLUC: initialize()\n    WS-\u003e\u003eRUC: initialize()\n    WS-\u003e\u003eWC: initialize()\n    \n    DC--\u003e\u003eWS: defaultConfigurationModel\n    PC--\u003e\u003eWS: policyConfigurationModel\n    AC--\u003e\u003eWS: applicationConfigurationModel\n    LUC--\u003e\u003eWS: localUserConfigurationModel\n    RUC--\u003e\u003eWS: remoteUserConfigurationModel\n    WC--\u003e\u003eWS: workspaceConfigurationModel\n    \n    WS-\u003e\u003eC: loadConfiguration(defaults, policy, application, localUser, remoteUser, workspace, folders, memory)\n    C--\u003e\u003eWS: configurationModel\n    \n    WS-\u003e\u003eWS: _onDidChangeConfiguration.fire(event)\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:371-386](src/vs/workbench/services/configuration/browser/configurationService.ts:371-386)\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:1000-1050](src/vs/workbench/services/configuration/browser/configurationService.ts:1000-1050)\n\n## Configuration Models\n\nConfiguration models represent the settings data at different levels. They are responsible for storing and retrieving configuration values.\n\n```mermaid\ngraph TD\n    subgraph \"Configuration Models\"\n        CM[\"ConfigurationModel\"]\n        CMP[\"ConfigurationModelParser\"]\n        WCMP[\"WorkspaceConfigurationModelParser\"]\n        SCMP[\"StandaloneConfigurationModelParser\"]\n    end\n    \n    CM --\u003e |\"Stores\"| Contents[\"Contents (settings values)\"]\n    CM --\u003e |\"Tracks\"| Keys[\"Keys (setting names)\"]\n    CM --\u003e |\"Manages\"| Overrides[\"Overrides (language-specific settings)\"]\n    \n    CMP --\u003e |\"Parses\"| JSON[\"JSON settings file\"]\n    CMP --\u003e |\"Creates\"| CM\n    \n    WCMP --\u003e |\"Extends\"| CMP\n    WCMP --\u003e |\"Parses\"| WorkspaceFile[\"Workspace file\"]\n    \n    SCMP --\u003e |\"Extends\"| CMP\n    SCMP --\u003e |\"Parses\"| StandaloneFile[\"Standalone config file (tasks, launch)\"]\n```\n\nSources:\n- [src/vs/platform/configuration/common/configurationModels.ts:29-296](src/vs/platform/configuration/common/configurationModels.ts:29-296)\n- [src/vs/platform/configuration/common/configurationModels.ts:306-650](src/vs/platform/configuration/common/configurationModels.ts:306-650)\n\n## Configuration Registry\n\nThe Configuration Registry is responsible for registering configuration properties and their schemas. It's used by extensions and core components to define available settings.\n\n```mermaid\nclassDiagram\n    class IConfigurationRegistry {\n        \u003c\u003cinterface\u003e\u003e\n        +registerConfiguration(configuration)\n        +registerConfigurations(configurations)\n        +registerDefaultConfigurations(defaultConfigurations)\n        +notifyConfigurationSchemaUpdated(configurations)\n        +onDidSchemaChange\n        +onDidUpdateConfiguration\n    }\n    \n    class ConfigurationRegistry {\n        -configurationContributors: IConfigurationNode[]\n        -configurationProperties: IStringDictionary~IRegisteredConfigurationPropertySchema~\n        -registeredConfigurationDefaults: IConfigurationDefaults[]\n        -configurationDefaultsOverrides: Map\n        +registerConfiguration(configuration)\n        +registerConfigurations(configurations)\n        +registerDefaultConfigurations(defaultConfigurations)\n    }\n    \n    IConfigurationRegistry \u003c|-- ConfigurationRegistry\n```\n\nSources:\n- [src/vs/platform/configuration/common/configurationRegistry.ts:34-126](src/vs/platform/configuration/common/configurationRegistry.ts:34-126)\n- [src/vs/platform/configuration/common/configurationRegistry.ts:276-1000](src/vs/platform/configuration/common/configurationRegistry.ts:276-1000)\n\n## Configuration Extension Point\n\nVS Code allows extensions to contribute configuration properties through the `configuration` and `configurationDefaults` extension points.\n\n```mermaid\ngraph TD\n    subgraph \"Extension Contribution\"\n        EP[\"Extension Package.json\"]\n        CP[\"contributes.configuration\"]\n        CD[\"contributes.configurationDefaults\"]\n    end\n    \n    EP --\u003e CP\n    EP --\u003e CD\n    \n    CP --\u003e |\"Registers\"| Properties[\"Configuration Properties\"]\n    CD --\u003e |\"Sets\"| Defaults[\"Default Values\"]\n    \n    Properties --\u003e |\"Added to\"| Registry[\"Configuration Registry\"]\n    Defaults --\u003e |\"Added to\"| Registry\n    \n    Registry --\u003e |\"Updates\"| Schema[\"JSON Schema\"]\n    Registry --\u003e |\"Notifies\"| Service[\"Configuration Service\"]\n```\n\nSources:\n- [src/vs/workbench/api/common/configurationExtensionPoint.ts:26-132](src/vs/workbench/api/common/configurationExtensionPoint.ts:26-132)\n- [src/vs/workbench/api/common/configurationExtensionPoint.ts:138-180](src/vs/workbench/api/common/configurationExtensionPoint.ts:138-180)\n\n## Configuration Editing\n\nThe Configuration Editing service provides APIs for programmatically editing configuration files.\n\n```mermaid\nclassDiagram\n    class IConfigurationEditingService {\n        \u003c\u003cinterface\u003e\u003e\n        +writeConfiguration(target, value, options)\n        +revertConfiguration(target, source)\n    }\n    \n    class ConfigurationEditing {\n        -jsonEditingService: IJSONEditingService\n        -textFileService: ITextFileService\n        -fileService: IFileService\n        +writeConfiguration(target, value, options)\n        -resolveModelReference(resource)\n        -resolveAndValidate(target, key, value, checkDirty)\n    }\n    \n    IConfigurationEditingService \u003c|-- ConfigurationEditing\n```\n\nSources:\n- [src/vs/workbench/services/configuration/common/configurationEditing.ts](src/vs/workbench/services/configuration/common/configurationEditing.ts)\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:362-363](src/vs/workbench/services/configuration/browser/configurationService.ts:362-363)\n\n## Configuration Access\n\nThe Configuration Service provides methods to access configuration values from anywhere in the application.\n\n### Getting Configuration Values\n\n```typescript\n// Get a specific configuration value\nconst tabSize = configurationService.getValue\u003cnumber\u003e('editor.tabSize');\n\n// Get a configuration value with overrides\nconst pythonTabSize = configurationService.getValue\u003cnumber\u003e('editor.tabSize', { \n    overrideIdentifier: 'python' \n});\n\n// Get a configuration value for a specific resource\nconst fileTabSize = configurationService.getValue\u003cnumber\u003e('editor.tabSize', { \n    resource: fileUri \n});\n```\n\n### Inspecting Configuration Values\n\n```typescript\n// Inspect a configuration value to see where it's defined\nconst inspectResult = configurationService.inspect('editor.tabSize');\nconsole.log(inspectResult.defaultValue); // Default value\nconsole.log(inspectResult.userValue);    // User value\nconsole.log(inspectResult.workspaceValue); // Workspace value\nconsole.log(inspectResult.value);        // Effective value\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:324-332](src/vs/workbench/services/configuration/browser/configurationService.ts:324-332)\n- [src/vs/platform/configuration/common/configuration.ts:75-105](src/vs/platform/configuration/common/configuration.ts:75-105)\n\n## Configuration Updates\n\nThe Configuration Service provides methods to update configuration values.\n\n```mermaid\nsequenceDiagram\n    participant App as Application\n    participant CS as ConfigurationService\n    participant CES as ConfigurationEditingService\n    participant FS as FileService\n    participant CM as ConfigurationModel\n    \n    App-\u003e\u003eCS: updateValue('editor.tabSize', 4, ConfigurationTarget.USER)\n    CS-\u003e\u003eCS: deriveConfigurationTargets(key, value, inspect)\n    CS-\u003e\u003eCES: writeConfiguration(target, value, options)\n    CES-\u003e\u003eFS: writeFile(resource, content)\n    FS--\u003e\u003eCES: success\n    CES--\u003e\u003eCS: success\n    CS-\u003e\u003eCS: reloadConfiguration()\n    CS-\u003e\u003eCM: update models\n    CM--\u003e\u003eCS: updated configuration\n    CS-\u003e\u003eApp: _onDidChangeConfiguration.fire(event)\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:334-363](src/vs/workbench/services/configuration/browser/configurationService.ts:334-363)\n- [src/vs/workbench/services/configuration/common/configurationEditing.ts](src/vs/workbench/services/configuration/common/configurationEditing.ts)\n\n## Configuration Change Events\n\nThe Configuration Service emits events when configuration values change, allowing components to react to these changes.\n\n```typescript\n// Listen for configuration changes\nconst disposable = configurationService.onDidChangeConfiguration(event =\u003e {\n    // Check if a specific configuration has changed\n    if (event.affectsConfiguration('editor.tabSize')) {\n        // Handle the change\n    }\n    \n    // Check if a specific configuration with overrides has changed\n    if (event.affectsConfiguration('editor.tabSize', { overrideIdentifier: 'python' })) {\n        // Handle the change\n    }\n});\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:83-96](src/vs/workbench/services/configuration/browser/configurationService.ts:83-96)\n- [src/vs/platform/configuration/common/configurationModels.ts:1000-1100](src/vs/platform/configuration/common/configurationModels.ts:1000-1100)\n\n## Configuration Files\n\nVS Code uses several JSON files to store configuration at different levels.\n\n| File | Location | Purpose |\n|------|----------|---------|\n| `settings.json` | User settings directory | User-specific settings |\n| `settings.json` | `.vscode` folder in workspace | Workspace folder-specific settings |\n| `*.code-workspace` | Workspace root | Multi-root workspace settings |\n| `launch.json` | `.vscode` folder | Debugging configurations |\n| `tasks.json` | `.vscode` folder | Task configurations |\n\nSources:\n- [src/vs/workbench/services/configuration/common/configuration.ts:14-26](src/vs/workbench/services/configuration/common/configuration.ts:14-26)\n- [src/vs/workbench/services/configuration/browser/configuration.ts:123-221](src/vs/workbench/services/configuration/browser/configuration.ts:123-221)\n\n## Remote Configuration\n\nVS Code supports remote development, which requires handling configuration from both local and remote environments.\n\n```mermaid\ngraph TD\n    subgraph \"Local Machine\"\n        LCS[\"Local Configuration Service\"]\n        LUC[\"Local User Configuration\"]\n    end\n    \n    subgraph \"Remote Machine\"\n        RCS[\"Remote Configuration Service\"]\n        RUC[\"Remote User Configuration\"]\n    end\n    \n    LCS --\u003e |\"Reads\"| LUC\n    RCS --\u003e |\"Reads\"| RUC\n    \n    LCS \u003c--\u003e |\"Synchronizes\"| RCS\n    \n    subgraph \"Merged Configuration\"\n        MC[\"Merged Configuration Model\"]\n    end\n    \n    LUC --\u003e MC\n    RUC --\u003e MC\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configuration.ts:361-459](src/vs/workbench/services/configuration/browser/configuration.ts:361-459)\n- [src/vs/workbench/services/configuration/browser/configurationService.ts:136-145](src/vs/workbench/services/configuration/browser/configurationService.ts:136-145)\n\n## Configuration Overrides\n\nVS Code supports language-specific settings through configuration overrides.\n\n```mermaid\ngraph TD\n    subgraph \"Configuration Overrides\"\n        SO[\"Setting Overrides\"]\n        LS[\"Language-specific Settings\"]\n    end\n    \n    SO --\u003e |\"Format\"| Pattern[\"[language].setting\"]\n    LS --\u003e |\"Example\"| Example[\"[python].editor.tabSize: 4\"]\n    \n    Pattern --\u003e |\"Stored in\"| OM[\"Override Model\"]\n    Example --\u003e |\"Applied to\"| Python[\"Python files\"]\n    \n    OM --\u003e |\"Retrieved via\"| GetOverride[\"getOverrideValue()\"]\n```\n\nSources:\n- [src/vs/platform/configuration/common/configurationModels.ts:112-117](src/vs/platform/configuration/common/configurationModels.ts:112-117)\n- [src/vs/platform/configuration/common/configurationRegistry.ts:400-420](src/vs/platform/configuration/common/configurationRegistry.ts:400-420)\n\n## Configuration Defaults\n\nVS Code provides default values for all settings, which are used when no user or workspace setting is defined.\n\n```mermaid\ngraph TD\n    subgraph \"Default Configuration\"\n        DC[\"DefaultConfiguration\"]\n        PCO[\"Product Configuration Overrides\"]\n        ECO[\"Extension Configuration Overrides\"]\n    end\n    \n    DC --\u003e |\"Loads\"| PCO\n    DC --\u003e |\"Loads\"| ECO\n    \n    PCO --\u003e |\"From\"| Product[\"product.json\"]\n    ECO --\u003e |\"From\"| Extensions[\"Extension contributions\"]\n    \n    DC --\u003e |\"Creates\"| DCM[\"Default Configuration Model\"]\n    DCM --\u003e |\"Used as base for\"| CM[\"Configuration Model\"]\n```\n\nSources:\n- [src/vs/workbench/services/configuration/browser/configuration.ts:32-121](src/vs/workbench/services/configuration/browser/configuration.ts:32-121)\n- [src/vs/platform/configuration/common/configurationRegistry.ts:358-397](src/vs/platform/configuration/common/configurationRegistry.ts:358-397)\n\n## Conclusion\n\nThe VS Code Configuration System provides a flexible and powerful way to manage settings across different scopes and environments. It handles the complexity of merging settings from multiple sources while providing a simple API for accessing and modifying configuration values.\n\nThe system is designed to be extensible, allowing extensions to contribute their own configuration properties and default values. It also supports advanced features like language-specific settings and remote configuration.\n\nUnderstanding the Configuration System is essential for developing extensions and contributing to the VS Code codebase, as it's a fundamental part of the application's architecture."])</script>
    <script>self.__next_f.push([1, "1d:T6d03,"])</script>
    <script>self.__next_f.push([1, "# List and Tree Components\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/base/browser/ui/list/list.ts](src/vs/base/browser/ui/list/list.ts)\n- [src/vs/base/browser/ui/list/listPaging.ts](src/vs/base/browser/ui/list/listPaging.ts)\n- [src/vs/base/browser/ui/list/listView.ts](src/vs/base/browser/ui/list/listView.ts)\n- [src/vs/base/browser/ui/list/listWidget.ts](src/vs/base/browser/ui/list/listWidget.ts)\n- [src/vs/base/browser/ui/list/rangeMap.ts](src/vs/base/browser/ui/list/rangeMap.ts)\n- [src/vs/base/browser/ui/list/rowCache.ts](src/vs/base/browser/ui/list/rowCache.ts)\n- [src/vs/base/browser/ui/tree/abstractTree.ts](src/vs/base/browser/ui/tree/abstractTree.ts)\n- [src/vs/base/browser/ui/tree/asyncDataTree.ts](src/vs/base/browser/ui/tree/asyncDataTree.ts)\n- [src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts](src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts)\n- [src/vs/base/browser/ui/tree/dataTree.ts](src/vs/base/browser/ui/tree/dataTree.ts)\n- [src/vs/base/browser/ui/tree/indexTree.ts](src/vs/base/browser/ui/tree/indexTree.ts)\n- [src/vs/base/browser/ui/tree/indexTreeModel.ts](src/vs/base/browser/ui/tree/indexTreeModel.ts)\n- [src/vs/base/browser/ui/tree/media/tree.css](src/vs/base/browser/ui/tree/media/tree.css)\n- [src/vs/base/browser/ui/tree/objectTree.ts](src/vs/base/browser/ui/tree/objectTree.ts)\n- [src/vs/base/browser/ui/tree/objectTreeModel.ts](src/vs/base/browser/ui/tree/objectTreeModel.ts)\n- [src/vs/base/browser/ui/tree/tree.ts](src/vs/base/browser/ui/tree/tree.ts)\n- [src/vs/base/test/browser/ui/list/rangeMap.test.ts](src/vs/base/test/browser/ui/list/rangeMap.test.ts)\n- [src/vs/base/test/browser/ui/tree/asyncDataTree.test.ts](src/vs/base/test/browser/ui/tree/asyncDataTree.test.ts)\n- [src/vs/base/test/browser/ui/tree/compressedObjectTreeModel.test.ts](src/vs/base/test/browser/ui/tree/compressedObjectTreeModel.test.ts)\n- [src/vs/base/test/browser/ui/tree/indexTreeModel.test.ts](src/vs/base/test/browser/ui/tree/indexTreeModel.test.ts)\n- [src/vs/base/test/browser/ui/tree/objectTree.test.ts](src/vs/base/test/browser/ui/tree/objectTree.test.ts)\n- [src/vs/base/test/browser/ui/tree/objectTreeModel.test.ts](src/vs/base/test/browser/ui/tree/objectTreeModel.test.ts)\n- [src/vs/platform/list/browser/listService.ts](src/vs/platform/list/browser/listService.ts)\n- [src/vs/workbench/browser/actions/listCommands.ts](src/vs/workbench/browser/actions/listCommands.ts)\n\n\u003c/details\u003e\n\n\n\nThis document describes the virtualized list and tree UI components used throughout VS Code. These components provide efficient rendering of large collections of items with support for selection, keyboard navigation, drag and drop, and other interactive features.\n\nFor information about the Monaco Editor, see [Monaco Editor](#3).\n\n## Overview\n\nVS Code's list and tree components are foundational UI elements that appear in many parts of the application, including the Explorer, Search Results, Extensions view, and more. These components are designed to efficiently render potentially large collections of items while maintaining smooth performance.\n\nThe components are built on a virtualization architecture that only renders items currently visible in the viewport, allowing for efficient memory usage and performance even with very large data sets.\n\n```mermaid\ngraph TD\n    subgraph \"Core Components\"\n        ListView[\"ListView\u003cT\u003e\"]\n        List[\"List\u003cT\u003e\"]\n        AbstractTree[\"AbstractTree\u003cT, TFilterData, TRef\u003e\"]\n        ObjectTree[\"ObjectTree\u003cT, TFilterData\u003e\"]\n        DataTree[\"DataTree\u003cTInput, T, TFilterData\u003e\"]\n        AsyncDataTree[\"AsyncDataTree\u003cTInput, T, TFilterData\u003e\"]\n        CompressibleTree[\"CompressibleObjectTree\u003cT, TFilterData\u003e\"]\n    end\n    \n    subgraph \"Models\"\n        RangeMap[\"RangeMap\"]\n        IndexTreeModel[\"IndexTreeModel\u003cT, TFilterData\u003e\"]\n        ObjectTreeModel[\"ObjectTreeModel\u003cT, TFilterData\u003e\"]\n        CompressedTreeModel[\"CompressedObjectTreeModel\u003cT, TFilterData\u003e\"]\n    end\n    \n    subgraph \"Interfaces\"\n        IListVirtualDelegate[\"IListVirtualDelegate\u003cT\u003e\"]\n        IListRenderer[\"IListRenderer\u003cT, TTemplateData\u003e\"]\n        ITreeRenderer[\"ITreeRenderer\u003cT, TFilterData, TTemplateData\u003e\"]\n        IDataSource[\"IDataSource\u003cTInput, T\u003e\"]\n        IAsyncDataSource[\"IAsyncDataSource\u003cTInput, T\u003e\"]\n    end\n    \n    ListView --\u003e RangeMap\n    List --\u003e ListView\n    \n    AbstractTree --\u003e List\n    ObjectTree --\u003e AbstractTree\n    DataTree --\u003e AbstractTree\n    AsyncDataTree --\u003e AbstractTree\n    CompressibleTree --\u003e ObjectTree\n    \n    ObjectTree --\u003e ObjectTreeModel\n    DataTree --\u003e ObjectTreeModel\n    AsyncDataTree --\u003e ObjectTreeModel\n    CompressibleTree --\u003e CompressedTreeModel\n    \n    ObjectTreeModel --\u003e IndexTreeModel\n    CompressedTreeModel --\u003e ObjectTreeModel\n    \n    IListVirtualDelegate -.-\u003e List\n    IListRenderer -.-\u003e List\n    ITreeRenderer -.-\u003e AbstractTree\n    IDataSource -.-\u003e DataTree\n    IAsyncDataSource -.-\u003e AsyncDataTree\n```\n\nSources:\n- [src/vs/base/browser/ui/list/listView.ts](src/vs/base/browser/ui/list/listView.ts)\n- [src/vs/base/browser/ui/list/listWidget.ts](src/vs/base/browser/ui/list/listWidget.ts)\n- [src/vs/base/browser/ui/tree/abstractTree.ts](src/vs/base/browser/ui/tree/abstractTree.ts)\n- [src/vs/base/browser/ui/tree/objectTree.ts](src/vs/base/browser/ui/tree/objectTree.ts)\n- [src/vs/base/browser/ui/tree/dataTree.ts](src/vs/base/browser/ui/tree/dataTree.ts)\n- [src/vs/base/browser/ui/tree/asyncDataTree.ts](src/vs/base/browser/ui/tree/asyncDataTree.ts)\n\n## Component Hierarchy\n\nThe list and tree components follow a hierarchical structure, with each level building upon the previous one to add more specialized functionality.\n\n```mermaid\ngraph TD\n    ListView[\"ListView\u003cT\u003e\"] --\u003e List[\"List\u003cT\u003e\"]\n    List --\u003e AbstractTree[\"AbstractTree\u003cT, TFilterData, TRef\u003e\"]\n    AbstractTree --\u003e ObjectTree[\"ObjectTree\u003cT, TFilterData\u003e\"]\n    ObjectTree --\u003e CompressibleObjectTree[\"CompressibleObjectTree\u003cT, TFilterData\u003e\"]\n    AbstractTree --\u003e DataTree[\"DataTree\u003cTInput, T, TFilterData\u003e\"]\n    AbstractTree --\u003e AsyncDataTree[\"AsyncDataTree\u003cTInput, T, TFilterData\u003e\"]\n    AsyncDataTree --\u003e CompressibleAsyncDataTree[\"CompressibleAsyncDataTree\u003cTInput, T, TFilterData\u003e\"]\n    \n    style ListView fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style List fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style AbstractTree fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style ObjectTree fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style CompressibleObjectTree fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style DataTree fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style AsyncDataTree fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style CompressibleAsyncDataTree fill:#f9f9f9,stroke:#333,stroke-width:1px\n```\n\nSources:\n- [src/vs/base/browser/ui/list/listView.ts](src/vs/base/browser/ui/list/listView.ts)\n- [src/vs/base/browser/ui/list/listWidget.ts](src/vs/base/browser/ui/list/listWidget.ts)\n- [src/vs/base/browser/ui/tree/abstractTree.ts](src/vs/base/browser/ui/tree/abstractTree.ts)\n- [src/vs/base/browser/ui/tree/objectTree.ts](src/vs/base/browser/ui/tree/objectTree.ts)\n- [src/vs/base/browser/ui/tree/dataTree.ts](src/vs/base/browser/ui/tree/dataTree.ts)\n- [src/vs/base/browser/ui/tree/asyncDataTree.ts](src/vs/base/browser/ui/tree/asyncDataTree.ts)\n\n## Core Components\n\n### ListView\n\n`ListView\u003cT\u003e` is the foundational component that handles virtualization. It only renders elements that are currently visible in the viewport, recycling DOM nodes as the user scrolls.\n\nKey responsibilities:\n- Virtual scrolling\n- DOM recycling\n- Item rendering\n- Scroll event handling\n- Drag and drop support\n\n```typescript\nexport class ListView\u003cT\u003e implements IListView\u003cT\u003e {\n    constructor(\n        container: HTMLElement,\n        virtualDelegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: IListRenderer\u003cany, any\u003e[],\n        options: IListViewOptions\u003cT\u003e = DefaultOptions\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/list/listView.ts:288-1472](src/vs/base/browser/ui/list/listView.ts:288-1472)\n\n### List\n\n`List\u003cT\u003e` builds on `ListView\u003cT\u003e` to add:\n- Selection management\n- Keyboard navigation\n- Focus management\n- Accessibility support\n\n```typescript\nexport class List\u003cT\u003e implements IDisposable {\n    constructor(\n        user: string,\n        container: HTMLElement,\n        virtualDelegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: IListRenderer\u003cT, any\u003e[],\n        options?: IListOptions\u003cT\u003e\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/list/listWidget.ts](src/vs/base/browser/ui/list/listWidget.ts)\n\n### AbstractTree\n\n`AbstractTree\u003cT, TFilterData, TRef\u003e` extends `List\u003cT\u003e` to add hierarchical data support:\n- Tree node management\n- Expansion/collapse functionality\n- Tree-specific keyboard navigation\n- Filtering capabilities\n\n```typescript\nexport abstract class AbstractTree\u003cT, TFilterData, TRef\u003e extends Disposable {\n    constructor(\n        user: string,\n        container: HTMLElement,\n        delegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: ITreeRenderer\u003cT, TFilterData, any\u003e[],\n        options: IAbstractTreeOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/abstractTree.ts](src/vs/base/browser/ui/tree/abstractTree.ts)\n\n### ObjectTree\n\n`ObjectTree\u003cT, TFilterData\u003e` is a concrete implementation of `AbstractTree` that works with object-based data structures:\n- Manages parent-child relationships between objects\n- Handles collapsible state\n- Supports sorting\n\n```typescript\nexport class ObjectTree\u003cT extends NonNullable\u003cany\u003e, TFilterData = void\u003e extends AbstractTree\u003cT | null, TFilterData, T | null\u003e {\n    constructor(\n        protected readonly user: string,\n        container: HTMLElement,\n        delegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: ITreeRenderer\u003cT, TFilterData, any\u003e[],\n        options: IObjectTreeOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/objectTree.ts:38-87](src/vs/base/browser/ui/tree/objectTree.ts:38-87)\n\n### DataTree\n\n`DataTree\u003cTInput, T, TFilterData\u003e` extends `AbstractTree` to work with data sources that provide children on demand:\n- Uses a data source to fetch children\n- Manages parent-child relationships\n- Supports refreshing data\n\n```typescript\nexport class DataTree\u003cTInput, T, TFilterData = void\u003e extends AbstractTree\u003cT | null, TFilterData, T | null\u003e {\n    constructor(\n        private user: string,\n        container: HTMLElement,\n        delegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: ITreeRenderer\u003cT, TFilterData, any\u003e[],\n        private dataSource: IDataSource\u003cTInput, T\u003e,\n        options: IDataTreeOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/dataTree.ts:16-173](src/vs/base/browser/ui/tree/dataTree.ts:16-173)\n\n### AsyncDataTree\n\n`AsyncDataTree\u003cTInput, T, TFilterData\u003e` extends `AbstractTree` to work with asynchronous data sources:\n- Handles async data loading\n- Shows loading states\n- Manages refresh operations\n- Supports cancellation\n\n```typescript\nexport class AsyncDataTree\u003cTInput, T, TFilterData = void\u003e implements IDisposable {\n    constructor(\n        private user: string,\n        container: HTMLElement,\n        delegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: ITreeRenderer\u003cT, TFilterData, any\u003e[],\n        dataSource: IAsyncDataSource\u003cTInput, T\u003e,\n        options: IAsyncDataTreeOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/asyncDataTree.ts:522-1087](src/vs/base/browser/ui/tree/asyncDataTree.ts:522-1087)\n\n### CompressibleObjectTree and CompressibleAsyncDataTree\n\nThese variants add path compression capabilities to their respective base classes:\n- Compress single-child nodes into a single visual node\n- Support for path-based navigation\n- Maintain logical tree structure while simplifying the visual representation\n\nSources:\n- [src/vs/base/browser/ui/tree/objectTree.ts:88-397](src/vs/base/browser/ui/tree/objectTree.ts:88-397)\n- [src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts](src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts)\n- [src/vs/base/browser/ui/tree/asyncDataTree.ts:1088-1600](src/vs/base/browser/ui/tree/asyncDataTree.ts:1088-1600)\n\n## Models\n\nThe tree components use model classes to manage their data structures and state:\n\n### RangeMap\n\n`RangeMap` is a data structure that maps indices to positions in a virtual space, used by `ListView` for virtualization.\n\n```typescript\nexport class RangeMap implements IRangeMap {\n    constructor(paddingTop: number = 0) {\n        this.paddingTop = paddingTop;\n    }\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/list/rangeMap.ts](src/vs/base/browser/ui/list/rangeMap.ts)\n\n### IndexTreeModel\n\n`IndexTreeModel\u003cT, TFilterData\u003e` is the base tree model that manages a tree structure using numeric indices for node locations.\n\n```typescript\nexport class IndexTreeModel\u003cT extends Exclude\u003cany, undefined\u003e, TFilterData = void\u003e implements ITreeModel\u003cT, TFilterData, number[]\u003e {\n    constructor(\n        private user: string,\n        rootElement: T,\n        options: IIndexTreeModelOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/indexTreeModel.ts:92-1000](src/vs/base/browser/ui/tree/indexTreeModel.ts:92-1000)\n\n### ObjectTreeModel\n\n`ObjectTreeModel\u003cT, TFilterData\u003e` extends the tree model concept to work with objects as elements.\n\n```typescript\nexport class ObjectTreeModel\u003cT extends NonNullable\u003cany\u003e, TFilterData extends NonNullable\u003cany\u003e = void\u003e implements IObjectTreeModel\u003cT, TFilterData\u003e {\n    constructor(\n        private user: string,\n        options: IObjectTreeModelOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/objectTreeModel.ts:27-392](src/vs/base/browser/ui/tree/objectTreeModel.ts:27-392)\n\n### CompressedObjectTreeModel\n\n`CompressedObjectTreeModel\u003cT, TFilterData\u003e` adds path compression capabilities to the object tree model.\n\n```typescript\nexport class CompressedObjectTreeModel\u003cT extends NonNullable\u003cany\u003e, TFilterData extends NonNullable\u003cany\u003e = void\u003e implements ITreeModel\u003cICompressedTreeNode\u003cT\u003e | null, TFilterData, T | null\u003e {\n    constructor(\n        private user: string,\n        options: ICompressedObjectTreeModelOptions\u003cT, TFilterData\u003e = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts:120-445](src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts:120-445)\n\n## Key Interfaces\n\n### IListVirtualDelegate\n\nThis interface provides size information for list items:\n\n```typescript\nexport interface IListVirtualDelegate\u003cT\u003e {\n    getHeight(element: T): number;\n    getTemplateId(element: T): string;\n    hasDynamicHeight?(element: T): boolean;\n    getDynamicHeight?(element: T): number | null;\n    setDynamicHeight?(element: T, height: number): void;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/list/list.ts:13-19](src/vs/base/browser/ui/list/list.ts:13-19)\n\n### IListRenderer\n\nThis interface defines how to render list items:\n\n```typescript\nexport interface IListRenderer\u003cT, TTemplateData\u003e {\n    readonly templateId: string;\n    renderTemplate(container: HTMLElement): TTemplateData;\n    renderElement(element: T, index: number, templateData: TTemplateData, height: number | undefined): void;\n    disposeElement?(element: T, index: number, templateData: TTemplateData, height: number | undefined): void;\n    disposeTemplate(templateData: TTemplateData): void;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/list/list.ts:21-27](src/vs/base/browser/ui/list/list.ts:21-27)\n\n### ITreeRenderer\n\nThis interface extends `IListRenderer` with tree-specific rendering capabilities:\n\n```typescript\nexport interface ITreeRenderer\u003cT, TFilterData = void, TTemplateData = void\u003e extends IListRenderer\u003cITreeNode\u003cT, TFilterData\u003e, TTemplateData\u003e {\n    renderTwistie?(element: T, twistieElement: HTMLElement): boolean;\n    onDidChangeTwistieState?: Event\u003cT\u003e;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/tree.ts:162-165](src/vs/base/browser/ui/tree/tree.ts:162-165)\n\n### IDataSource and IAsyncDataSource\n\nThese interfaces define how to fetch children for tree nodes:\n\n```typescript\nexport interface IDataSource\u003cTInput, T\u003e {\n    hasChildren?(element: TInput | T): boolean;\n    getChildren(element: TInput | T): Iterable\u003cT\u003e;\n}\n\nexport interface IAsyncDataSource\u003cTInput, T\u003e {\n    hasChildren(element: TInput | T): boolean;\n    getChildren(element: TInput | T): Iterable\u003cT\u003e | Promise\u003cIterable\u003cT\u003e\u003e;\n    getParent?(element: T): TInput | T;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/tree.ts:200-208](src/vs/base/browser/ui/tree/tree.ts:200-208)\n\n## Rendering Architecture\n\nThe list and tree components use a template-based rendering system to efficiently create and recycle DOM elements.\n\n```mermaid\nsequenceDiagram\n    participant Client\n    participant List\n    participant ListView\n    participant RowCache\n    participant Renderer\n    \n    Client-\u003e\u003eList: new List(delegate, renderers)\n    List-\u003e\u003eListView: new ListView(delegate, renderers)\n    ListView-\u003e\u003eRowCache: new RowCache(renderers)\n    \n    Client-\u003e\u003eList: setElements(elements)\n    List-\u003e\u003eListView: splice(0, 0, elements)\n    \n    loop For each visible element\n        ListView-\u003e\u003eRowCache: alloc(templateId)\n        alt Cache hit\n            RowCache--\u003e\u003eListView: Recycled row\n        else Cache miss\n            RowCache-\u003e\u003eRenderer: renderTemplate(container)\n            Renderer--\u003e\u003eRowCache: templateData\n            RowCache--\u003e\u003eListView: New row\n        end\n        \n        ListView-\u003e\u003eRenderer: renderElement(element, index, templateData)\n    end\n    \n    Note over ListView: User scrolls\n    \n    loop For newly visible elements\n        ListView-\u003e\u003eRowCache: alloc(templateId)\n        ListView-\u003e\u003eRenderer: renderElement(element, index, templateData)\n    end\n    \n    loop For no longer visible elements\n        ListView-\u003e\u003eRowCache: release(row)\n    end\n```\n\nSources:\n- [src/vs/base/browser/ui/list/listView.ts:373-456](src/vs/base/browser/ui/list/listView.ts:373-456)\n- [src/vs/base/browser/ui/list/rowCache.ts](src/vs/base/browser/ui/list/rowCache.ts)\n\n### Template-based Rendering\n\n1. Each renderer has a unique `templateId`\n2. When an element needs to be rendered:\n   - The delegate determines which template to use via `getTemplateId`\n   - The renderer creates or reuses a template\n   - The renderer populates the template with element data\n3. When an element scrolls out of view, its DOM node is cached for reuse\n4. When an element scrolls into view, a cached DOM node is reused if available\n\nSources:\n- [src/vs/base/browser/ui/list/listView.ts:373-456](src/vs/base/browser/ui/list/listView.ts:373-456)\n- [src/vs/base/browser/ui/list/rowCache.ts](src/vs/base/browser/ui/list/rowCache.ts)\n\n## Tree Node Structure\n\nTree components use a node structure to represent hierarchical data:\n\n```typescript\nexport interface ITreeNode\u003cT, TFilterData = void\u003e {\n    readonly element: T;\n    readonly children: ITreeNode\u003cT, TFilterData\u003e[];\n    readonly depth: number;\n    readonly visibleChildrenCount: number;\n    readonly visibleChildIndex: number;\n    readonly collapsible: boolean;\n    readonly collapsed: boolean;\n    readonly visible: boolean;\n    readonly filterData: TFilterData | undefined;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/tree.ts:105-115](src/vs/base/browser/ui/tree/tree.ts:105-115)\n\nFor compressed trees, nodes can represent multiple elements in a path:\n\n```typescript\nexport interface ICompressedTreeNode\u003cT\u003e {\n    readonly elements: T[];\n    readonly incompressible: boolean;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts:20-24](src/vs/base/browser/ui/tree/compressedObjectTreeModel.ts:20-24)\n\n## Tree Rendering\n\nTrees have additional rendering complexity to handle indentation, twisties (expand/collapse icons), and hierarchical structure:\n\n```mermaid\ngraph TD\n    subgraph \"Tree Row Structure\"\n        Row[\"monaco-tl-row\"]\n        Indent[\"monaco-tl-indent\"]\n        Twistie[\"monaco-tl-twistie\"]\n        Contents[\"monaco-tl-contents\"]\n        \n        Row --\u003e Indent\n        Row --\u003e Twistie\n        Row --\u003e Contents\n        \n        IndentGuide[\"indent-guide\"] --\u003e Indent\n    end\n    \n    style Row fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style Indent fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style Twistie fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style Contents fill:#f9f9f9,stroke:#333,stroke-width:1px\n    style IndentGuide fill:#f9f9f9,stroke:#333,stroke-width:1px\n```\n\nThe `TreeRenderer` class handles the tree-specific rendering aspects:\n\n```typescript\nexport class TreeRenderer\u003cT, TFilterData, TRef, TTemplateData\u003e implements IListRenderer\u003cITreeNode\u003cT, TFilterData\u003e, ITreeListTemplateData\u003cTTemplateData\u003e\u003e {\n    constructor(\n        private readonly renderer: ITreeRenderer\u003cT, TFilterData, TTemplateData\u003e,\n        private readonly model: ITreeModel\u003cT, TFilterData, TRef\u003e,\n        onDidChangeCollapseState: Event\u003cICollapseStateChangeEvent\u003cT, TFilterData\u003e\u003e,\n        private readonly activeNodes: Collection\u003cITreeNode\u003cT, TFilterData\u003e\u003e,\n        private readonly renderedIndentGuides: SetMap\u003cITreeNode\u003cT, TFilterData\u003e, HTMLDivElement\u003e,\n        options: ITreeRendererOptions = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/abstractTree.ts:334-574](src/vs/base/browser/ui/tree/abstractTree.ts:334-574)\n- [src/vs/base/browser/ui/tree/media/tree.css](src/vs/base/browser/ui/tree/media/tree.css)\n\n## Filtering and Type Navigation\n\nTrees support filtering and keyboard-based navigation:\n\n### Tree Filtering\n\n```typescript\nexport interface ITreeFilter\u003cT, TFilterData = void\u003e {\n    filter(element: T, parentVisibility: TreeVisibility): TreeFilterResult\u003cTFilterData\u003e;\n}\n\nexport type TreeFilterResult\u003cTFilterData\u003e = boolean | TreeVisibility | ITreeFilterDataResult\u003cTFilterData\u003e;\n\nexport enum TreeVisibility {\n    Hidden,\n    Visible,\n    Recurse\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/tree.ts:12-70](src/vs/base/browser/ui/tree/tree.ts:12-70)\n\n### Find Feature\n\nTrees include a built-in find feature for searching within the tree:\n\n```typescript\nexport class FindController\u003cT, TFilterData\u003e extends AbstractFindController\u003cT, TFilterData\u003e {\n    constructor(\n        tree: ObjectTree\u003cIAsyncDataTreeNode\u003cTInput, T\u003e, TFilterData\u003e,\n        filter: IFindFilter\u003cT\u003e,\n        contextViewProvider: IContextViewProvider,\n        options: IFindControllerOptions = {}\n    )\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/abstractTree.ts:1087-1146](src/vs/base/browser/ui/tree/abstractTree.ts:1087-1146)\n\n## Drag and Drop\n\nList and tree components support rich drag and drop interactions:\n\n```typescript\nexport interface IListDragAndDrop\u003cT\u003e extends IDisposable {\n    getDragURI(element: T): string | null;\n    getDragLabel?(elements: T[], originalEvent: DragEvent): string | undefined;\n    onDragStart?(data: IDragAndDropData, originalEvent: DragEvent): void;\n    onDragOver(data: IDragAndDropData, targetElement: T | undefined, targetIndex: number | undefined, originalEvent: DragEvent): boolean | IListDragOverReaction;\n    drop(data: IDragAndDropData, targetElement: T | undefined, targetIndex: number | undefined, originalEvent: DragEvent): void;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/list/list.ts:120-125](src/vs/base/browser/ui/list/list.ts:120-125)\n\nTrees extend this with tree-specific drag and drop behavior:\n\n```typescript\nexport interface ITreeDragAndDrop\u003cT\u003e extends IListDragAndDrop\u003cT\u003e {\n    onDragOver(data: IDragAndDropData, targetElement: T | undefined, targetIndex: number | undefined, targetSector: ListViewTargetSector | undefined, originalEvent: DragEvent): boolean | ITreeDragOverReaction;\n}\n```\n\nSources:\n- [src/vs/base/browser/ui/tree/tree.ts:228-230](src/vs/base/browser/ui/tree/tree.ts:228-230)\n\n## Workbench Integration\n\nVS Code's workbench provides wrapper classes that integrate the list and tree components with the workbench's services and context keys:\n\n```typescript\nexport class WorkbenchList\u003cT\u003e extends List\u003cT\u003e {\n    constructor(\n        user: string,\n        container: HTMLElement,\n        delegate: IListVirtualDelegate\u003cT\u003e,\n        renderers: IListRenderer\u003cT, any\u003e[],\n        options: IWorkbenchListOptions\u003cT\u003e,\n        @IContextKeyService contextKeyService: IContextKeyService,\n        @IListService listService: IListService,\n        @IConfigurationService configurationService: IConfigurationService,\n        @IInstantiationService instantiationService: IInstantiationService\n    )\n}\n```\n\nSimilar wrapper classes exist for all list and tree variants.\n\nSources:\n- [src/vs/platform/list/browser/listService.ts:254-383](src/vs/platform/list/browser/listService.ts:254-383)\n\n## Usage Examples\n\n### Basic List\n\n```typescript\n// Create a list\nconst list = new List('myList', container, {\n    getHeight: () =\u003e 22,\n    getTemplateId: () =\u003e 'template'\n}, [\n    {\n        templateId: 'template',\n        renderTemplate: (container) =\u003e ({ element: container }),\n        renderElement: (element, index, templateData) =\u003e {\n            templateData.element.textContent = element.toString();\n        },\n        disposeTemplate: () =\u003e {}\n    }\n]);\n\n// Set elements\nlist.splice(0, 0, ['Item 1', 'Item 2', 'Item 3']);\n\n// Listen for selection changes\nlist.onDidChangeSelection(e =\u003e {\n    console.log('Selection changed:', e.elements);\n});\n```\n\n### Basic Tree\n\n```typescript\n// Create a tree\nconst tree = new ObjectTree('myTree', container, {\n    getHeight: () =\u003e 22,\n    getTemplateId: () =\u003e 'template'\n}, [\n    {\n        templateId: 'template',\n        renderTemplate: (container) =\u003e ({ element: container }),\n        renderElement: (node, index, templateData) =\u003e {\n            templateData.element.textContent = node.element.label;\n        },\n        disposeTemplate: () =\u003e {}\n    }\n]);\n\n// Set tree elements\ntree.setChildren(null, [\n    {\n        element: { id: '1', label: 'Parent 1' },\n        children: [\n            { element: { id: '1.1', label: 'Child 1.1' } },\n            { element: { id: '1.2', label: 'Child 1.2' } }\n        ]\n    },\n    {\n        element: { id: '2', label: 'Parent 2' },\n        children: [\n            { element: { id: '2.1', label: 'Child 2.1' } }\n        ]\n    }\n]);\n```\n\n### Async Data Tree\n\n```typescript\n// Create an async data tree\nconst tree = new AsyncDataTree('myTree', container, {\n    getHeight: () =\u003e 22,\n    getTemplateId: () =\u003e 'template'\n}, [\n    {\n        templateId: 'template',\n        renderTemplate: (container) =\u003e ({ element: container }),\n        renderElement: (node, index, templateData) =\u003e {\n            templateData.element.textContent = node.element.label;\n        },\n        disposeTemplate: () =\u003e {}\n    }\n], {\n    hasChildren: element =\u003e !!element.hasChildren,\n    getChildren: element =\u003e {\n        return fetchChildrenFromServer(element.id)\n            .then(children =\u003e children.map(c =\u003e ({ id: c.id, label: c.name, hasChildren: c.hasChildren })));\n    }\n});\n\n// Set the root element\ntree.setInput({ id: 'root', label: 'Root', hasChildren: true });\n```\n\n## Conclusion\n\nVS Code's list and tree components provide a powerful and flexible foundation for building efficient, interactive UIs that can handle large data sets. The virtualization architecture ensures good performance, while the rich set of features like selection, keyboard navigation, filtering, and drag and drop support make these components suitable for a wide range of use cases throughout the application.\n\nThe hierarchical design of the component classes allows for code reuse while providing specialized functionality for different scenarios, from simple flat lists to complex asynchronously-loaded trees with path compression.\n\nSources:\n- [src/vs/base/browser/ui/list/listWidget.ts](src/vs/base/browser/ui/list/listWidget.ts)\n- [src/vs/base/browser/ui/tree/abstractTree.ts](src/vs/base/browser/ui/tree/abstractTree.ts)\n- [src/vs/base/browser/ui/tree/objectTree.ts](src/vs/base/browser/ui/tree/objectTree.ts)\n- [src/vs/base/browser/ui/tree/dataTree.ts](src/vs/base/browser/ui/tree/dataTree.ts)\n- [src/vs/base/browser/ui/tree/asyncDataTree.ts](src/vs/base/browser/ui/tree/asyncDataTree.ts)"])</script>
    <script>self.__next_f.push([1, "1e:T4749,"])</script>
    <script>self.__next_f.push([1, "# Monaco Editor\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [build/monaco/monaco.d.ts.recipe](build/monaco/monaco.d.ts.recipe)\n- [extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts](extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts)\n- [src/vs/editor/browser/editorBrowser.ts](src/vs/editor/browser/editorBrowser.ts)\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts](src/vs/editor/browser/view/domLineBreaksComputer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts](src/vs/editor/browser/viewParts/minimap/minimap.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts](src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts](src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts)\n- [src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts](src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts)\n- [src/vs/editor/common/config/editorOptions.ts](src/vs/editor/common/config/editorOptions.ts)\n- [src/vs/editor/common/core/rgba.ts](src/vs/editor/common/core/rgba.ts)\n- [src/vs/editor/common/editorCommon.ts](src/vs/editor/common/editorCommon.ts)\n- [src/vs/editor/common/model.ts](src/vs/editor/common/model.ts)\n- [src/vs/editor/common/model/guidesTextModelPart.ts](src/vs/editor/common/model/guidesTextModelPart.ts)\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/standalone/standaloneEnums.ts](src/vs/editor/common/standalone/standaloneEnums.ts)\n- [src/vs/editor/common/textModelGuides.ts](src/vs/editor/common/textModelGuides.ts)\n- [src/vs/editor/common/viewModel/minimapTokensColorTracker.ts](src/vs/editor/common/viewModel/minimapTokensColorTracker.ts)\n- [src/vs/editor/common/viewModel/modelLineProjection.ts](src/vs/editor/common/viewModel/modelLineProjection.ts)\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts](src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)\n- [src/vs/editor/common/viewModel/viewModelLines.ts](src/vs/editor/common/viewModel/viewModelLines.ts)\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts](src/vs/editor/standalone/browser/standaloneCodeEditor.ts)\n- [src/vs/editor/standalone/browser/standaloneEditor.ts](src/vs/editor/standalone/browser/standaloneEditor.ts)\n- [src/vs/editor/test/browser/view/minimapCharRenderer.test.ts](src/vs/editor/test/browser/view/minimapCharRenderer.test.ts)\n- [src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts](src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts)\n- [src/vs/editor/test/common/model/modelInjectedText.test.ts](src/vs/editor/test/common/model/modelInjectedText.test.ts)\n- [src/vs/editor/test/common/viewModel/lineBreakData.test.ts](src/vs/editor/test/common/viewModel/lineBreakData.test.ts)\n- [src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts](src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts)\n- [src/vs/monaco.d.ts](src/vs/monaco.d.ts)\n\n\u003c/details\u003e\n\n\n\nThe Monaco Editor is a powerful, standalone code editor that powers VS Code. It provides a rich text editing experience with features like syntax highlighting, code completion, and more. This document explains the architecture, core components, and key concepts of the Monaco Editor.\n\nFor information about the editor service that manages editor instances in VS Code, see [Editor Service](#2.2).\n\n## Overview\n\nMonaco Editor is a standalone component that can be used in web applications to provide a full-featured code editing experience. It's built with TypeScript and designed to be highly customizable and performant.\n\nThe editor consists of several key components:\n- Text model - stores and manages the text content\n- View model - handles the visual representation of the text\n- View - renders the editor on screen\n- Controller - handles user input and commands\n\nSources:\n- [src/vs/monaco.d.ts:1-942]()\n- [src/vs/editor/standalone/browser/standaloneEditor.ts:43-105]()\n\n## Architecture\n\n### Core Components\n\n```mermaid\ngraph TD\n    subgraph \"Monaco Editor\"\n        TextModel[\"TextModel\u003cbr\u003eStores text content\"]\n        ViewModel[\"ViewModel\u003cbr\u003eHandles visual representation\"]\n        View[\"View\u003cbr\u003eRenders editor on screen\"]\n        Controller[\"Controller\u003cbr\u003eHandles user input\"]\n        \n        TextModel --\u003e ViewModel\n        ViewModel --\u003e View\n        View --\u003e Controller\n        Controller --\u003e TextModel\n    end\n    \n    subgraph \"Supporting Systems\"\n        TokenizationService[\"TokenizationService\u003cbr\u003eSyntax highlighting\"]\n        ConfigurationService[\"ConfigurationService\u003cbr\u003eEditor options\"]\n        CommandService[\"CommandService\u003cbr\u003eCommand execution\"]\n        \n        TokenizationService --\u003e ViewModel\n        ConfigurationService --\u003e ViewModel\n        CommandService --\u003e Controller\n    end\n    \n    subgraph \"External Integration\"\n        StandaloneServices[\"StandaloneServices\u003cbr\u003eService initialization\"]\n        StandaloneCodeEditor[\"StandaloneCodeEditor\u003cbr\u003eMain editor implementation\"]\n        \n        StandaloneServices --\u003e StandaloneCodeEditor\n        StandaloneCodeEditor --\u003e TextModel\n        StandaloneCodeEditor --\u003e ViewModel\n        StandaloneCodeEditor --\u003e View\n        StandaloneCodeEditor --\u003e Controller\n    end\n```\n\nThe Monaco Editor architecture follows a model-view-controller pattern with clear separation of concerns. The text model stores the content, the view model handles the visual representation, the view renders the editor, and the controller processes user input.\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:178-410]()\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:47-163]()\n- [src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts:1-100]()\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts:1-100]()\n\n### Initialization Flow\n\n```mermaid\nsequenceDiagram\n    participant App as Application\n    participant Monaco as Monaco API\n    participant Services as StandaloneServices\n    participant Editor as StandaloneCodeEditor\n    participant Model as TextModel\n    \n    App-\u003e\u003eMonaco: create(domElement, options)\n    Monaco-\u003e\u003eServices: initialize(overrides)\n    Services--\u003e\u003eMonaco: instantiationService\n    Monaco-\u003e\u003eEditor: createInstance(domElement, options)\n    Editor-\u003e\u003eModel: createTextModel(value)\n    Model--\u003e\u003eEditor: textModel\n    Editor-\u003e\u003eEditor: initialize view \u0026 controller\n    Editor--\u003e\u003eMonaco: IStandaloneCodeEditor\n    Monaco--\u003e\u003eApp: editor instance\n```\n\nWhen creating a Monaco Editor instance, the application calls the `create` function with a DOM element and options. This initializes the standalone services, creates a text model, and sets up the editor components.\n\nSources:\n- [src/vs/editor/standalone/browser/standaloneEditor.ts:43-51]()\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts:100-200]()\n\n## Core Components\n\n### TextModel\n\nThe TextModel is the core data structure that holds the text content of the editor. It manages:\n- Text content storage and manipulation\n- Line and column tracking\n- Text change events\n- Decorations (like syntax highlighting)\n\n```typescript\n// Creating a text model\nconst model = monaco.editor.createModel(\n    'console.log(\"Hello world\");', // text content\n    'javascript',                  // language\n    monaco.Uri.parse('file:///main.js') // optional URI\n);\n\n// Using the model with an editor\nconst editor = monaco.editor.create(domElement, {\n    model: model\n});\n```\n\nThe TextModel uses a piece tree data structure internally for efficient text manipulation, allowing for fast insertions, deletions, and lookups.\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:178-410]()\n- [src/vs/editor/common/model.ts:1-100]()\n- [src/vs/editor/standalone/browser/standaloneEditor.ts:1029-1070]()\n\n### ViewModel\n\nThe ViewModel bridges the gap between the raw text model and what's displayed on screen. It handles:\n- Line wrapping\n- Whitespace rendering\n- Decorations rendering\n- Cursor positioning\n\nThe ViewModel translates between model coordinates (line/column in the actual text) and view coordinates (line/column as displayed on screen, accounting for line wrapping).\n\nSources:\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:47-163]()\n- [src/vs/editor/common/viewModel/viewModelLines.ts:22-58]()\n\n### Line Breaking and Wrapping\n\nMonaco Editor supports line wrapping with different strategies:\n- **Simple wrapping**: Breaks lines at the specified column\n- **Advanced wrapping**: Takes into account indentation and word boundaries\n\nTwo line breaking computers are available:\n1. **DOMLineBreaksComputer**: Uses the browser's text measurement for accurate wrapping\n2. **MonospaceLineBreaksComputer**: Uses a faster algorithm for monospace fonts\n\n```mermaid\ngraph TD\n    TextModel[\"TextModel\u003cbr\u003eRaw text content\"]\n    LineBreaksComputer[\"LineBreaksComputer\u003cbr\u003eCalculates line breaks\"]\n    ViewModel[\"ViewModel\u003cbr\u003eManages wrapped lines\"]\n    View[\"View\u003cbr\u003eRenders text with wrapping\"]\n    \n    TextModel --\u003e|\"Text content\"| LineBreaksComputer\n    LineBreaksComputer --\u003e|\"Line break positions\"| ViewModel\n    ViewModel --\u003e|\"Wrapped line data\"| View\n    \n    subgraph \"Line Breaks Computation\"\n        DOMLineBreaksComputer[\"DOMLineBreaksComputer\u003cbr\u003eBrowser-based measurement\"]\n        MonospaceLineBreaksComputer[\"MonospaceLineBreaksComputer\u003cbr\u003eAlgorithm-based calculation\"]\n        \n        LineBreaksComputer --- DOMLineBreaksComputer\n        LineBreaksComputer --- MonospaceLineBreaksComputer\n    end\n```\n\nSources:\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts:20-42]()\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts:15-40]()\n- [src/vs/editor/common/viewModel/viewModelLines.ts:60-100]()\n\n### Editor Configuration\n\nMonaco Editor is highly configurable with numerous options for customizing appearance and behavior. Key configuration categories include:\n\n| Category | Description | Examples |\n|----------|-------------|----------|\n| Appearance | Visual styling | `fontSize`, `lineHeight`, `fontFamily` |\n| Behavior | Editor functionality | `tabSize`, `insertSpaces`, `wordWrap` |\n| Features | Editor capabilities | `minimap`, `scrollBeyondLastLine`, `folding` |\n| Performance | Optimization settings | `largeFileOptimizations` |\n\nConfiguration options are defined in `editorOptions.ts` and can be set when creating the editor or updated later.\n\n```typescript\n// Setting options at creation time\nconst editor = monaco.editor.create(domElement, {\n    fontSize: 14,\n    wordWrap: 'on',\n    minimap: { enabled: false }\n});\n\n// Updating options later\neditor.updateOptions({\n    fontSize: 16,\n    lineNumbers: 'off'\n});\n```\n\nSources:\n- [src/vs/editor/common/config/editorOptions.ts:52-786]()\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts:94-130]()\n\n## Rendering System\n\n### View Architecture\n\n```mermaid\ngraph TD\n    ViewModel[\"ViewModel\u003cbr\u003eManages visual representation\"]\n    ViewParts[\"ViewParts\u003cbr\u003eIndividual rendering components\"]\n    DOMNode[\"DOM Elements\u003cbr\u003eRendered in browser\"]\n    \n    ViewModel --\u003e|\"View data\"| ViewParts\n    ViewParts --\u003e|\"Render\"| DOMNode\n    \n    subgraph \"Key View Parts\"\n        LinesView[\"LinesView\u003cbr\u003eRenders text lines\"]\n        Minimap[\"Minimap\u003cbr\u003eCode overview\"]\n        Scrollbar[\"Scrollbar\u003cbr\u003eNavigation\"]\n        GlyphMargin[\"GlyphMargin\u003cbr\u003eLine decorations\"]\n        Overlays[\"Overlays\u003cbr\u003eWidgets and decorations\"]\n    end\n    \n    ViewParts --- LinesView\n    ViewParts --- Minimap\n    ViewParts --- Scrollbar\n    ViewParts --- GlyphMargin\n    ViewParts --- Overlays\n```\n\nThe View system is responsible for rendering the editor content to the DOM. It's composed of multiple ViewParts, each handling a specific aspect of the editor's visual representation.\n\nSources:\n- [src/vs/editor/browser/view/viewPart.ts]()\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts:48-110]()\n\n### Minimap\n\nThe minimap provides a condensed overview of the editor content, allowing for quick navigation through large files. It renders a scaled-down version of the code with syntax highlighting.\n\nKey minimap features:\n- Configurable size and position\n- Syntax highlighting\n- Scrollable with mouse interaction\n- Can show decorations like errors and search results\n\nSources:\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts:48-110]()\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts:10-17]()\n\n### Decorations\n\nDecorations allow adding visual elements to the editor content without modifying the text. They're used for:\n- Syntax highlighting\n- Error and warning indicators\n- Search result highlighting\n- Line numbers\n- Custom annotations\n\n```typescript\n// Adding decorations\nconst decorations = editor.deltaDecorations([], [\n    {\n        range: new monaco.Range(1, 1, 1, 10),\n        options: {\n            inlineClassName: 'myDecoration',\n            hoverMessage: { value: 'Decoration hover message' }\n        }\n    }\n]);\n```\n\nSources:\n- [src/vs/editor/common/model.ts:88-284]()\n- [src/vs/editor/common/model/textModel.ts:284-287]()\n\n## Integration and Extension\n\n### Standalone Usage\n\nMonaco Editor can be used as a standalone component in web applications:\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003ctitle\u003eMonaco Editor Example\u003c/title\u003e\n    \u003cscript src=\"monaco-editor/min/vs/loader.js\"\u003e\u003c/script\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv id=\"container\" style=\"height:600px;\"\u003e\u003c/div\u003e\n    \u003cscript\u003e\n        require.config({ paths: { 'vs': 'monaco-editor/min/vs' }});\n        require(['vs/editor/editor.main'], function() {\n            var editor = monaco.editor.create(document.getElementById('container'), {\n                value: 'function hello() {\\n\\tconsole.log(\"Hello world!\");\\n}',\n                language: 'javascript'\n            });\n        });\n    \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n```\n\nSources:\n- [src/vs/editor/standalone/browser/standaloneEditor.ts:43-105]()\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts:94-130]()\n\n### Editor Contributions\n\nMonaco Editor can be extended with contributions that add new functionality:\n\n```typescript\n// Adding a custom action\nmonaco.editor.addEditorAction({\n    id: 'my-unique-id',\n    label: 'My Label',\n    keybindings: [\n        monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyF\n    ],\n    run: function(editor) {\n        console.log('Custom action executed!');\n    }\n});\n```\n\nSources:\n- [src/vs/editor/standalone/browser/standaloneEditor.ts:134-162]()\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts:49-89]()\n\n### Diff Editor\n\nMonaco also provides a diff editor for comparing two text models side by side:\n\n```typescript\n// Creating a diff editor\nconst diffEditor = monaco.editor.createDiffEditor(document.getElementById('container'));\n\n// Setting models\ndiffEditor.setModel({\n    original: monaco.editor.createModel('Original content', 'javascript'),\n    modified: monaco.editor.createModel('Modified content', 'javascript')\n});\n```\n\nSources:\n- [src/vs/editor/standalone/browser/standaloneEditor.ts:97-100]()\n\n## Advanced Features\n\n### Text Model Projection\n\nMonaco Editor uses a sophisticated projection system to handle features like line wrapping and injected text. The system maps between:\n- **Model coordinates**: Raw text positions in the document\n- **View coordinates**: Visual positions accounting for wrapping and injected text\n\nThis projection is handled by the `ModelLineProjection` class and related components.\n\nSources:\n- [src/vs/editor/common/viewModel/modelLineProjection.ts:14-28]()\n- [src/vs/editor/test/common/viewModel/lineBreakData.test.ts:16-21]()\n\n### Tokenization and Syntax Highlighting\n\nMonaco Editor provides syntax highlighting through a tokenization system:\n\n```mermaid\ngraph TD\n    TextModel[\"TextModel\u003cbr\u003eRaw text content\"]\n    TokenizationService[\"TokenizationService\u003cbr\u003eLanguage-specific tokenization\"]\n    TokenTheme[\"TokenTheme\u003cbr\u003eVisual styling of tokens\"]\n    ViewModel[\"ViewModel\u003cbr\u003eToken rendering\"]\n    \n    TextModel --\u003e|\"Text content\"| TokenizationService\n    TokenizationService --\u003e|\"Tokens\"| ViewModel\n    TokenTheme --\u003e|\"Token styles\"| ViewModel\n    \n    subgraph \"Language Services\"\n        LanguageService[\"LanguageService\u003cbr\u003eLanguage registration\"]\n        LanguageFeatures[\"LanguageFeatures\u003cbr\u003eLanguage-specific capabilities\"]\n        \n        LanguageService --\u003e TokenizationService\n        LanguageFeatures --\u003e TokenizationService\n    end\n```\n\nThe tokenization system analyzes text content according to language-specific rules and assigns token types, which are then styled according to the current theme.\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:290-296]()\n- [src/vs/editor/standalone/browser/standaloneThemeService.ts]()\n\n## Performance Considerations\n\nMonaco Editor includes several optimizations for handling large files:\n\n1. **Large File Optimizations**: Disables certain memory-intensive features for large files\n2. **Line Tokenization**: Tokenizes lines on-demand rather than all at once\n3. **View Virtualization**: Only renders visible lines\n4. **Efficient Text Storage**: Uses piece tree data structure for efficient text manipulation\n\n```typescript\n// Configuring large file optimizations\nconst editor = monaco.editor.create(domElement, {\n    largeFileOptimizations: true\n});\n```\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:330-343]()\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:90-114]()\n\n## Conclusion\n\nMonaco Editor is a powerful, flexible code editor component that provides VS Code's editing capabilities in a standalone package. Its architecture separates concerns between text storage, visual representation, and user interaction, making it both performant and extensible.\n\nThe editor can be easily integrated into web applications and customized to meet specific requirements through its comprehensive configuration options and extension points."])</script>
    <script>self.__next_f.push([1, "1f:T4f08,"])</script>
    <script>self.__next_f.push([1, "# Text Model and View Model\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [build/monaco/monaco.d.ts.recipe](build/monaco/monaco.d.ts.recipe)\n- [extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts](extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts)\n- [src/vs/editor/browser/editorBrowser.ts](src/vs/editor/browser/editorBrowser.ts)\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts](src/vs/editor/browser/view/domLineBreaksComputer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts](src/vs/editor/browser/viewParts/minimap/minimap.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts](src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts](src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts)\n- [src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts](src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts)\n- [src/vs/editor/common/config/editorOptions.ts](src/vs/editor/common/config/editorOptions.ts)\n- [src/vs/editor/common/core/rgba.ts](src/vs/editor/common/core/rgba.ts)\n- [src/vs/editor/common/editorCommon.ts](src/vs/editor/common/editorCommon.ts)\n- [src/vs/editor/common/model.ts](src/vs/editor/common/model.ts)\n- [src/vs/editor/common/model/guidesTextModelPart.ts](src/vs/editor/common/model/guidesTextModelPart.ts)\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/standalone/standaloneEnums.ts](src/vs/editor/common/standalone/standaloneEnums.ts)\n- [src/vs/editor/common/textModelGuides.ts](src/vs/editor/common/textModelGuides.ts)\n- [src/vs/editor/common/viewModel/minimapTokensColorTracker.ts](src/vs/editor/common/viewModel/minimapTokensColorTracker.ts)\n- [src/vs/editor/common/viewModel/modelLineProjection.ts](src/vs/editor/common/viewModel/modelLineProjection.ts)\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts](src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)\n- [src/vs/editor/common/viewModel/viewModelLines.ts](src/vs/editor/common/viewModel/viewModelLines.ts)\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts](src/vs/editor/standalone/browser/standaloneCodeEditor.ts)\n- [src/vs/editor/standalone/browser/standaloneEditor.ts](src/vs/editor/standalone/browser/standaloneEditor.ts)\n- [src/vs/editor/test/browser/view/minimapCharRenderer.test.ts](src/vs/editor/test/browser/view/minimapCharRenderer.test.ts)\n- [src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts](src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts)\n- [src/vs/editor/test/common/model/modelInjectedText.test.ts](src/vs/editor/test/common/model/modelInjectedText.test.ts)\n- [src/vs/editor/test/common/viewModel/lineBreakData.test.ts](src/vs/editor/test/common/viewModel/lineBreakData.test.ts)\n- [src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts](src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts)\n- [src/vs/monaco.d.ts](src/vs/monaco.d.ts)\n\n\u003c/details\u003e\n\n\n\nThis page explains the core text representation systems in VS Code's editor: the Text Model and View Model. These components form the foundation of how text content is stored, manipulated, and rendered in the editor.\n\nFor information about editor features built on top of these models, see [Editor Features and Contributions](#3.2).\n\n## Purpose and Overview\n\nThe VS Code editor uses a two-layer architecture to represent text:\n\n1. **Text Model**: The raw text content with its line breaks, representing the actual file content.\n2. **View Model**: A projection of the Text Model that handles visual aspects like line wrapping, decorations, and hidden regions.\n\nThis separation allows VS Code to maintain a clean distinction between the actual document content and how it's presented to the user.\n\n```mermaid\ngraph TD\n    subgraph \"Text Model Layer\"\n        TextModel[\"TextModel\u003cbr\u003e(Raw document content)\"]\n        TextBuffer[\"PieceTreeTextBuffer\u003cbr\u003e(Efficient text storage)\"]\n    end\n    \n    subgraph \"View Model Layer\"\n        ViewModel[\"ViewModel\u003cbr\u003e(Visual representation)\"]\n        ViewModelLines[\"IViewModelLines\u003cbr\u003e(Line projections)\"]\n        LineBreaksComputer[\"ILineBreaksComputer\u003cbr\u003e(Wrapping calculation)\"]\n    end\n    \n    TextModel --\u003e TextBuffer\n    ViewModel --\u003e TextModel\n    ViewModel --\u003e ViewModelLines\n    ViewModelLines --\u003e LineBreaksComputer\n    \n    User[\"Editor User\"] --\u003e ViewModel\n    Disk[\"File on Disk\"] --\u003e TextModel\n```\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:178-410](src/vs/editor/common/model/textModel.ts:178-410)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:47-163](src/vs/editor/common/viewModel/viewModelImpl.ts:47-163)\n\n## Text Model\n\nThe Text Model represents the raw content of a document. It's implemented by the `TextModel` class and provides the foundation for all text operations in the editor.\n\n### Core Concepts\n\n- **Text Storage**: Uses a piece tree data structure (`PieceTreeTextBuffer`) for efficient text manipulation\n- **Line Management**: Tracks line breaks and provides line-based access to content\n- **Versioning**: Maintains version IDs to track changes for undo/redo operations\n- **Decorations**: Supports adding metadata to ranges of text without modifying the content\n- **Events**: Emits events when content or decorations change\n\n```mermaid\nclassDiagram\n    class TextModel {\n        +id: string\n        +uri: URI\n        +getLineCount(): number\n        +getLineContent(lineNumber): string\n        +getValue(): string\n        +setValue(value): void\n        +applyEdits(edits): void\n        +getVersionId(): number\n        +onDidChangeContent(listener)\n        +onDidChangeDecorations(listener)\n    }\n    \n    class PieceTreeTextBuffer {\n        +getLineCount(): number\n        +getLineContent(lineNumber): string\n        +getValueInRange(range): string\n        +getValueLength(): number\n        +applyEdits(edits): void\n    }\n    \n    TextModel --\u003e PieceTreeTextBuffer: uses\n```\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:178-410](src/vs/editor/common/model/textModel.ts:178-410)\n- [src/vs/editor/common/model.ts:1033-1200](src/vs/editor/common/model.ts:1033-1200)\n\n### Text Buffer\n\nThe Text Model uses a piece tree data structure (`PieceTreeTextBuffer`) to efficiently store and manipulate text. This approach allows for:\n\n- Efficient insertion and deletion operations\n- Memory-efficient representation of large files\n- Fast access to line-based content\n\nWhen text is modified, the buffer updates its internal structure without necessarily copying the entire content, making operations like typing and pasting very efficient.\n\n```typescript\n// Creating a text buffer\nconst textBufferFactory = createTextBufferFactory(text);\nconst { textBuffer, disposable } = textBufferFactory.create(defaultEOL);\n```\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:52-114](src/vs/editor/common/model/textModel.ts:52-114)\n- [src/vs/editor/common/model/textModel.ts:323-330](src/vs/editor/common/model/textModel.ts:323-330)\n\n### Model Events\n\nThe Text Model emits various events to notify listeners of changes:\n\n- **Content Changes**: When text is inserted, deleted, or modified\n- **Decoration Changes**: When decorations are added, removed, or modified\n- **Options Changes**: When model options like tab size or indentation change\n- **Language Changes**: When the language associated with the model changes\n\nThese events allow other components to react to changes in the model.\n\n```typescript\n// Example of listening to content changes\nmodel.onDidChangeContent((e) =\u003e {\n    console.log('Content changed:', e);\n});\n```\n\nSources:\n- [src/vs/editor/common/model/textModel.ts:213-244](src/vs/editor/common/model/textModel.ts:213-244)\n- [src/vs/editor/common/textModelEvents.ts](src/vs/editor/common/textModelEvents.ts)\n\n## View Model\n\nThe View Model (`ViewModel` class) creates a visual representation of the Text Model, handling aspects like line wrapping, decorations, and hidden regions. It projects the raw text into a form suitable for display.\n\n### Core Concepts\n\n- **Line Projection**: Maps model lines to view lines (e.g., when wrapping is enabled)\n- **Decorations**: Manages visual elements like syntax highlighting, error markers, etc.\n- **Viewport**: Tracks which portion of the document is currently visible\n- **Cursor Management**: Handles cursor positions and selections\n- **Events**: Emits events when the visual representation changes\n\n```mermaid\nclassDiagram\n    class ViewModel {\n        +model: ITextModel\n        +coordinatesConverter: ICoordinatesConverter\n        +viewLayout: ViewLayout\n        +getLineCount(): number\n        +getLineContent(lineNumber): string\n        +getActiveIndentGuide(viewLineNumber, minLineNumber, maxLineNumber)\n    }\n    \n    class IViewModelLines {\n        +getViewLineCount(): number\n        +getViewLineContent(viewLineNumber): string\n        +getViewLineLength(viewLineNumber): number\n        +getViewLineMinColumn(viewLineNumber): number\n        +getViewLineMaxColumn(viewLineNumber): number\n        +getViewLineData(viewLineNumber): ViewLineData\n    }\n    \n    class CursorsController {\n        +getSelection(): Selection\n        +getSelections(): Selection[]\n        +setSelections(selections): void\n    }\n    \n    ViewModel --\u003e IViewModelLines: uses\n    ViewModel --\u003e CursorsController: manages\n```\n\nSources:\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:47-163](src/vs/editor/common/viewModel/viewModelImpl.ts:47-163)\n- [src/vs/editor/common/viewModel.ts](src/vs/editor/common/viewModel.ts)\n\n### Line Projection\n\nOne of the key responsibilities of the View Model is line projection - mapping between model lines (the actual text content) and view lines (what's displayed on screen). This is particularly important for features like:\n\n- **Line Wrapping**: When a long line wraps to multiple visual lines\n- **Folding**: When sections of code are collapsed\n- **Hidden Text**: When certain ranges are hidden from view\n\nThe View Model uses `IViewModelLines` implementations to handle this projection, with two main variants:\n\n1. `ViewModelLinesFromModelAsIs`: A simple 1:1 mapping used when no wrapping is needed\n2. `ViewModelLinesFromProjectedModel`: A complex mapping that handles wrapping and other visual transformations\n\n```mermaid\ngraph TD\n    subgraph \"Model Space\"\n        ModelLine1[\"Model Line 1\"]\n        ModelLine2[\"Model Line 2 (very long line)\"]\n        ModelLine3[\"Model Line 3\"]\n    end\n    \n    subgraph \"View Space\"\n        ViewLine1[\"View Line 1\"]\n        ViewLine2[\"View Line 2 (first part of long line)\"]\n        ViewLine3[\"View Line 3 (continuation of long line)\"]\n        ViewLine4[\"View Line 4\"]\n    end\n    \n    ModelLine1 --\u003e ViewLine1\n    ModelLine2 --\u003e ViewLine2\n    ModelLine2 --\u003e ViewLine3\n    ModelLine3 --\u003e ViewLine4\n```\n\nSources:\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:87-114](src/vs/editor/common/viewModel/viewModelImpl.ts:87-114)\n- [src/vs/editor/common/viewModel/viewModelLines.ts:22-58](src/vs/editor/common/viewModel/viewModelLines.ts:22-58)\n\n### Line Breaks Computation\n\nTo determine where lines should wrap, the View Model uses line breaks computers:\n\n1. **DOM-based Line Breaks Computer**: Uses the browser's text layout engine for accurate wrapping\n2. **Monospace Line Breaks Computer**: A faster algorithm for monospace fonts\n\nThese computers analyze text and determine the optimal break points based on:\n- Font characteristics\n- Available width\n- Wrapping settings (column, indentation)\n- Word break rules\n\n```typescript\n// Creating a line breaks computer\nconst lineBreaksComputer = this._lines.createLineBreaksComputer();\n\n// Adding requests for line break calculations\nlineBreaksComputer.addRequest(lineText, injectedText, previousLineBreakData);\n\n// Getting the results\nconst lineBreaks = lineBreaksComputer.finalize();\n```\n\nSources:\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts:20-42](src/vs/editor/browser/view/domLineBreaksComputer.ts:20-42)\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts:15-40](src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts:15-40)\n\n### Coordinates Conversion\n\nA critical function of the View Model is converting between different coordinate systems:\n\n- **Model Coordinates**: Positions in the raw text (line/column)\n- **View Coordinates**: Positions in the wrapped/visual representation (line/column)\n- **DOM Coordinates**: Positions in the rendered DOM (pixels)\n\nThe `ICoordinatesConverter` interface provides methods for these conversions:\n\n```typescript\n// Converting from model to view coordinates\nconst viewPosition = coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n\n// Converting from view to model coordinates\nconst modelPosition = coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n```\n\nSources:\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:116](src/vs/editor/common/viewModel/viewModelImpl.ts:116)\n- [src/vs/editor/common/viewModel.ts](src/vs/editor/common/viewModel.ts)\n\n## Model Line Projection Data\n\nThe `ModelLineProjectionData` class is a key component that stores information about how model lines are projected to view lines. It contains:\n\n- **Break Offsets**: Positions where line breaks occur\n- **Break Offsets Visual Column**: Visual columns corresponding to break positions\n- **Injected Text**: Information about text injected into the view (not part of the model)\n\nThis data enables efficient mapping between model and view positions.\n\n```mermaid\nclassDiagram\n    class ModelLineProjectionData {\n        +injectionOffsets: number[]\n        +injectionOptions: InjectedTextOptions[]\n        +breakOffsets: number[]\n        +breakOffsetsVisibleColumn: number[]\n        +translateToInputOffset(outputLineIndex, outputOffset): number\n        +translateToOutputPosition(inputOffset): Position\n        +getOutputLineCount(): number\n    }\n```\n\nSources:\n- [src/vs/editor/common/modelLineProjectionData.ts](src/vs/editor/common/modelLineProjectionData.ts)\n- [src/vs/editor/test/common/viewModel/lineBreakData.test.ts:16-21](src/vs/editor/test/common/viewModel/lineBreakData.test.ts:16-21)\n\n## Injected Text\n\nBoth the Text Model and View Model support injected text - content that appears in the editor but isn't part of the actual document. This is used for features like:\n\n- Inline suggestions\n- Code lens\n- Inline decorations\n- Ghost text\n\nInjected text is represented by the `InjectedText` interface and can include styling options and cursor behavior settings.\n\n```typescript\n// Example of injected text options\ninterface InjectedTextOptions {\n    content: string;          // The text to inject\n    inlineClassName?: string; // CSS class for styling\n    cursorStops?: InjectedTextCursorStops; // How cursor interacts with the text\n}\n```\n\nSources:\n- [src/vs/editor/common/model.ts:289-321](src/vs/editor/common/model.ts:289-321)\n- [src/vs/editor/test/common/model/modelInjectedText.test.ts](src/vs/editor/test/common/model/modelInjectedText.test.ts)\n\n## Decorations\n\nDecorations are metadata attached to ranges of text that affect how the text is displayed without changing the content. Both the Text Model and View Model handle decorations, but in different ways:\n\n- **Text Model**: Stores decoration data and emits events when decorations change\n- **View Model**: Translates model decorations to view decorations and handles their visual representation\n\nDecorations can include:\n- Syntax highlighting\n- Error/warning markers\n- Selection highlighting\n- Find matches\n- Custom styling\n\n```typescript\n// Example of decoration options\ninterface IModelDecorationOptions {\n    className?: string;           // CSS class for styling\n    inlineClassName?: string;     // CSS class for inline styling\n    stickiness?: TrackedRangeStickiness; // How decoration behaves during edits\n    hoverMessage?: IMarkdownString; // Message shown on hover\n    // ... many other options\n}\n```\n\nSources:\n- [src/vs/editor/common/model.ts:145-284](src/vs/editor/common/model.ts:145-284)\n- [src/vs/editor/common/model/textModel.ts:271-287](src/vs/editor/common/model/textModel.ts:271-287)\n\n## Minimap\n\nThe minimap is a special view of the document that shows a scaled-down version of the entire content. It's implemented as part of the View Model layer and uses specialized rendering techniques for performance:\n\n- **Character Rendering**: Uses pre-rendered character bitmaps for efficiency\n- **Sampling**: May sample lines rather than rendering every line\n- **Color Tracking**: Tracks token colors for syntax highlighting in the minimap\n\n```mermaid\ngraph TD\n    ViewModel --\u003e MinimapOptions\n    MinimapOptions --\u003e MinimapCharRenderer\n    MinimapCharRenderer --\u003e MinimapCharSheet[\"MinimapCharSheet\u003cbr\u003e(Pre-rendered characters)\"]\n    \n    MinimapTokensColorTracker --\u003e MinimapCharRenderer\n```\n\nSources:\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts:48-178](src/vs/editor/browser/viewParts/minimap/minimap.ts:48-178)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts:10-16](src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts:10-16)\n\n## Interaction Between Models\n\nThe Text Model and View Model work together to provide a complete editing experience:\n\n1. **Content Changes**:\n   - User edits are applied to the Text Model\n   - Text Model emits change events\n   - View Model updates its projections based on these changes\n\n2. **Viewport Management**:\n   - View Model tracks which portion of the document is visible\n   - Only visible portions are fully processed for rendering\n   - This enables efficient handling of large files\n\n3. **Cursor and Selection**:\n   - Cursor positions are maintained in model coordinates\n   - View Model translates these to view coordinates for display\n   - Selection ranges span across model positions but may cover multiple view lines\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant Editor\n    participant ViewModel\n    participant TextModel\n    \n    User-\u003e\u003eEditor: Type character\n    Editor-\u003e\u003eTextModel: applyEdits()\n    TextModel--\u003e\u003eTextModel: Update internal buffer\n    TextModel-\u003e\u003eViewModel: onModelContentChanged event\n    ViewModel--\u003e\u003eViewModel: Update line projections\n    ViewModel-\u003e\u003eEditor: Render updated content\n    Editor-\u003e\u003eUser: Display changes\n```\n\nSources:\n- [src/vs/editor/common/viewModel/viewModelImpl.ts:300-435](src/vs/editor/common/viewModel/viewModelImpl.ts:300-435)\n- [src/vs/editor/common/model/textModel.ts:441-477](src/vs/editor/common/model/textModel.ts:441-477)\n\n## Summary\n\nThe Text Model and View Model form the foundation of VS Code's editor:\n\n- **Text Model**: Represents the raw document content, providing efficient text storage and manipulation\n- **View Model**: Projects the Text Model into a visual representation, handling wrapping, decorations, and viewport management\n\nThis separation of concerns allows VS Code to maintain a clean distinction between content and presentation, enabling powerful editing features while maintaining performance even with large files.\n\n| Component | Primary Responsibility | Key Classes |\n|-----------|------------------------|------------|\n| Text Model | Raw document content | `TextModel`, `PieceTreeTextBuffer` |\n| View Model | Visual representation | `ViewModel`, `ViewModelLinesFromProjectedModel` |\n| Line Projection | Mapping between models | `ModelLineProjectionData`, `ILineBreaksComputer` |\n| Coordinates Conversion | Position translation | `ICoordinatesConverter` |\n| Decorations | Visual metadata | `IModelDecoration`, `ViewModelDecorations` |\n\nSources:\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)"])</script>
    <script>self.__next_f.push([1, "20:T68ff,"])</script>
    <script>self.__next_f.push([1, "# Editor Features and Contributions\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [build/monaco/monaco.d.ts.recipe](build/monaco/monaco.d.ts.recipe)\n- [extensions/vscode-api-tests/package.json](extensions/vscode-api-tests/package.json)\n- [extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts](extensions/vscode-colorize-perf-tests/test/colorize-fixtures/test-treeView.ts)\n- [src/vs/editor/browser/editorBrowser.ts](src/vs/editor/browser/editorBrowser.ts)\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts](src/vs/editor/browser/view/domLineBreaksComputer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts](src/vs/editor/browser/viewParts/minimap/minimap.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts](src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts](src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts)\n- [src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts](src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts)\n- [src/vs/editor/common/config/editorOptions.ts](src/vs/editor/common/config/editorOptions.ts)\n- [src/vs/editor/common/core/rgba.ts](src/vs/editor/common/core/rgba.ts)\n- [src/vs/editor/common/editorCommon.ts](src/vs/editor/common/editorCommon.ts)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n- [src/vs/editor/common/model.ts](src/vs/editor/common/model.ts)\n- [src/vs/editor/common/model/guidesTextModelPart.ts](src/vs/editor/common/model/guidesTextModelPart.ts)\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/standalone/standaloneEnums.ts](src/vs/editor/common/standalone/standaloneEnums.ts)\n- [src/vs/editor/common/textModelGuides.ts](src/vs/editor/common/textModelGuides.ts)\n- [src/vs/editor/common/viewModel/minimapTokensColorTracker.ts](src/vs/editor/common/viewModel/minimapTokensColorTracker.ts)\n- [src/vs/editor/common/viewModel/modelLineProjection.ts](src/vs/editor/common/viewModel/modelLineProjection.ts)\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts](src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)\n- [src/vs/editor/common/viewModel/viewModelLines.ts](src/vs/editor/common/viewModel/viewModelLines.ts)\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts](src/vs/editor/standalone/browser/standaloneCodeEditor.ts)\n- [src/vs/editor/standalone/browser/standaloneEditor.ts](src/vs/editor/standalone/browser/standaloneEditor.ts)\n- [src/vs/editor/test/browser/view/minimapCharRenderer.test.ts](src/vs/editor/test/browser/view/minimapCharRenderer.test.ts)\n- [src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts](src/vs/editor/test/browser/viewModel/modelLineProjection.test.ts)\n- [src/vs/editor/test/common/model/modelInjectedText.test.ts](src/vs/editor/test/common/model/modelInjectedText.test.ts)\n- [src/vs/editor/test/common/viewModel/lineBreakData.test.ts](src/vs/editor/test/common/viewModel/lineBreakData.test.ts)\n- [src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts](src/vs/editor/test/common/viewModel/monospaceLineBreaksComputer.test.ts)\n- [src/vs/monaco.d.ts](src/vs/monaco.d.ts)\n- [src/vs/platform/extensions/common/extensionsApiProposals.ts](src/vs/platform/extensions/common/extensionsApiProposals.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHost.api.impl.ts](src/vs/workbench/api/common/extHost.api.impl.ts)\n- [src/vs/workbench/api/common/extHost.protocol.ts](src/vs/workbench/api/common/extHost.protocol.ts)\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHostTypeConverters.ts](src/vs/workbench/api/common/extHostTypeConverters.ts)\n- [src/vs/workbench/api/common/extHostTypes.ts](src/vs/workbench/api/common/extHostTypes.ts)\n- [src/vscode-dts/vscode.d.ts](src/vscode-dts/vscode.d.ts)\n\n\u003c/details\u003e\n\n\n\nThis page explains how editor features and contributions work in VS Code. It covers the architecture of language features like syntax highlighting, code completion, hover information, and other editor enhancements that make VS Code a powerful code editor.\n\nFor information about the core editor model and text buffer implementation, see [Text Model and View Model](#3.1). For information about the extension system that provides many of these features, see [Extension System](#4).\n\n## Overview of Editor Features\n\nVS Code's editor provides a rich set of features that enhance the coding experience. These features include:\n\n- Syntax highlighting\n- Code completion (IntelliSense)\n- Hover information\n- Code actions and quick fixes\n- Code navigation (Go to Definition, Find References)\n- Code folding\n- Formatting\n- Diagnostics (errors and warnings)\n- Semantic highlighting\n\nThese features are implemented through a combination of built-in functionality and extensions. The architecture follows a client-server model where the extension host provides the language intelligence, and the main thread renders the UI.\n\n### Editor Features Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        ExtHostLangFeatures[\"ExtHostLanguageFeatures\"]\n        ExtHostDocs[\"ExtHostDocuments\"]\n        ExtHostDiag[\"ExtHostDiagnostics\"]\n        Providers[\"Language Feature Providers\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadLangFeatures[\"MainThreadLanguageFeatures\"]\n        EditorWidget[\"CodeEditorWidget\"]\n        ModelService[\"ModelService\"]\n        LangFeaturesService[\"LanguageFeaturesService\"]\n    end\n    \n    subgraph \"Core Editor\"\n        TextModel[\"TextModel\"]\n        ViewModel[\"ViewModel\"]\n        TokenizationSupport[\"TokenizationSupport\"]\n    end\n    \n    Providers --\u003e ExtHostLangFeatures\n    ExtHostLangFeatures --\u003e MainThreadLangFeatures\n    ExtHostDocs --\u003e TextModel\n    ExtHostDiag --\u003e MainThreadLangFeatures\n    \n    MainThreadLangFeatures --\u003e LangFeaturesService\n    LangFeaturesService --\u003e EditorWidget\n    ModelService --\u003e TextModel\n    TextModel --\u003e ViewModel\n    TokenizationSupport --\u003e TextModel\n    ViewModel --\u003e EditorWidget\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)\n\n## Language Feature Providers\n\nLanguage features are implemented through provider interfaces. Extensions can register providers for specific language features. The extension host manages these providers and communicates with the main thread to render the results.\n\n### Provider Registration Flow\n\n```mermaid\nsequenceDiagram\n    participant Extension\n    participant ExtHost as ExtHostLanguageFeatures\n    participant MainThread as MainThreadLanguageFeatures\n    participant Editor as CodeEditorWidget\n    \n    Extension-\u003e\u003eExtHost: registerXXXProvider(selector, provider)\n    ExtHost-\u003e\u003eMainThread: $registerXXXProvider(handle, selector)\n    MainThread-\u003e\u003eEditor: registerXXXSupport(handle, selector)\n    \n    Editor-\u003e\u003eMainThread: provideXXX(resource, position)\n    MainThread-\u003e\u003eExtHost: $provideXXX(handle, resource, position)\n    ExtHost-\u003e\u003eExtension: provider.provideXXX(document, position)\n    Extension--\u003e\u003eExtHost: result\n    ExtHost--\u003e\u003eMainThread: result\n    MainThread--\u003e\u003eEditor: result\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHost.protocol.ts](src/vs/workbench/api/common/extHost.protocol.ts)\n\n## Key Language Feature Providers\n\nVS Code supports a wide range of language feature providers. Here are the main ones:\n\n| Provider | Interface | Purpose |\n|----------|-----------|---------|\n| Completion | `CompletionItemProvider` | Provides code completion items |\n| Hover | `HoverProvider` | Provides hover information |\n| Definition | `DefinitionProvider` | Provides go to definition |\n| References | `ReferenceProvider` | Provides find all references |\n| Document Symbols | `DocumentSymbolProvider` | Provides document outline |\n| Code Actions | `CodeActionProvider` | Provides quick fixes and refactorings |\n| Formatting | `DocumentFormattingEditProvider` | Provides document formatting |\n| Rename | `RenameProvider` | Provides rename functionality |\n| Signature Help | `SignatureHelpProvider` | Provides function signature help |\n| Diagnostics | `DiagnosticCollection` | Provides errors and warnings |\n| Semantic Tokens | `DocumentSemanticTokensProvider` | Provides semantic highlighting |\n\nSources:\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n- [src/vs/workbench/api/common/extHostTypes.ts](src/vs/workbench/api/common/extHostTypes.ts)\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n\n## Adapter Pattern for Language Features\n\nVS Code uses an adapter pattern to bridge between the extension API and the internal editor implementation. Each language feature has a corresponding adapter class in the extension host.\n\n### Adapter Classes\n\n```mermaid\nclassDiagram\n    class DocumentSymbolAdapter {\n        +provideDocumentSymbols(resource, token)\n    }\n    \n    class CodeLensAdapter {\n        +provideCodeLenses(resource, token)\n        +resolveCodeLens(symbol, token)\n        +releaseCodeLenses(cachedId)\n    }\n    \n    class DefinitionAdapter {\n        +provideDefinition(resource, position, token)\n    }\n    \n    class HoverAdapter {\n        +provideHover(resource, position, token)\n    }\n    \n    class CompletionAdapter {\n        +provideCompletionItems(resource, position, context, token)\n        +resolveCompletionItem(item, token)\n    }\n    \n    class InlineCompletionsAdapter {\n        +provideInlineCompletions(resource, position, context, token)\n    }\n    \n    class SignatureHelpAdapter {\n        +provideSignatureHelp(resource, position, context, token)\n    }\n    \n    class DocumentFormattingAdapter {\n        +provideDocumentFormattingEdits(resource, options, token)\n    }\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts:43-1000](src/vs/workbench/api/common/extHostLanguageFeatures.ts:43-1000)\n\n## Type Converters\n\nTo bridge between the extension API types and the internal editor types, VS Code uses type converters. These converters handle the transformation of objects like positions, ranges, and selections.\n\n```typescript\n// Example of type converters\nexport namespace Position {\n    export function to(position: IPosition): types.Position {\n        return new types.Position(position.lineNumber - 1, position.column - 1);\n    }\n    export function from(position: types.Position): IPosition {\n        return { lineNumber: position.line + 1, column: position.character + 1 };\n    }\n}\n\nexport namespace Range {\n    export function from(range: RangeLike): editorRange.IRange {\n        const { start, end } = range;\n        return {\n            startLineNumber: start.line + 1,\n            startColumn: start.character + 1,\n            endLineNumber: end.line + 1,\n            endColumn: end.character + 1\n        };\n    }\n    \n    export function to(range: editorRange.IRange): types.Range {\n        return new types.Range(\n            range.startLineNumber - 1, \n            range.startColumn - 1, \n            range.endLineNumber - 1, \n            range.endColumn - 1\n        );\n    }\n}\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostTypeConverters.ts:89-136](src/vs/workbench/api/common/extHostTypeConverters.ts:89-136)\n\n## Editor Contributions\n\nEditor contributions are components that add functionality to the editor. They can be registered by extensions or built into VS Code.\n\n### Editor Contribution Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Editor Contributions\"\n        CodeLensContrib[\"CodeLensContribution\"]\n        SuggestContrib[\"SuggestContribution\"]\n        FormatContrib[\"FormatOnTypeContribution\"]\n        HoverContrib[\"HoverContribution\"]\n        ParameterHintsContrib[\"ParameterHintsContribution\"]\n        InlayHintsContrib[\"InlayHintsContribution\"]\n    end\n    \n    subgraph \"Language Features Service\"\n        CompletionProvider[\"CompletionProviderRegistry\"]\n        HoverProvider[\"HoverProviderRegistry\"]\n        CodeLensProvider[\"CodeLensProviderRegistry\"]\n        FormatProvider[\"DocumentFormattingEditProviderRegistry\"]\n        InlayHintsProvider[\"InlayHintsProviderRegistry\"]\n    end\n    \n    subgraph \"Editor Widget\"\n        EditorWidget[\"CodeEditorWidget\"]\n        ContributionsRegistry[\"EditorContributionRegistry\"]\n    end\n    \n    ContributionsRegistry --\u003e EditorWidget\n    \n    CodeLensContrib --\u003e CodeLensProvider\n    SuggestContrib --\u003e CompletionProvider\n    FormatContrib --\u003e FormatProvider\n    HoverContrib --\u003e HoverProvider\n    InlayHintsContrib --\u003e InlayHintsProvider\n    \n    EditorWidget --\u003e CodeLensContrib\n    EditorWidget --\u003e SuggestContrib\n    EditorWidget --\u003e FormatContrib\n    EditorWidget --\u003e HoverContrib\n    EditorWidget --\u003e ParameterHintsContrib\n    EditorWidget --\u003e InlayHintsContrib\n```\n\nSources:\n- [src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts](src/vs/editor/browser/widget/codeEditor/codeEditorWidget.ts)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n- [src/vs/editor/browser/editorBrowser.ts](src/vs/editor/browser/editorBrowser.ts)\n\n## Tokenization and Syntax Highlighting\n\nSyntax highlighting is implemented through tokenization. The editor uses a tokenization system to parse and color code.\n\n### Tokenization Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        TokenProvider[\"TokenizationSupport\"]\n    end\n    \n    subgraph \"Main Thread\"\n        TokenRegistry[\"TokenizationRegistry\"]\n        TokenizationPart[\"TokenizationTextModelPart\"]\n    end\n    \n    subgraph \"Text Model\"\n        TextModel[\"TextModel\"]\n        TokenStore[\"TokensStore\"]\n    end\n    \n    subgraph \"View Model\"\n        ViewModel[\"ViewModel\"]\n        ViewLineTokens[\"ViewLineTokens\"]\n    end\n    \n    TokenProvider --\u003e TokenRegistry\n    TokenRegistry --\u003e TokenizationPart\n    TokenizationPart --\u003e TextModel\n    TextModel --\u003e TokenStore\n    TokenStore --\u003e ViewModel\n    ViewModel --\u003e ViewLineTokens\n```\n\nSources:\n- [src/vs/editor/common/model/textModel.ts](src/vs/editor/common/model/textModel.ts)\n- [src/vs/editor/common/languages.ts:61-162](src/vs/editor/common/languages.ts:61-162)\n- [src/vs/editor/common/viewModel/viewModelImpl.ts](src/vs/editor/common/viewModel/viewModelImpl.ts)\n\n## Code Completion (IntelliSense)\n\nCode completion is one of the most important editor features. It provides suggestions as you type.\n\n### Completion Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        CompletionProvider[\"CompletionItemProvider\"]\n        ExtHostLangFeatures[\"ExtHostLanguageFeatures\"]\n        CompletionAdapter[\"CompletionAdapter\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadLangFeatures[\"MainThreadLanguageFeatures\"]\n        CompletionProviderRegistry[\"CompletionProviderRegistry\"]\n    end\n    \n    subgraph \"Editor Widget\"\n        SuggestController[\"SuggestController\"]\n        SuggestModel[\"SuggestModel\"]\n        SuggestWidget[\"SuggestWidget\"]\n    end\n    \n    CompletionProvider --\u003e CompletionAdapter\n    CompletionAdapter --\u003e ExtHostLangFeatures\n    ExtHostLangFeatures --\u003e MainThreadLangFeatures\n    MainThreadLangFeatures --\u003e CompletionProviderRegistry\n    CompletionProviderRegistry --\u003e SuggestModel\n    SuggestModel --\u003e SuggestController\n    SuggestController --\u003e SuggestWidget\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n\n## Hover Information\n\nHover information provides contextual details when hovering over code elements.\n\n### Hover Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        HoverProvider[\"HoverProvider\"]\n        HoverAdapter[\"HoverAdapter\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadLangFeatures[\"MainThreadLanguageFeatures\"]\n        HoverProviderRegistry[\"HoverProviderRegistry\"]\n    end\n    \n    subgraph \"Editor Widget\"\n        HoverController[\"HoverController\"]\n        HoverWidget[\"HoverWidget\"]\n    end\n    \n    HoverProvider --\u003e HoverAdapter\n    HoverAdapter --\u003e MainThreadLangFeatures\n    MainThreadLangFeatures --\u003e HoverProviderRegistry\n    HoverProviderRegistry --\u003e HoverController\n    HoverController --\u003e HoverWidget\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n\n## Code Actions and Quick Fixes\n\nCode actions provide quick fixes and refactorings for code issues.\n\n### Code Actions Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        CodeActionProvider[\"CodeActionProvider\"]\n        CodeActionAdapter[\"CodeActionAdapter\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadLangFeatures[\"MainThreadLanguageFeatures\"]\n        CodeActionProviderRegistry[\"CodeActionProviderRegistry\"]\n    end\n    \n    subgraph \"Editor Widget\"\n        CodeActionController[\"CodeActionController\"]\n        LightBulbWidget[\"LightBulbWidget\"]\n        CodeActionMenu[\"CodeActionMenu\"]\n    end\n    \n    CodeActionProvider --\u003e CodeActionAdapter\n    CodeActionAdapter --\u003e MainThreadLangFeatures\n    MainThreadLangFeatures --\u003e CodeActionProviderRegistry\n    CodeActionProviderRegistry --\u003e CodeActionController\n    CodeActionController --\u003e LightBulbWidget\n    LightBulbWidget --\u003e CodeActionMenu\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n\n## Document Formatting\n\nDocument formatting provides code formatting capabilities.\n\n### Formatting Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        FormattingProvider[\"DocumentFormattingEditProvider\"]\n        FormattingAdapter[\"DocumentFormattingAdapter\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadLangFeatures[\"MainThreadLanguageFeatures\"]\n        FormattingProviderRegistry[\"DocumentFormattingEditProviderRegistry\"]\n    end\n    \n    subgraph \"Editor Widget\"\n        FormatController[\"FormatController\"]\n        FormatOnTypeController[\"FormatOnTypeController\"]\n    end\n    \n    FormattingProvider --\u003e FormattingAdapter\n    FormattingAdapter --\u003e MainThreadLangFeatures\n    MainThreadLangFeatures --\u003e FormattingProviderRegistry\n    FormattingProviderRegistry --\u003e FormatController\n    FormattingProviderRegistry --\u003e FormatOnTypeController\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n\n## Line Breaks and Word Wrapping\n\nVS Code provides sophisticated line breaking and word wrapping capabilities to handle long lines of code.\n\n### Line Breaks Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Text Model\"\n        TextModel[\"TextModel\"]\n    end\n    \n    subgraph \"View Model\"\n        ViewModel[\"ViewModel\"]\n        ViewModelLines[\"ViewModelLines\"]\n        ModelLineProjection[\"ModelLineProjection\"]\n    end\n    \n    subgraph \"Line Breaks Computers\"\n        DomLineBreaksComputer[\"DomLineBreaksComputer\"]\n        MonospaceLineBreaksComputer[\"MonospaceLineBreaksComputer\"]\n    end\n    \n    TextModel --\u003e ViewModel\n    ViewModel --\u003e ViewModelLines\n    ViewModelLines --\u003e ModelLineProjection\n    DomLineBreaksComputer --\u003e ModelLineProjection\n    MonospaceLineBreaksComputer --\u003e ModelLineProjection\n```\n\nSources:\n- [src/vs/editor/common/viewModel/viewModelLines.ts](src/vs/editor/common/viewModel/viewModelLines.ts)\n- [src/vs/editor/browser/view/domLineBreaksComputer.ts](src/vs/editor/browser/view/domLineBreaksComputer.ts)\n- [src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts](src/vs/editor/common/viewModel/monospaceLineBreaksComputer.ts)\n- [src/vs/editor/common/viewModel/modelLineProjection.ts](src/vs/editor/common/viewModel/modelLineProjection.ts)\n\n## Minimap\n\nThe minimap provides a condensed view of the entire document.\n\n### Minimap Architecture\n\n```mermaid\ngraph TD\n    subgraph \"View Model\"\n        ViewModel[\"ViewModel\"]\n    end\n    \n    subgraph \"Minimap\"\n        Minimap[\"Minimap\"]\n        MinimapCharRenderer[\"MinimapCharRenderer\"]\n        MinimapTokensColorTracker[\"MinimapTokensColorTracker\"]\n    end\n    \n    subgraph \"Rendering\"\n        RenderingContext[\"RenderingContext\"]\n        MinimapLinesRenderingData[\"MinimapLinesRenderingData\"]\n    end\n    \n    ViewModel --\u003e Minimap\n    Minimap --\u003e MinimapCharRenderer\n    Minimap --\u003e MinimapTokensColorTracker\n    Minimap --\u003e RenderingContext\n    RenderingContext --\u003e MinimapLinesRenderingData\n```\n\nSources:\n- [src/vs/editor/browser/viewParts/minimap/minimap.ts](src/vs/editor/browser/viewParts/minimap/minimap.ts)\n- [src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts](src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts)\n- [src/vs/editor/common/viewModel/minimapTokensColorTracker.ts](src/vs/editor/common/viewModel/minimapTokensColorTracker.ts)\n\n## Editor Options and Configuration\n\nVS Code provides a rich set of editor options to customize the editing experience.\n\n### Editor Options\n\n```typescript\n// Key editor options\nexport interface IEditorOptions {\n    // Appearance\n    lineNumbers?: LineNumbersType;\n    renderLineHighlight?: 'none' | 'gutter' | 'line' | 'all';\n    renderWhitespace?: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n    \n    // Behavior\n    wordWrap?: 'off' | 'on' | 'wordWrapColumn' | 'bounded';\n    autoIndent?: 'none' | 'keep' | 'brackets' | 'advanced' | 'full';\n    cursorBlinking?: 'blink' | 'smooth' | 'phase' | 'expand' | 'solid';\n    \n    // Features\n    quickSuggestions?: boolean | IQuickSuggestionsOptions;\n    suggestOnTriggerCharacters?: boolean;\n    acceptSuggestionOnEnter?: 'on' | 'smart' | 'off';\n    \n    // Code lens\n    codeLens?: boolean;\n    \n    // Folding\n    folding?: boolean;\n    foldingStrategy?: 'auto' | 'indentation';\n}\n```\n\nSources:\n- [src/vs/editor/common/config/editorOptions.ts:52-706](src/vs/editor/common/config/editorOptions.ts:52-706)\n\n## Extension API for Editor Features\n\nVS Code provides a rich API for extensions to contribute editor features.\n\n### Extension API for Language Features\n\n```typescript\n// Example of registering a completion provider\nvscode.languages.registerCompletionItemProvider('javascript', {\n    provideCompletionItems(document, position, token, context) {\n        // Provide completion items\n        return [\n            new vscode.CompletionItem('example', vscode.CompletionItemKind.Keyword)\n        ];\n    }\n});\n\n// Example of registering a hover provider\nvscode.languages.registerHoverProvider('javascript', {\n    provideHover(document, position, token) {\n        // Provide hover information\n        return new vscode.Hover('Hover information');\n    }\n});\n```\n\nSources:\n- [src/vscode-dts/vscode.d.ts](src/vscode-dts/vscode.d.ts)\n- [src/vs/workbench/api/common/extHost.api.impl.ts](src/vs/workbench/api/common/extHost.api.impl.ts)\n\n## Standalone Editor\n\nVS Code's editor can be used as a standalone component in web applications.\n\n### Standalone Editor Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Monaco Editor\"\n        StandaloneEditor[\"StandaloneCodeEditor\"]\n        StandaloneServices[\"StandaloneServices\"]\n        EditorOptions[\"EditorOptions\"]\n    end\n    \n    subgraph \"Core Editor\"\n        CodeEditorWidget[\"CodeEditorWidget\"]\n        TextModel[\"TextModel\"]\n        ViewModel[\"ViewModel\"]\n    end\n    \n    StandaloneEditor --\u003e CodeEditorWidget\n    StandaloneEditor --\u003e StandaloneServices\n    StandaloneEditor --\u003e EditorOptions\n    CodeEditorWidget --\u003e TextModel\n    CodeEditorWidget --\u003e ViewModel\n```\n\nSources:\n- [src/vs/editor/standalone/browser/standaloneEditor.ts](src/vs/editor/standalone/browser/standaloneEditor.ts)\n- [src/vs/editor/standalone/browser/standaloneCodeEditor.ts](src/vs/editor/standalone/browser/standaloneCodeEditor.ts)\n- [src/vs/monaco.d.ts](src/vs/monaco.d.ts)\n\n## API Proposals for Editor Features\n\nVS Code uses an API proposal system to introduce new editor features.\n\n### API Proposals\n\n```typescript\n// Example of API proposals related to editor features\nconst _allApiProposals = {\n    // Editor-related proposals\n    inlineCompletionsAdditions: {\n        proposal: '...',\n    },\n    documentPaste: {\n        proposal: '...',\n    },\n    tokenInformation: {\n        proposal: '...',\n    },\n    // Other proposals\n    // ...\n};\n```\n\nSources:\n- [src/vs/platform/extensions/common/extensionsApiProposals.ts](src/vs/platform/extensions/common/extensionsApiProposals.ts)\n- [extensions/vscode-api-tests/package.json](extensions/vscode-api-tests/package.json)\n\n## Conclusion\n\nVS Code's editor features and contributions system provides a powerful and extensible foundation for code editing. The architecture allows for a wide range of language features to be implemented by extensions, while maintaining high performance and a consistent user experience.\n\nThe system is built around a clear separation between the extension host and the main thread, with well-defined protocols for communication. This architecture enables VS Code to support a wide range of programming languages and tools through its extension ecosystem."])</script>
    <script>self.__next_f.push([1, "21:T74e5,"])</script>
    <script>self.__next_f.push([1, "# Extension System\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/package.json](extensions/vscode-api-tests/package.json)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n- [src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts](src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts)\n- [src/vs/platform/extensionManagement/common/extensionGalleryService.ts](src/vs/platform/extensionManagement/common/extensionGalleryService.ts)\n- [src/vs/platform/extensionManagement/common/extensionManagement.ts](src/vs/platform/extensionManagement/common/extensionManagement.ts)\n- [src/vs/platform/extensionManagement/common/extensionManagementIpc.ts](src/vs/platform/extensionManagement/common/extensionManagementIpc.ts)\n- [src/vs/platform/extensionManagement/common/extensionManagementUtil.ts](src/vs/platform/extensionManagement/common/extensionManagementUtil.ts)\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts](src/vs/platform/extensionManagement/node/extensionManagementService.ts)\n- [src/vs/platform/extensions/common/extensionsApiProposals.ts](src/vs/platform/extensions/common/extensionsApiProposals.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHost.api.impl.ts](src/vs/workbench/api/common/extHost.api.impl.ts)\n- [src/vs/workbench/api/common/extHost.protocol.ts](src/vs/workbench/api/common/extHost.protocol.ts)\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHostTypeConverters.ts](src/vs/workbench/api/common/extHostTypeConverters.ts)\n- [src/vs/workbench/api/common/extHostTypes.ts](src/vs/workbench/api/common/extHostTypes.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionEditor.ts](src/vs/workbench/contrib/extensions/browser/extensionEditor.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensions.contribution.ts](src/vs/workbench/contrib/extensions/browser/extensions.contribution.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts](src/vs/workbench/contrib/extensions/browser/extensionsActions.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsIcons.ts](src/vs/workbench/contrib/extensions/browser/extensionsIcons.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsList.ts](src/vs/workbench/contrib/extensions/browser/extensionsList.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts](src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsViewlet.ts](src/vs/workbench/contrib/extensions/browser/extensionsViewlet.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsViews.ts](src/vs/workbench/contrib/extensions/browser/extensionsViews.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsWidgets.ts](src/vs/workbench/contrib/extensions/browser/extensionsWidgets.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts](src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts)\n- [src/vs/workbench/contrib/extensions/browser/media/extension.css](src/vs/workbench/contrib/extensions/browser/media/extension.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionActions.css](src/vs/workbench/contrib/extensions/browser/media/extensionActions.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionEditor.css](src/vs/workbench/contrib/extensions/browser/media/extensionEditor.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionsViewlet.css](src/vs/workbench/contrib/extensions/browser/media/extensionsViewlet.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionsWidgets.css](src/vs/workbench/contrib/extensions/browser/media/extensionsWidgets.css)\n- [src/vs/workbench/contrib/extensions/common/extensions.ts](src/vs/workbench/contrib/extensions/common/extensions.ts)\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts](src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts](src/vs/workbench/services/extensionManagement/common/extensionManagement.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts](src/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementServerService.ts](src/vs/workbench/services/extensionManagement/common/extensionManagementServerService.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementService.ts](src/vs/workbench/services/extensionManagement/common/extensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/common/webExtensionManagementService.ts](src/vs/workbench/services/extensionManagement/common/webExtensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/nativeExtensionManagementService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/nativeExtensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts](src/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts)\n- [src/vscode-dts/vscode.d.ts](src/vscode-dts/vscode.d.ts)\n\n\u003c/details\u003e\n\n\n\nThe VS Code Extension System enables developers to extend and customize the editor's functionality through extensions. This document provides an overview of the extension system architecture, including how extensions are loaded, managed, and how they interact with the VS Code core.\n\nFor information about the Extension API that developers use to create extensions, see [Extension API](#4.3).\n\n## Overview\n\nVS Code's extension system is designed to provide a robust and secure way to extend the editor's functionality while maintaining performance and stability. Extensions run in a separate process called the Extension Host, which communicates with the main VS Code process through a well-defined protocol.\n\n```mermaid\ngraph TD\n    subgraph \"Main Process\"\n        MainThread[\"Main Thread\"]\n        MainThreadExtensionService[\"MainThreadExtensionService\"]\n        MainThreadLanguageFeatures[\"MainThreadLanguageFeatures\"]\n        MainThreadCommands[\"MainThreadCommands\"]\n        MainThreadTerminal[\"MainThreadTerminalService\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHost[\"Extension Host\"]\n        ExtHostExtensionService[\"ExtHostExtensionService\"]\n        ExtHostLanguageFeatures[\"ExtHostLanguageFeatures\"]\n        ExtHostCommands[\"ExtHostCommands\"]\n        ExtHostTerminal[\"ExtHostTerminalService\"]\n        \n        Extensions[\"Extensions\"]\n    end\n    \n    MainThread \u003c--\u003e|\"RPC Protocol\"| ExtHost\n    \n    MainThreadExtensionService \u003c--\u003e|\"RPC\"| ExtHostExtensionService\n    MainThreadLanguageFeatures \u003c--\u003e|\"RPC\"| ExtHostLanguageFeatures\n    MainThreadCommands \u003c--\u003e|\"RPC\"| ExtHostCommands\n    MainThreadTerminal \u003c--\u003e|\"RPC\"| ExtHostTerminal\n    \n    Extensions --\u003e ExtHostExtensionService\n    Extensions --\u003e ExtHostLanguageFeatures\n    Extensions --\u003e ExtHostCommands\n    Extensions --\u003e ExtHostTerminal\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.protocol.ts:1-5000](). This file defines the protocol between the main thread and extension host.\n- [src/vs/workbench/api/common/extHost.api.impl.ts:1-500](). This file implements the extension host API.\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts:1-200](). This file implements the main thread language features.\n\n## Extension Lifecycle\n\nExtensions go through several phases during their lifecycle:\n\n1. **Discovery**: VS Code discovers extensions in the extensions directory\n2. **Installation**: Extensions are installed from the marketplace or local VSIX files\n3. **Activation**: Extensions are activated when needed (on-demand)\n4. **Execution**: Extensions run in the extension host process\n5. **Deactivation**: Extensions are deactivated when VS Code shuts down\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Installed\n    Installed --\u003e Enabled: User enables\n    Installed --\u003e Disabled: User disables\n    Enabled --\u003e Activated: On demand\n    Activated --\u003e Running: Extension code executes\n    Running --\u003e Deactivated: VS Code shutdown\n    Deactivated --\u003e Enabled: VS Code restart\n    Disabled --\u003e Enabled: User enables\n    Enabled --\u003e Disabled: User disables\n    Disabled --\u003e Uninstalled: User uninstalls\n    Uninstalled --\u003e [*]\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-500](). This file manages the extension lifecycle.\n- [src/vs/workbench/api/common/extHostExtensionService.ts](). This file handles extension activation.\n\n## Extension Management\n\nThe extension management system handles installing, updating, and uninstalling extensions. It consists of several key components:\n\n```mermaid\ngraph TD\n    subgraph \"Extension Management\"\n        ExtensionManagementService[\"ExtensionManagementService\"]\n        ExtensionGalleryService[\"ExtensionGalleryService\"]\n        ExtensionEnablementService[\"ExtensionEnablementService\"]\n        ExtensionsWorkbenchService[\"ExtensionsWorkbenchService\"]\n    end\n    \n    subgraph \"User Interface\"\n        ExtensionsViewlet[\"ExtensionsViewlet\"]\n        ExtensionEditor[\"ExtensionEditor\"]\n        ExtensionActions[\"Extension Actions\"]\n    end\n    \n    ExtensionManagementService --\u003e ExtensionsWorkbenchService\n    ExtensionGalleryService --\u003e ExtensionsWorkbenchService\n    ExtensionEnablementService --\u003e ExtensionsWorkbenchService\n    \n    ExtensionsWorkbenchService --\u003e ExtensionsViewlet\n    ExtensionsWorkbenchService --\u003e ExtensionEditor\n    ExtensionsWorkbenchService --\u003e ExtensionActions\n```\n\nSources:\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:1-200](). This file implements the extension management service.\n- [src/vs/platform/extensionManagement/common/extensionGalleryService.ts:1-200](). This file handles communication with the extension marketplace.\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts:1-200](). This file manages extension enablement state.\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-200](). This file provides workbench-level extension management.\n\n### Extension Installation\n\nWhen a user installs an extension, the following process occurs:\n\n1. The extension is downloaded from the marketplace or loaded from a local VSIX file\n2. The extension is extracted to the extensions directory\n3. The extension's manifest is validated\n4. The extension is registered with VS Code\n5. If enabled, the extension is activated when needed\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant ExtensionsViewlet\n    participant ExtensionsWorkbenchService\n    participant ExtensionManagementService\n    participant ExtensionGalleryService\n    participant FileSystem\n    \n    User-\u003e\u003eExtensionsViewlet: Click Install\n    ExtensionsViewlet-\u003e\u003eExtensionsWorkbenchService: Install Extension\n    ExtensionsWorkbenchService-\u003e\u003eExtensionGalleryService: Get Extension\n    ExtensionGalleryService--\u003e\u003eExtensionsWorkbenchService: Extension Details\n    ExtensionsWorkbenchService-\u003e\u003eExtensionManagementService: Install Extension\n    ExtensionManagementService-\u003e\u003eExtensionGalleryService: Download Extension\n    ExtensionGalleryService--\u003e\u003eExtensionManagementService: Extension Package\n    ExtensionManagementService-\u003e\u003eFileSystem: Extract Extension\n    ExtensionManagementService-\u003e\u003eExtensionManagementService: Validate Extension\n    ExtensionManagementService--\u003e\u003eExtensionsWorkbenchService: Installation Complete\n    ExtensionsWorkbenchService--\u003e\u003eExtensionsViewlet: Update UI\n    ExtensionsViewlet--\u003e\u003eUser: Show Installed\n```\n\nSources:\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:100-500](). This file handles the extension installation process.\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts:1-300](). This file implements the extension installation actions.\n\n### Extension Enablement\n\nExtensions can be in different enablement states:\n\n| State | Description |\n|-------|-------------|\n| EnabledGlobally | Enabled for all workspaces |\n| EnabledWorkspace | Enabled only for the current workspace |\n| DisabledGlobally | Disabled for all workspaces |\n| DisabledWorkspace | Disabled only for the current workspace |\n\nThe `ExtensionEnablementService` manages these states and determines whether an extension should be activated.\n\nSources:\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts:1-300](). This file manages extension enablement states.\n\n## Extension Host Architecture\n\nThe Extension Host is a separate process that runs extension code. This isolation provides several benefits:\n\n1. **Stability**: Crashes in extensions don't affect the main VS Code process\n2. **Security**: Extensions have limited access to VS Code internals\n3. **Performance**: Extensions can't directly block the UI thread\n\n```mermaid\ngraph TD\n    subgraph \"Main Process\"\n        MainThreadAPI[\"Main Thread API\"]\n        MainThreadExtensionService[\"MainThreadExtensionService\"]\n        MainThreadLanguageFeatures[\"MainThreadLanguageFeatures\"]\n        MainThreadCommands[\"MainThreadCommandService\"]\n        MainThreadTerminal[\"MainThreadTerminalService\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHostAPI[\"Extension Host API\"]\n        ExtHostExtensionService[\"ExtHostExtensionService\"]\n        ExtHostLanguageFeatures[\"ExtHostLanguageFeatures\"]\n        ExtHostCommands[\"ExtHostCommands\"]\n        ExtHostTerminal[\"ExtHostTerminalService\"]\n        \n        ExtensionContext[\"Extension Context\"]\n        ExtensionActivation[\"Extension Activation\"]\n        \n        Extensions[\"Extensions\"]\n    end\n    \n    MainThreadAPI \u003c--\u003e|\"RPC Protocol\"| ExtHostAPI\n    \n    MainThreadExtensionService \u003c--\u003e|\"RPC\"| ExtHostExtensionService\n    MainThreadLanguageFeatures \u003c--\u003e|\"RPC\"| ExtHostLanguageFeatures\n    MainThreadCommands \u003c--\u003e|\"RPC\"| ExtHostCommands\n    MainThreadTerminal \u003c--\u003e|\"RPC\"| ExtHostTerminal\n    \n    ExtHostExtensionService --\u003e ExtensionActivation\n    ExtensionActivation --\u003e Extensions\n    ExtHostAPI --\u003e ExtensionContext\n    ExtensionContext --\u003e Extensions\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.protocol.ts:1-1000](). This file defines the protocol between the main thread and extension host.\n- [src/vs/workbench/api/common/extHost.api.impl.ts:1-500](). This file implements the extension host API.\n\n### Extension Host Protocol\n\nThe Extension Host Protocol is a Remote Procedure Call (RPC) mechanism that allows the main VS Code process and the Extension Host process to communicate. It defines a set of interfaces and methods that can be called across process boundaries.\n\nThe protocol is defined in `extHost.protocol.ts` and includes:\n\n1. **Proxy Identifiers**: Unique identifiers for each service\n2. **Shape Interfaces**: Interfaces that define the methods that can be called\n3. **Data Transfer Objects (DTOs)**: Objects that can be serialized and transferred between processes\n\nSources:\n- [src/vs/workbench/api/common/extHost.protocol.ts:1-1000](). This file defines the extension host protocol.\n\n### Extension Activation\n\nExtensions are activated on-demand, typically when:\n\n1. A command provided by the extension is executed\n2. A language feature provided by the extension is needed\n3. The extension explicitly declares an activation event that occurs\n\nThe activation process:\n\n1. VS Code determines that an extension needs to be activated\n2. The `ExtHostExtensionService` loads the extension's main module\n3. The extension's `activate` function is called with an extension context\n4. The extension registers its functionality with VS Code\n5. The extension returns an API object that VS Code can use\n\nSources:\n- [src/vs/workbench/api/common/extHostExtensionService.ts](). This file handles extension activation.\n\n## Extension API\n\nThe Extension API is the interface that extensions use to interact with VS Code. It's defined in the `vscode` namespace and includes:\n\n1. **Commands**: Register and execute commands\n2. **Languages**: Register language features like code completion, hover, etc.\n3. **Window**: Interact with the VS Code window, show messages, etc.\n4. **Workspace**: Access workspace files, configuration, etc.\n5. **Debug**: Interact with the debugging system\n6. **Extensions**: Access information about installed extensions\n\n```mermaid\ngraph TD\n    subgraph \"Extension API\"\n        vscode[\"vscode namespace\"]\n        commands[\"commands\"]\n        languages[\"languages\"]\n        window[\"window\"]\n        workspace[\"workspace\"]\n        debug[\"debug\"]\n        extensions[\"extensions\"]\n    end\n    \n    vscode --\u003e commands\n    vscode --\u003e languages\n    vscode --\u003e window\n    vscode --\u003e workspace\n    vscode --\u003e debug\n    vscode --\u003e extensions\n    \n    subgraph \"Extension Implementation\"\n        ExtensionModule[\"Extension Module\"]\n        ActivateFunction[\"activate()\"]\n        DeactivateFunction[\"deactivate()\"]\n        CommandRegistration[\"registerCommand()\"]\n        LanguageFeatures[\"registerCompletionItemProvider()\"]\n    end\n    \n    ExtensionModule --\u003e ActivateFunction\n    ExtensionModule --\u003e DeactivateFunction\n    ActivateFunction --\u003e CommandRegistration\n    ActivateFunction --\u003e LanguageFeatures\n    \n    CommandRegistration -.-\u003e commands\n    LanguageFeatures -.-\u003e languages\n```\n\nSources:\n- [src/vscode-dts/vscode.d.ts:1-1000](). This file defines the VS Code API types.\n- [src/vs/workbench/api/common/extHostTypeConverters.ts:1-500](). This file handles type conversion between VS Code and extension types.\n\n### Extension Context\n\nWhen an extension is activated, it receives an `ExtensionContext` object that provides:\n\n1. **Subscriptions**: A collection of disposables that are automatically disposed when the extension is deactivated\n2. **Extension Path**: The file system path of the extension\n3. **Storage Path**: A path where the extension can store data\n4. **Global State**: A key-value store for global extension state\n5. **Workspace State**: A key-value store for workspace-specific extension state\n\nSources:\n- [src/vs/workbench/api/common/extHostTypes.ts:1-500](). This file defines the extension context and other types.\n\n## Language Features\n\nOne of the most powerful aspects of the extension system is the ability to add language features like code completion, hover information, and code actions. These features are implemented through the Language Server Protocol (LSP) or directly using the VS Code API.\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        ExtHostLanguageFeatures[\"ExtHostLanguageFeatures\"]\n        CompletionAdapter[\"CompletionAdapter\"]\n        HoverAdapter[\"HoverAdapter\"]\n        DefinitionAdapter[\"DefinitionAdapter\"]\n        \n        ExtensionLanguageProvider[\"Extension Language Provider\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadLanguageFeatures[\"MainThreadLanguageFeatures\"]\n        CompletionProviderRegistry[\"CompletionProviderRegistry\"]\n        HoverProviderRegistry[\"HoverProviderRegistry\"]\n        DefinitionProviderRegistry[\"DefinitionProviderRegistry\"]\n        \n        Editor[\"Editor\"]\n    end\n    \n    ExtensionLanguageProvider --\u003e CompletionAdapter\n    ExtensionLanguageProvider --\u003e HoverAdapter\n    ExtensionLanguageProvider --\u003e DefinitionAdapter\n    \n    CompletionAdapter --\u003e ExtHostLanguageFeatures\n    HoverAdapter --\u003e ExtHostLanguageFeatures\n    DefinitionAdapter --\u003e ExtHostLanguageFeatures\n    \n    ExtHostLanguageFeatures \u003c--\u003e|\"RPC\"| MainThreadLanguageFeatures\n    \n    MainThreadLanguageFeatures --\u003e CompletionProviderRegistry\n    MainThreadLanguageFeatures --\u003e HoverProviderRegistry\n    MainThreadLanguageFeatures --\u003e DefinitionProviderRegistry\n    \n    CompletionProviderRegistry --\u003e Editor\n    HoverProviderRegistry --\u003e Editor\n    DefinitionProviderRegistry --\u003e Editor\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts:1-1000](). This file implements the extension host language features.\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts:1-500](). This file implements the main thread language features.\n- [src/vs/editor/common/languages.ts:1-500](). This file defines the language feature interfaces.\n\n### Language Feature Registration\n\nExtensions register language features by providing implementations of specific interfaces:\n\n```typescript\n// Example of registering a completion provider\nvscode.languages.registerCompletionItemProvider('javascript', {\n    provideCompletionItems(document, position, token, context) {\n        // Provide completion items\n        return [\n            new vscode.CompletionItem('example', vscode.CompletionItemKind.Keyword)\n        ];\n    }\n});\n```\n\nWhen a language feature is registered:\n\n1. The extension provides an implementation of the feature interface\n2. The `ExtHostLanguageFeatures` creates an adapter for the feature\n3. The adapter is registered with the `MainThreadLanguageFeatures` via RPC\n4. The `MainThreadLanguageFeatures` registers the feature with the appropriate registry\n5. When the feature is needed, the request flows back to the extension via the same path\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts:100-1000](). This file implements the language feature adapters.\n\n## Commands\n\nCommands are a fundamental part of the extension system. They allow extensions to expose functionality that can be triggered by users or other extensions.\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        ExtHostCommands[\"ExtHostCommands\"]\n        CommandsConverter[\"CommandsConverter\"]\n        \n        ExtensionCommandHandler[\"Extension Command Handler\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadCommands[\"MainThreadCommands\"]\n        CommandService[\"CommandService\"]\n        \n        MenuRegistry[\"MenuRegistry\"]\n        KeybindingRegistry[\"KeybindingRegistry\"]\n    end\n    \n    ExtensionCommandHandler --\u003e ExtHostCommands\n    ExtHostCommands --\u003e CommandsConverter\n    \n    ExtHostCommands \u003c--\u003e|\"RPC\"| MainThreadCommands\n    \n    MainThreadCommands --\u003e CommandService\n    \n    CommandService --\u003e MenuRegistry\n    CommandService --\u003e KeybindingRegistry\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostCommands.ts](). This file implements the extension host commands.\n- [src/vs/workbench/api/browser/mainThreadCommands.ts](). This file implements the main thread commands.\n\n### Command Registration\n\nExtensions register commands using the `commands.registerCommand` API:\n\n```typescript\n// Example of registering a command\nvscode.commands.registerCommand('extension.helloWorld', () =\u003e {\n    vscode.window.showInformationMessage('Hello World!');\n});\n```\n\nWhen a command is registered:\n\n1. The extension provides a command handler function\n2. The `ExtHostCommands` registers the command handler\n3. The command is registered with the `MainThreadCommands` via RPC\n4. The `MainThreadCommands` registers the command with the `CommandService`\n5. When the command is executed, the request flows back to the extension via the same path\n\nSources:\n- [src/vs/workbench/api/common/extHostCommands.ts](). This file implements command registration.\n\n## Extension Marketplace\n\nThe Extension Marketplace allows users to discover, install, and manage extensions. It's integrated with the VS Code UI through the Extensions view.\n\n```mermaid\ngraph TD\n    subgraph \"Extension Marketplace\"\n        ExtensionGalleryService[\"ExtensionGalleryService\"]\n        MarketplaceAPI[\"Marketplace API\"]\n    end\n    \n    subgraph \"Extension Management\"\n        ExtensionManagementService[\"ExtensionManagementService\"]\n        ExtensionsWorkbenchService[\"ExtensionsWorkbenchService\"]\n    end\n    \n    subgraph \"User Interface\"\n        ExtensionsViewlet[\"ExtensionsViewlet\"]\n        ExtensionsList[\"ExtensionsList\"]\n        ExtensionEditor[\"ExtensionEditor\"]\n    end\n    \n    MarketplaceAPI --\u003e ExtensionGalleryService\n    ExtensionGalleryService --\u003e ExtensionsWorkbenchService\n    ExtensionManagementService --\u003e ExtensionsWorkbenchService\n    \n    ExtensionsWorkbenchService --\u003e ExtensionsViewlet\n    ExtensionsViewlet --\u003e ExtensionsList\n    ExtensionsViewlet --\u003e ExtensionEditor\n```\n\nSources:\n- [src/vs/platform/extensionManagement/common/extensionGalleryService.ts:1-500](). This file implements the extension gallery service.\n- [src/vs/workbench/contrib/extensions/browser/extensionsViewlet.ts:1-500](). This file implements the extensions viewlet.\n- [src/vs/workbench/contrib/extensions/browser/extensionEditor.ts:1-500](). This file implements the extension editor.\n\n### Extension Marketplace Integration\n\nThe Extension Marketplace integration involves:\n\n1. **Discovery**: Querying the marketplace for extensions\n2. **Installation**: Installing extensions from the marketplace\n3. **Updates**: Checking for and installing updates\n4. **Recommendations**: Recommending extensions based on workspace content and user activity\n\nSources:\n- [src/vs/platform/extensionManagement/common/extensionGalleryService.ts:1-500](). This file handles communication with the extension marketplace.\n- [src/vs/workbench/contrib/extensions/browser/extensionsViews.ts:1-500](). This file implements the extensions views.\n\n## Extension Contribution Points\n\nExtensions can contribute to various parts of VS Code through contribution points defined in their `package.json` file. Common contribution points include:\n\n1. **Commands**: Add commands to VS Code\n2. **Configuration**: Add settings to VS Code\n3. **Menus**: Add menu items to VS Code\n4. **Keybindings**: Add keyboard shortcuts\n5. **Languages**: Add language support\n6. **Themes**: Add color themes or icon themes\n7. **Views**: Add custom views to the sidebar or panel\n\n```mermaid\ngraph TD\n    subgraph \"Extension Manifest\"\n        PackageJSON[\"package.json\"]\n        ContributionPoints[\"contributes\"]\n        Commands[\"commands\"]\n        Configuration[\"configuration\"]\n        Menus[\"menus\"]\n        Keybindings[\"keybindings\"]\n        Languages[\"languages\"]\n        Themes[\"themes\"]\n        Views[\"views\"]\n    end\n    \n    subgraph \"VS Code\"\n        CommandRegistry[\"Command Registry\"]\n        ConfigRegistry[\"Configuration Registry\"]\n        MenuRegistry[\"Menu Registry\"]\n        KeybindingRegistry[\"Keybinding Registry\"]\n        LanguageRegistry[\"Language Registry\"]\n        ThemeRegistry[\"Theme Registry\"]\n        ViewRegistry[\"View Registry\"]\n    end\n    \n    PackageJSON --\u003e ContributionPoints\n    ContributionPoints --\u003e Commands\n    ContributionPoints --\u003e Configuration\n    ContributionPoints --\u003e Menus\n    ContributionPoints --\u003e Keybindings\n    ContributionPoints --\u003e Languages\n    ContributionPoints --\u003e Themes\n    ContributionPoints --\u003e Views\n    \n    Commands --\u003e CommandRegistry\n    Configuration --\u003e ConfigRegistry\n    Menus --\u003e MenuRegistry\n    Keybindings --\u003e KeybindingRegistry\n    Languages --\u003e LanguageRegistry\n    Themes --\u003e ThemeRegistry\n    Views --\u003e ViewRegistry\n```\n\nSources:\n- [src/vs/workbench/services/extensions/common/extensions.ts](). This file defines the extension contribution points.\n- [src/vs/platform/extensions/common/extensions.ts](). This file defines the extension manifest types.\n\n## Extension Security\n\nVS Code's extension system is designed with security in mind:\n\n1. **Process Isolation**: Extensions run in a separate process\n2. **Limited API**: Extensions can only access VS Code through the defined API\n3. **Workspace Trust**: Extensions can be restricted based on workspace trust\n4. **Extension Verification**: Extensions from the marketplace can be verified\n\nSources:\n- [src/vs/workbench/services/extensions/common/extensions.ts](). This file defines the extension security model.\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:500-1000](). This file implements extension verification.\n\n## Conclusion\n\nThe VS Code Extension System provides a powerful and flexible way to extend the editor's functionality. By running extensions in a separate process and providing a well-defined API, VS Code ensures stability, security, and performance while allowing for rich customization.\n\nKey components of the extension system include:\n\n1. **Extension Host**: A separate process that runs extension code\n2. **Extension Management**: Services for installing, updating, and managing extensions\n3. **Extension API**: The interface that extensions use to interact with VS Code\n4. **Language Features**: The ability to add language intelligence features\n5. **Commands**: The ability to add new commands to VS Code\n6. **Contribution Points**: Ways for extensions to contribute to various parts of VS Code\n\nThis architecture allows VS Code to maintain a small, fast core while supporting a rich ecosystem of extensions that can transform the editor for different languages, workflows, and domains."])</script>
    <script>self.__next_f.push([1, "22:T33c6,"])</script>
    <script>self.__next_f.push([1, "# Extension Host Protocol\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/package.json](extensions/vscode-api-tests/package.json)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n- [src/vs/platform/extensions/common/extensionsApiProposals.ts](src/vs/platform/extensions/common/extensionsApiProposals.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHost.api.impl.ts](src/vs/workbench/api/common/extHost.api.impl.ts)\n- [src/vs/workbench/api/common/extHost.protocol.ts](src/vs/workbench/api/common/extHost.protocol.ts)\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHostTypeConverters.ts](src/vs/workbench/api/common/extHostTypeConverters.ts)\n- [src/vs/workbench/api/common/extHostTypes.ts](src/vs/workbench/api/common/extHostTypes.ts)\n- [src/vscode-dts/vscode.d.ts](src/vscode-dts/vscode.d.ts)\n\n\u003c/details\u003e\n\n\n\nThe Extension Host Protocol defines the communication mechanism between the main thread (running in the VS Code window) and the extension host process (where extensions execute). This protocol enables extensions to interact with VS Code's UI, access documents, and provide language features while maintaining process isolation for stability and security.\n\nFor information about the Extension API implementation, see [Extension System](#4).\n\n## Purpose and Scope\n\nThis document covers:\n- The RPC (Remote Procedure Call) protocol architecture\n- Communication channels between main thread and extension host\n- Protocol message types and shapes\n- Service registration and proxy mechanisms\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:1-92](). \n[src/vs/workbench/api/common/extHost.api.impl.ts:1-30]().\n\n## Architecture Overview\n\nThe Extension Host Protocol is built on a bidirectional RPC system that allows both the main thread and extension host to call methods on each other. The protocol defines interfaces for various services that can be accessed remotely.\n\n```mermaid\nflowchart TB\n    subgraph \"Main Process (Electron)\"\n        MainProcess[\"Main Process\"]\n    end\n    \n    subgraph \"Renderer Process\"\n        MainThread[\"Main Thread\"]\n        MainThreadServices[\"Main Thread Services\u003cbr\u003e(MainThreadXXXShape)\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHostRPC[\"Extension Host RPC\"]\n        ExtHostServices[\"Extension Host Services\u003cbr\u003e(ExtHostXXXShape)\"]\n        Extensions[\"Extensions\"]\n    end\n    \n    MainProcess --\u003e MainThread\n    MainThread \u003c--\u003e |\"RPC Protocol\"| ExtHostRPC\n    MainThreadServices \u003c--\u003e |\"Proxy Calls\"| ExtHostServices\n    Extensions --\u003e ExtHostServices\n```\n\n**Extension Host Protocol Communication Flow**\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:93-110]().\n[src/vs/workbench/api/common/extHost.api.impl.ts:126-167]().\n\n## Protocol Core Components\n\n### IRPCProtocol\n\nThe core of the Extension Host Protocol is the `IRPCProtocol` interface, which provides methods for registering services and creating proxies:\n\n```mermaid\nclassDiagram\n    class IRPCProtocol {\n        +set(identifier: ProxyIdentifier, instance: any): any\n        +assertRegistered(identifiers: ProxyIdentifier[]): void\n        +getProxy(identifier: ProxyIdentifier): any\n    }\n    \n    class ProxyIdentifier {\n        +id: string\n        +methodName: string\n        +type: any\n    }\n    \n    IRPCProtocol --\u003e ProxyIdentifier : uses\n```\n\n**IRPCProtocol and ProxyIdentifier**\n\nThe protocol uses `ProxyIdentifier` objects to uniquely identify services that can be called remotely. Each service is registered with a unique identifier, and proxies are created to make remote calls.\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:80-82]().\n[src/vs/workbench/services/extensions/common/proxyIdentifier.js:1-50]().\n\n### Context Identifiers\n\nThe protocol defines two main contexts:\n\n1. `MainContext` - Identifies services implemented in the main thread\n2. `ExtHostContext` - Identifies services implemented in the extension host\n\nThese contexts contain enumerated values that map to specific service interfaces.\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:30-80]().\n[src/vs/workbench/api/common/extHost.api.impl.ts:152-167]().\n\n## Service Registration\n\nWhen the extension host starts up, it registers its services with the RPC protocol and gets proxies to the main thread services:\n\n```mermaid\nsequenceDiagram\n    participant ExtHost as Extension Host\n    participant RPC as RPC Protocol\n    participant Main as Main Thread\n    \n    ExtHost-\u003e\u003eRPC: set(ExtHostContext.ExtHostDocuments, extHostDocuments)\n    ExtHost-\u003e\u003eRPC: set(ExtHostContext.ExtHostLanguageFeatures, extHostLanguageFeatures)\n    ExtHost-\u003e\u003eRPC: getProxy(MainContext.MainThreadLanguageFeatures)\n    RPC--\u003e\u003eExtHost: MainThreadLanguageFeaturesProxy\n    ExtHost-\u003e\u003eRPC: getProxy(MainContext.MainThreadDocuments)\n    RPC--\u003e\u003eExtHost: MainThreadDocumentsProxy\n    \n    Main-\u003e\u003eRPC: set(MainContext.MainThreadLanguageFeatures, mainThreadLanguageFeatures)\n    Main-\u003e\u003eRPC: set(MainContext.MainThreadDocuments, mainThreadDocuments)\n    Main-\u003e\u003eRPC: getProxy(ExtHostContext.ExtHostDocuments)\n    RPC--\u003e\u003eMain: ExtHostDocumentsProxy\n    Main-\u003e\u003eRPC: getProxy(ExtHostContext.ExtHostLanguageFeatures)\n    RPC--\u003e\u003eMain: ExtHostLanguageFeaturesProxy\n```\n\n**Service Registration and Proxy Creation**\n\nSources:\n[src/vs/workbench/api/common/extHost.api.impl.ts:152-224]().\n\n## Main Thread Shapes\n\nThe protocol defines interfaces for main thread services that can be called from the extension host. These interfaces are named with the pattern `MainThreadXXXShape` and extend `IDisposable`.\n\nKey main thread shapes include:\n\n| Shape | Purpose |\n|-------|---------|\n| `MainThreadCommandsShape` | Register and execute commands |\n| `MainThreadDocumentsShape` | Manage text documents |\n| `MainThreadEditorsShape` | Control text editors |\n| `MainThreadLanguageFeaturesShape` | Register language providers |\n| `MainThreadTerminalServiceShape` | Manage terminal instances |\n| `MainThreadWebviewsShape` | Handle webview content |\n| `MainThreadDialogsShape` | Show file dialogs |\n| `MainThreadStatusBarShape` | Manage status bar items |\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:106-738]().\n[src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts:36-50]().\n\n## Extension Host Shapes\n\nThe protocol also defines interfaces for extension host services that can be called from the main thread. These interfaces are named with the pattern `ExtHostXXXShape`.\n\nKey extension host shapes include:\n\n| Shape | Purpose |\n|-------|---------|\n| `ExtHostDocumentsShape` | Provide document content and events |\n| `ExtHostEditorsShape` | Handle editor operations |\n| `ExtHostLanguageFeaturesShape` | Provide language features like completion |\n| `ExtHostTerminalServiceShape` | Handle terminal operations |\n| `ExtHostWebviewsShape` | Manage webview content |\n| `ExtHostTreeViewsShape` | Provide tree view data |\n| `ExtHostOutputServiceShape` | Manage output channels |\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:4000-5000]().\n[src/vs/workbench/api/common/extHostLanguageFeatures.ts:40-60]().\n\n## Protocol Message Flow\n\nThe protocol uses a request-response pattern for most operations. Here's an example of how language features like code completion are handled:\n\n```mermaid\nsequenceDiagram\n    participant Editor as Editor (Main Thread)\n    participant MTLF as MainThreadLanguageFeatures\n    participant RPC as RPC Protocol\n    participant EHLF as ExtHostLanguageFeatures\n    participant Provider as Completion Provider (Extension)\n    \n    Editor-\u003e\u003eMTLF: Request completions\n    MTLF-\u003e\u003eRPC: $provideCompletionItems(handle, uri, position, context, token)\n    RPC-\u003e\u003eEHLF: provideCompletionItems(handle, uri, position, context, token)\n    EHLF-\u003e\u003eProvider: provideCompletionItems(document, position, token, context)\n    Provider--\u003e\u003eEHLF: CompletionList\n    EHLF--\u003e\u003eRPC: Convert to DTO\n    RPC--\u003e\u003eMTLF: CompletionListDto\n    MTLF--\u003e\u003eEditor: CompletionList\n```\n\n**Language Feature Protocol Flow**\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:448-480]().\n[src/vs/workbench/api/common/extHostLanguageFeatures.ts:1000-1100]().\n[src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts:400-500]().\n\n## Data Transfer Objects (DTOs)\n\nThe protocol uses Data Transfer Objects (DTOs) to serialize complex objects for transmission between processes. These DTOs are defined in the protocol and converted to/from the actual objects on each side.\n\nExamples of DTOs include:\n\n- `ICodeLensListDto` - For code lens results\n- `IDocumentFilterDto` - For document selectors\n- `ILocationDto` - For positions in files\n- `IWorkspaceEditDto` - For workspace edits\n- `ISignatureHelpProviderMetadataDto` - For signature help metadata\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:400-500]().\n[src/vs/workbench/api/common/extHostTypeConverters.ts:1-100]().\n\n## Type Converters\n\nThe protocol includes type converters that transform VS Code API types to internal types and vice versa. These converters handle the serialization and deserialization of complex objects.\n\n```mermaid\nflowchart LR\n    subgraph \"Extension Host\"\n        vscodeTypes[\"vscode.* Types\u003cbr\u003e(Position, Range, etc.)\"]\n        extHostConverters[\"extHostTypeConverters\"]\n    end\n    \n    subgraph \"Protocol\"\n        dtos[\"DTOs\u003cbr\u003e(IPositionDto, IRangeDto, etc.)\"]\n    end\n    \n    subgraph \"Main Thread\"\n        internalTypes[\"Internal Types\u003cbr\u003e(Position, Range, etc.)\"]\n        mainThreadConverters[\"typeConverters\"]\n    end\n    \n    vscodeTypes \u003c--\u003e extHostConverters\n    extHostConverters \u003c--\u003e dtos\n    dtos \u003c--\u003e mainThreadConverters\n    mainThreadConverters \u003c--\u003e internalTypes\n```\n\n**Type Conversion Flow**\n\nSources:\n[src/vs/workbench/api/common/extHostTypeConverters.ts:100-200]().\n[src/vs/workbench/api/common/extHost.protocol.ts:300-400]().\n\n## Registration Mechanism\n\nExtensions register providers through the Extension API, which then registers them with the main thread through the protocol. Each provider is assigned a unique handle for identification.\n\n```mermaid\nsequenceDiagram\n    participant Extension\n    participant ExtAPI as Extension API\n    participant EHLF as ExtHostLanguageFeatures\n    participant RPC as RPC Protocol\n    participant MTLF as MainThreadLanguageFeatures\n    \n    Extension-\u003e\u003eExtAPI: registerCompletionItemProvider(selector, provider)\n    ExtAPI-\u003e\u003eEHLF: registerCompletionItemProvider(handle, selector, provider)\n    EHLF-\u003e\u003eRPC: $registerCompletionsProvider(handle, selector, triggerChars)\n    RPC-\u003e\u003eMTLF: $registerCompletionsProvider(handle, selector, triggerChars)\n    MTLF-\u003e\u003eMTLF: Register with language features service\n    \n    Note over MTLF: Later when completions are requested\n    MTLF-\u003e\u003eRPC: $provideCompletionItems(handle, ...)\n    RPC-\u003e\u003eEHLF: provideCompletionItems(handle, ...)\n    EHLF-\u003e\u003eExtension: provider.provideCompletionItems(...)\n```\n\n**Provider Registration Flow**\n\nSources:\n[src/vs/workbench/api/common/extHostLanguageFeatures.ts:500-600]().\n[src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts:100-200]().\n\n## Cancellation and Error Handling\n\nThe protocol supports cancellation tokens that are passed through the RPC boundary to allow cancellation of long-running operations. Error handling is also built into the protocol to propagate exceptions across process boundaries.\n\nSources:\n[src/vs/workbench/api/common/extHost.protocol.ts:7-10]().\n[src/vs/workbench/api/common/extHostLanguageFeatures.ts:8-10]().\n\n## Extension Host API Implementation\n\nThe Extension Host API implementation (`extHost.api.impl.ts`) uses the protocol to expose the VS Code API to extensions. It creates proxies to main thread services and registers extension host services with the protocol.\n\n```mermaid\nflowchart TB\n    subgraph \"Extension Host\"\n        ExtAPI[\"Extension API\u003cbr\u003e(vscode namespace)\"]\n        ExtHostImpl[\"ExtHost API Implementation\"]\n        ExtHostServices[\"ExtHost Services\"]\n        RPC[\"RPC Protocol\"]\n    end\n    \n    subgraph \"Extensions\"\n        Ext1[\"Extension 1\"]\n        Ext2[\"Extension 2\"]\n        ExtN[\"Extension N\"]\n    end\n    \n    Ext1 --\u003e ExtAPI\n    Ext2 --\u003e ExtAPI\n    ExtN --\u003e ExtAPI\n    \n    ExtAPI --\u003e ExtHostImpl\n    ExtHostImpl --\u003e ExtHostServices\n    ExtHostServices --\u003e RPC\n    \n    RPC \u003c--\u003e MainThread[\"Main Thread\"]\n```\n\n**Extension Host API Implementation**\n\nSources:\n[src/vs/workbench/api/common/extHost.api.impl.ts:126-240]().\n\n## Conclusion\n\nThe Extension Host Protocol is a critical component of VS Code's extensibility model. It provides a secure and robust communication channel between the main thread and extension host, enabling extensions to interact with VS Code while maintaining process isolation. The protocol's design allows for efficient serialization of complex objects and supports features like cancellation and error handling.\n\nUnderstanding this protocol is essential for developing extensions that interact with VS Code's core functionality and for understanding how VS Code's extensibility model works under the hood."])</script>
    <script>self.__next_f.push([1, "23:T7f55,"])</script>
    <script>self.__next_f.push([1, "# Extension Management\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts](src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts)\n- [src/vs/platform/extensionManagement/common/extensionGalleryService.ts](src/vs/platform/extensionManagement/common/extensionGalleryService.ts)\n- [src/vs/platform/extensionManagement/common/extensionManagement.ts](src/vs/platform/extensionManagement/common/extensionManagement.ts)\n- [src/vs/platform/extensionManagement/common/extensionManagementIpc.ts](src/vs/platform/extensionManagement/common/extensionManagementIpc.ts)\n- [src/vs/platform/extensionManagement/common/extensionManagementUtil.ts](src/vs/platform/extensionManagement/common/extensionManagementUtil.ts)\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts](src/vs/platform/extensionManagement/node/extensionManagementService.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionEditor.ts](src/vs/workbench/contrib/extensions/browser/extensionEditor.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensions.contribution.ts](src/vs/workbench/contrib/extensions/browser/extensions.contribution.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts](src/vs/workbench/contrib/extensions/browser/extensionsActions.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsIcons.ts](src/vs/workbench/contrib/extensions/browser/extensionsIcons.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsList.ts](src/vs/workbench/contrib/extensions/browser/extensionsList.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts](src/vs/workbench/contrib/extensions/browser/extensionsViewer.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsViewlet.ts](src/vs/workbench/contrib/extensions/browser/extensionsViewlet.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsViews.ts](src/vs/workbench/contrib/extensions/browser/extensionsViews.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsWidgets.ts](src/vs/workbench/contrib/extensions/browser/extensionsWidgets.ts)\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts](src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts)\n- [src/vs/workbench/contrib/extensions/browser/media/extension.css](src/vs/workbench/contrib/extensions/browser/media/extension.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionActions.css](src/vs/workbench/contrib/extensions/browser/media/extensionActions.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionEditor.css](src/vs/workbench/contrib/extensions/browser/media/extensionEditor.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionsViewlet.css](src/vs/workbench/contrib/extensions/browser/media/extensionsViewlet.css)\n- [src/vs/workbench/contrib/extensions/browser/media/extensionsWidgets.css](src/vs/workbench/contrib/extensions/browser/media/extensionsWidgets.css)\n- [src/vs/workbench/contrib/extensions/common/extensions.ts](src/vs/workbench/contrib/extensions/common/extensions.ts)\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts](src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts](src/vs/workbench/services/extensionManagement/common/extensionManagement.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts](src/vs/workbench/services/extensionManagement/common/extensionManagementChannelClient.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementServerService.ts](src/vs/workbench/services/extensionManagement/common/extensionManagementServerService.ts)\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementService.ts](src/vs/workbench/services/extensionManagement/common/extensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/common/webExtensionManagementService.ts](src/vs/workbench/services/extensionManagement/common/webExtensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/extensionTipsService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/nativeExtensionManagementService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/nativeExtensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService.ts](src/vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService.ts)\n- [src/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts](src/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts)\n\n\u003c/details\u003e\n\n\n\nThis document covers the extension management system in VS Code, which handles the installation, uninstallation, enabling, disabling, and updating of extensions. It explains how extensions are managed across different environments (local, remote, web) and profiles.\n\nFor information about the extension host protocol and communication between the main process and extension host, see [Extension Host Protocol](#4.1). For details about the extension API exposed to extensions, see [Extension API](#4.3).\n\n## Overview\n\nThe extension management system in VS Code provides a comprehensive set of services and components for managing extensions throughout their lifecycle. This includes discovering extensions from the marketplace, installing them, enabling or disabling them, and uninstalling them when no longer needed.\n\n```mermaid\ngraph TD\n    subgraph \"Extension Management System\"\n        ExtMgmtService[\"ExtensionManagementService\"]\n        ExtWorkbenchService[\"ExtensionsWorkbenchService\"]\n        ExtEnablementService[\"ExtensionEnablementService\"]\n        ExtGalleryService[\"ExtensionGalleryService\"]\n        ExtManifestService[\"ExtensionManifestPropertiesService\"]\n    end\n\n    subgraph \"User Interface\"\n        ExtensionsView[\"ExtensionsViewPaneContainer\"]\n        ExtensionEditor[\"ExtensionEditor\"]\n        ExtensionsList[\"ExtensionsList\"]\n        ExtensionActions[\"Extension Actions\"]\n    end\n\n    subgraph \"Extension Sources\"\n        Marketplace[\"Extension Marketplace\"]\n        VSIX[\"VSIX Files\"]\n        Workspace[\"Workspace Extensions\"]\n    end\n\n    ExtMgmtService --\u003e ExtWorkbenchService\n    ExtGalleryService --\u003e ExtWorkbenchService\n    ExtEnablementService --\u003e ExtWorkbenchService\n    ExtManifestService --\u003e ExtWorkbenchService\n\n    ExtWorkbenchService --\u003e ExtensionsView\n    ExtWorkbenchService --\u003e ExtensionEditor\n    ExtWorkbenchService --\u003e ExtensionsList\n    ExtWorkbenchService --\u003e ExtensionActions\n\n    Marketplace --\u003e ExtGalleryService\n    VSIX --\u003e ExtMgmtService\n    Workspace --\u003e ExtMgmtService\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-100]()\n- [src/vs/platform/extensionManagement/common/extensionManagement.ts:1-100]()\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts:1-50]()\n\n## Core Services\n\nThe extension management system is built around several key services that work together to provide a complete extension management experience.\n\n### Extension Management Service\n\nThe `IExtensionManagementService` is the core service responsible for installing, uninstalling, and managing extensions. It provides methods for:\n\n- Installing extensions from the marketplace or local VSIX files\n- Uninstalling extensions\n- Getting installed extensions\n- Updating extension metadata\n- Managing extension enablement states\n\nIn VS Code, there are different implementations of this service for different environments:\n- `ExtensionManagementService` for desktop environments\n- `WebExtensionManagementService` for web environments\n- `RemoteExtensionManagementService` for remote environments\n\n```mermaid\ngraph TD\n    IExtMgmtService[\"IExtensionManagementService\u003cbr\u003e(Interface)\"]\n    \n    AbstractExtMgmtService[\"AbstractExtensionManagementService\u003cbr\u003e(Base Implementation)\"]\n    \n    ExtMgmtService[\"ExtensionManagementService\u003cbr\u003e(Desktop)\"]\n    WebExtMgmtService[\"WebExtensionManagementService\u003cbr\u003e(Web)\"]\n    RemoteExtMgmtService[\"RemoteExtensionManagementService\u003cbr\u003e(Remote)\"]\n    \n    IExtMgmtService --\u003e AbstractExtMgmtService\n    AbstractExtMgmtService --\u003e ExtMgmtService\n    AbstractExtMgmtService --\u003e WebExtMgmtService\n    AbstractExtMgmtService --\u003e RemoteExtMgmtService\n    \n    ExtMgmtService --\u003e InstallExtensionTask[\"InstallExtensionTask\"]\n    ExtMgmtService --\u003e UninstallExtensionTask[\"UninstallExtensionTask\"]\n    \n    WebExtMgmtService --\u003e WebExtensionScanner[\"WebExtensionsScannerService\"]\n```\n\nSources:\n- [src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts:1-120]()\n- [src/vs/platform/extensionManagement/common/extensionManagement.ts:396-419]()\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:60-120]()\n- [src/vs/workbench/services/extensionManagement/common/webExtensionManagementService.ts:1-50]()\n\n### Extensions Workbench Service\n\nThe `IExtensionsWorkbenchService` provides a higher-level API for the UI components to interact with extensions. It wraps the lower-level `IExtensionManagementService` and adds additional functionality like:\n\n- Querying extensions from the marketplace\n- Managing local and gallery extensions\n- Handling extension states and enablement\n- Providing extension metadata and details\n\nThis service is the primary interface used by the extensions UI components.\n\n```mermaid\ngraph TD\n    ExtWorkbenchService[\"ExtensionsWorkbenchService\"]\n    \n    ExtMgmtService[\"IExtensionManagementService\"]\n    ExtGalleryService[\"IExtensionGalleryService\"]\n    ExtEnablementService[\"IWorkbenchExtensionEnablementService\"]\n    ConfigService[\"IConfigurationService\"]\n    \n    ExtWorkbenchService --\u003e ExtMgmtService\n    ExtWorkbenchService --\u003e ExtGalleryService\n    ExtWorkbenchService --\u003e ExtEnablementService\n    ExtWorkbenchService --\u003e ConfigService\n    \n    ExtWorkbenchService --\u003e Extension[\"Extension Class\u003cbr\u003e(UI Representation)\"]\n    \n    ExtensionsView[\"ExtensionsViewPaneContainer\"] --\u003e ExtWorkbenchService\n    ExtensionEditor[\"ExtensionEditor\"] --\u003e ExtWorkbenchService\n    ExtensionActions[\"Extension Actions\"] --\u003e ExtWorkbenchService\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-100]()\n- [src/vs/workbench/contrib/extensions/common/extensions.ts:1-100]()\n\n### Extension Gallery Service\n\nThe `IExtensionGalleryService` is responsible for communicating with the VS Code Marketplace to:\n\n- Query extensions based on various criteria\n- Get extension details, manifests, and assets\n- Download extensions\n- Report extension statistics\n\nThis service handles all the communication with the marketplace API and provides a clean interface for the rest of the system to interact with the marketplace.\n\n```mermaid\ngraph TD\n    ExtGalleryService[\"ExtensionGalleryService\"]\n    \n    Marketplace[\"VS Code Marketplace API\"]\n    \n    ExtGalleryService --\u003e Marketplace\n    \n    ExtGalleryService --\u003e Query[\"Query Extensions\"]\n    ExtGalleryService --\u003e GetExtension[\"Get Extension Details\"]\n    ExtGalleryService --\u003e GetManifest[\"Get Extension Manifest\"]\n    ExtGalleryService --\u003e Download[\"Download Extension\"]\n    \n    ExtWorkbenchService[\"ExtensionsWorkbenchService\"] --\u003e ExtGalleryService\n```\n\nSources:\n- [src/vs/platform/extensionManagement/common/extensionGalleryService.ts:1-100]()\n- [src/vs/platform/extensionManagement/common/extensionManagement.ts:396-419]()\n\n### Extension Enablement Service\n\nThe `IWorkbenchExtensionEnablementService` manages the enablement state of extensions. It handles:\n\n- Enabling and disabling extensions\n- Determining if an extension can be enabled\n- Managing dependencies between extensions\n- Handling workspace trust requirements\n\nThis service ensures that extensions are properly enabled or disabled based on user preferences and system constraints.\n\n```mermaid\ngraph TD\n    ExtEnablementService[\"ExtensionEnablementService\"]\n    \n    GlobalEnablementService[\"IGlobalExtensionEnablementService\"]\n    StorageService[\"IStorageService\"]\n    WorkspaceTrustService[\"IWorkspaceTrustManagementService\"]\n    \n    ExtEnablementService --\u003e GlobalEnablementService\n    ExtEnablementService --\u003e StorageService\n    ExtEnablementService --\u003e WorkspaceTrustService\n    \n    ExtEnablementService --\u003e EnableExtension[\"Enable Extension\"]\n    ExtEnablementService --\u003e DisableExtension[\"Disable Extension\"]\n    ExtEnablementService --\u003e GetEnablementState[\"Get Enablement State\"]\n    \n    ExtWorkbenchService[\"ExtensionsWorkbenchService\"] --\u003e ExtEnablementService\n```\n\nSources:\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts:1-100]()\n- [src/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts:1-50]()\n\n## Extension Management Workflow\n\nThe extension management system follows a well-defined workflow for installing, updating, and uninstalling extensions.\n\n### Installation Process\n\nWhen a user installs an extension, the following process occurs:\n\n1. The UI component (e.g., `InstallAction`) calls `IExtensionsWorkbenchService.install()`\n2. The workbench service delegates to the appropriate `IExtensionManagementService` implementation\n3. The management service downloads the extension (if from marketplace) or extracts it (if from VSIX)\n4. The extension is installed to the appropriate location\n5. Events are fired to notify the system of the installation\n6. The UI is updated to reflect the new state\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant UI as Extension UI\n    participant WorkbenchService as ExtensionsWorkbenchService\n    participant ManagementService as ExtensionManagementService\n    participant GalleryService as ExtensionGalleryService\n    participant FileSystem\n\n    User-\u003e\u003eUI: Click Install\n    UI-\u003e\u003eWorkbenchService: install(extension)\n    \n    alt Gallery Extension\n        WorkbenchService-\u003e\u003eGalleryService: getManifest(extension)\n        GalleryService--\u003e\u003eWorkbenchService: manifest\n        WorkbenchService-\u003e\u003eManagementService: installFromGallery(extension)\n        ManagementService-\u003e\u003eGalleryService: download(extension)\n        GalleryService--\u003e\u003eManagementService: extensionLocation\n    else VSIX File\n        WorkbenchService-\u003e\u003eManagementService: install(vsixUri)\n        ManagementService-\u003e\u003eFileSystem: extract VSIX\n    end\n    \n    ManagementService-\u003e\u003eFileSystem: Install to extensions directory\n    ManagementService--\u003e\u003eWorkbenchService: localExtension\n    WorkbenchService--\u003e\u003eUI: Update UI\n    UI--\u003e\u003eUser: Show installed state\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts:427-646]()\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:145-173]()\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-100]()\n\n### Uninstallation Process\n\nThe uninstallation process follows a similar pattern:\n\n1. The UI component calls `IExtensionsWorkbenchService.uninstall()`\n2. The workbench service delegates to the appropriate `IExtensionManagementService`\n3. The management service removes the extension files\n4. Events are fired to notify the system of the uninstallation\n5. The UI is updated to reflect the new state\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant UI as Extension UI\n    participant WorkbenchService as ExtensionsWorkbenchService\n    participant ManagementService as ExtensionManagementService\n    participant FileSystem\n\n    User-\u003e\u003eUI: Click Uninstall\n    UI-\u003e\u003eWorkbenchService: uninstall(extension)\n    WorkbenchService-\u003e\u003eManagementService: uninstall(localExtension)\n    ManagementService-\u003e\u003eFileSystem: Remove extension files\n    ManagementService--\u003e\u003eWorkbenchService: Uninstall complete\n    WorkbenchService--\u003e\u003eUI: Update UI\n    UI--\u003e\u003eUser: Show uninstalled state\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts:1-100]()\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:220-234]()\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-100]()\n\n### Update Process\n\nThe update process is similar to installation but includes additional checks:\n\n1. The system checks for outdated extensions\n2. The UI shows update buttons for outdated extensions\n3. When the user initiates an update, the old version is uninstalled\n4. The new version is installed\n5. Events are fired to notify the system of the update\n6. The UI is updated to reflect the new state\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant UI as Extension UI\n    participant WorkbenchService as ExtensionsWorkbenchService\n    participant ManagementService as ExtensionManagementService\n    participant GalleryService as ExtensionGalleryService\n\n    User-\u003e\u003eUI: Click Update\n    UI-\u003e\u003eWorkbenchService: update(extension)\n    WorkbenchService-\u003e\u003eGalleryService: getManifest(extension)\n    GalleryService--\u003e\u003eWorkbenchService: manifest\n    WorkbenchService-\u003e\u003eManagementService: uninstall(oldVersion)\n    ManagementService--\u003e\u003eWorkbenchService: Uninstall complete\n    WorkbenchService-\u003e\u003eManagementService: installFromGallery(newVersion)\n    ManagementService--\u003e\u003eWorkbenchService: localExtension\n    WorkbenchService--\u003e\u003eUI: Update UI\n    UI--\u003e\u003eUser: Show updated state\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts:1-100]()\n- [src/vs/workbench/contrib/extensions/browser/extensionsWorkbenchService.ts:1-100]()\n\n## Extension States and Lifecycle\n\nExtensions in VS Code can exist in different states and transition between them during their lifecycle.\n\n### Extension States\n\nThe `ExtensionState` enum defines the possible states of an extension:\n\n- `Installing`: The extension is currently being installed\n- `Installed`: The extension is installed and available\n- `Uninstalling`: The extension is currently being uninstalled\n- `Uninstalled`: The extension is not installed\n\nAdditionally, extensions have an `EnablementState` that determines whether they are enabled or disabled:\n\n- `EnabledGlobally`: Enabled for all workspaces\n- `EnabledWorkspace`: Enabled only for the current workspace\n- `DisabledGlobally`: Disabled for all workspaces\n- `DisabledWorkspace`: Disabled only for the current workspace\n- `DisabledByExtensionKind`: Disabled because it's not compatible with the current environment\n- `DisabledByTrustRequirement`: Disabled because the workspace is not trusted\n- `DisabledByVirtualWorkspace`: Disabled because it doesn't support virtual workspaces\n- `DisabledByMalicious`: Disabled because it was marked as malicious\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Uninstalled\n    Uninstalled --\u003e Installing: install()\n    Installing --\u003e Installed: installation complete\n    Installed --\u003e Uninstalling: uninstall()\n    Uninstalling --\u003e Uninstalled: uninstallation complete\n    \n    state Installed {\n        [*] --\u003e EnabledGlobally\n        EnabledGlobally --\u003e DisabledGlobally: disable()\n        DisabledGlobally --\u003e EnabledGlobally: enable()\n        EnabledGlobally --\u003e EnabledWorkspace: enableForWorkspace()\n        EnabledWorkspace --\u003e EnabledGlobally: enableGlobally()\n        DisabledGlobally --\u003e DisabledWorkspace: disableForWorkspace()\n        DisabledWorkspace --\u003e DisabledGlobally: disableGlobally()\n    }\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/common/extensions.ts:39-44]()\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts:1-50]()\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts:1-100]()\n\n### Extension Enablement\n\nThe extension enablement system determines whether an extension can be enabled based on various factors:\n\n- User preferences (globally or per workspace)\n- Extension dependencies\n- Workspace trust requirements\n- Virtual workspace support\n- Extension kind compatibility\n\nThe `ExtensionEnablementService` manages these rules and provides APIs to enable or disable extensions.\n\n```mermaid\nflowchart TD\n    Start[Check Enablement] --\u003e IsMalicious{Is Malicious?}\n    IsMalicious --\u003e|Yes| Disabled[Disabled by Malicious]\n    IsMalicious --\u003e|No| IsCompatible{Is Compatible?}\n    \n    IsCompatible --\u003e|No| DisabledByKind[Disabled by Extension Kind]\n    IsCompatible --\u003e|Yes| TrustRequired{Trust Required?}\n    \n    TrustRequired --\u003e|Yes| IsTrusted{Is Workspace Trusted?}\n    TrustRequired --\u003e|No| VirtualSupport{Supports Virtual Workspace?}\n    \n    IsTrusted --\u003e|No| DisabledByTrust[Disabled by Trust Requirement]\n    IsTrusted --\u003e|Yes| VirtualSupport\n    \n    VirtualSupport --\u003e|No| IsVirtual{Is Virtual Workspace?}\n    VirtualSupport --\u003e|Yes| UserPreference\n    \n    IsVirtual --\u003e|Yes| DisabledByVirtual[Disabled by Virtual Workspace]\n    IsVirtual --\u003e|No| UserPreference{User Preference?}\n    \n    UserPreference --\u003e|Enabled| Enabled[Enabled]\n    UserPreference --\u003e|Disabled Globally| DisabledGlobally[Disabled Globally]\n    UserPreference --\u003e|Disabled Workspace| DisabledWorkspace[Disabled for Workspace]\n```\n\nSources:\n- [src/vs/workbench/services/extensionManagement/browser/extensionEnablementService.ts:1-100]()\n- [src/vs/workbench/services/extensionManagement/test/browser/extensionEnablementService.test.ts:1-50]()\n\n## Extension Management UI\n\nThe extension management UI provides a user-friendly interface for discovering, installing, and managing extensions.\n\n### Extensions View\n\nThe `ExtensionsViewPaneContainer` is the main UI component for browsing and managing extensions. It includes:\n\n- A search bar for finding extensions\n- Various views for different categories of extensions (installed, recommended, etc.)\n- Actions for installing, updating, and managing extensions\n\n```mermaid\ngraph TD\n    ExtensionsViewPaneContainer[\"ExtensionsViewPaneContainer\"]\n    \n    SearchBox[\"Extensions Search Box\"]\n    InstalledView[\"Installed Extensions View\"]\n    RecommendedView[\"Recommended Extensions View\"]\n    PopularView[\"Popular Extensions View\"]\n    OutdatedView[\"Outdated Extensions View\"]\n    \n    ExtensionsViewPaneContainer --\u003e SearchBox\n    ExtensionsViewPaneContainer --\u003e InstalledView\n    ExtensionsViewPaneContainer --\u003e RecommendedView\n    ExtensionsViewPaneContainer --\u003e PopularView\n    ExtensionsViewPaneContainer --\u003e OutdatedView\n    \n    InstalledView --\u003e ExtensionsList[\"ExtensionsList\"]\n    RecommendedView --\u003e ExtensionsList\n    PopularView --\u003e ExtensionsList\n    OutdatedView --\u003e ExtensionsList\n    \n    ExtensionsList --\u003e ExtensionListItem[\"ExtensionListItem\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsViewlet.ts:1-100]()\n- [src/vs/workbench/contrib/extensions/browser/extensionsViews.ts:1-100]()\n- [src/vs/workbench/contrib/extensions/browser/media/extensionsViewlet.css:1-50]()\n\n### Extension Editor\n\nThe `ExtensionEditor` provides a detailed view of an extension, including:\n\n- Extension metadata (name, publisher, version, etc.)\n- Description and documentation\n- Actions for installing, enabling, or uninstalling\n- Tabs for different sections (readme, changelog, etc.)\n\n```mermaid\ngraph TD\n    ExtensionEditor[\"ExtensionEditor\"]\n    \n    Header[\"Extension Header\"]\n    Navbar[\"Navigation Bar\"]\n    Content[\"Content Area\"]\n    \n    ExtensionEditor --\u003e Header\n    ExtensionEditor --\u003e Navbar\n    ExtensionEditor --\u003e Content\n    \n    Header --\u003e Icon[\"Extension Icon\"]\n    Header --\u003e Details[\"Extension Details\"]\n    Header --\u003e Actions[\"Extension Actions\"]\n    \n    Details --\u003e Name[\"Extension Name\"]\n    Details --\u003e Publisher[\"Publisher\"]\n    Details --\u003e Version[\"Version\"]\n    Details --\u003e Description[\"Description\"]\n    \n    Navbar --\u003e ReadmeTab[\"Readme Tab\"]\n    Navbar --\u003e ChangelogTab[\"Changelog Tab\"]\n    Navbar --\u003e FeaturesTab[\"Features Tab\"]\n    \n    Content --\u003e ReadmeContent[\"Readme Content\"]\n    Content --\u003e ChangelogContent[\"Changelog Content\"]\n    Content --\u003e FeaturesContent[\"Features Content\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionEditor.ts:1-100]()\n- [src/vs/workbench/contrib/extensions/browser/media/extensionEditor.css:1-50]()\n\n### Extension Actions\n\nThe extension management system provides a variety of actions for managing extensions:\n\n- `InstallAction`: Installs an extension\n- `UninstallAction`: Uninstalls an extension\n- `UpdateAction`: Updates an extension\n- `EnableAction`/`DisableAction`: Enables or disables an extension\n- `SetColorThemeAction`/`SetFileIconThemeAction`: Sets the theme from an extension\n- And many more specialized actions\n\nThese actions are displayed in the UI as buttons or menu items and trigger the corresponding operations in the extension management services.\n\n```mermaid\ngraph TD\n    ExtensionAction[\"ExtensionAction\u003cbr\u003e(Base Class)\"]\n    \n    InstallAction[\"InstallAction\"]\n    UninstallAction[\"UninstallAction\"]\n    UpdateAction[\"UpdateAction\"]\n    EnableAction[\"EnableAction\"]\n    DisableAction[\"DisableAction\"]\n    SetThemeAction[\"SetThemeAction\"]\n    \n    ExtensionAction --\u003e InstallAction\n    ExtensionAction --\u003e UninstallAction\n    ExtensionAction --\u003e UpdateAction\n    ExtensionAction --\u003e EnableAction\n    ExtensionAction --\u003e DisableAction\n    ExtensionAction --\u003e SetThemeAction\n    \n    InstallAction --\u003e InstallDropdownAction[\"InstallDropdownAction\"]\n    EnableAction --\u003e EnableDropDownAction[\"EnableDropDownAction\"]\n    DisableAction --\u003e DisableDropDownAction[\"DisableDropDownAction\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts:1-100]()\n- [src/vs/workbench/contrib/extensions/browser/media/extensionActions.css:1-50]()\n\n## Multi-Environment Extension Management\n\nVS Code supports running in different environments (desktop, web, remote), and the extension management system is designed to handle extensions across these environments.\n\n### Extension Management Servers\n\nThe `IExtensionManagementServerService` provides access to different extension management servers:\n\n- `localExtensionManagementServer`: Manages extensions on the local machine\n- `remoteExtensionManagementServer`: Manages extensions on a remote machine\n- `webExtensionManagementServer`: Manages extensions in the web environment\n\nEach server has its own implementation of `IExtensionManagementService` tailored to its environment.\n\n```mermaid\ngraph TD\n    ExtManagementServerService[\"ExtensionManagementServerService\"]\n    \n    LocalServer[\"Local Extension Management Server\"]\n    RemoteServer[\"Remote Extension Management Server\"]\n    WebServer[\"Web Extension Management Server\"]\n    \n    ExtManagementServerService --\u003e LocalServer\n    ExtManagementServerService --\u003e RemoteServer\n    ExtManagementServerService --\u003e WebServer\n    \n    LocalServer --\u003e LocalExtMgmtService[\"Local ExtensionManagementService\"]\n    RemoteServer --\u003e RemoteExtMgmtService[\"Remote ExtensionManagementService\"]\n    WebServer --\u003e WebExtMgmtService[\"Web ExtensionManagementService\"]\n    \n    LocalExtMgmtService --\u003e LocalFileSystem[\"Local File System\"]\n    RemoteExtMgmtService --\u003e RemoteFileSystem[\"Remote File System\"]\n    WebExtMgmtService --\u003e WebStorage[\"Web Storage\"]\n```\n\nSources:\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts:1-50]()\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementServerService.ts:1-50]()\n- [src/vs/workbench/services/extensionManagement/electron-sandbox/extensionManagementServerService.ts:1-50]()\n\n### Extension Installation Location\n\nExtensions can be installed in different locations depending on the environment and extension type:\n\n- Local: Extensions installed on the local machine\n- Remote: Extensions installed on a remote machine\n- Web: Extensions installed in the web environment\n\nThe system determines the appropriate location based on the extension's manifest and the current environment.\n\n```mermaid\nflowchart TD\n    Start[Determine Installation Location] --\u003e IsWebExtension{Is Web Extension?}\n    \n    IsWebExtension --\u003e|Yes| CanRunInWeb{Can Run in Web?}\n    IsWebExtension --\u003e|No| IsUIExtension{Is UI Extension?}\n    \n    CanRunInWeb --\u003e|Yes| WebLocation[Install in Web]\n    CanRunInWeb --\u003e|No| CannotInstall[Cannot Install]\n    \n    IsUIExtension --\u003e|Yes| LocalLocation[Install Locally]\n    IsUIExtension --\u003e|No| IsWorkspaceExtension{Is Workspace Extension?}\n    \n    IsWorkspaceExtension --\u003e|Yes| RemoteLocation[Install Remotely]\n    IsWorkspaceExtension --\u003e|No| CanRunAnywhere{Can Run Anywhere?}\n    \n    CanRunAnywhere --\u003e|Yes| PreferredLocation[Install in Preferred Location]\n    CanRunAnywhere --\u003e|No| CannotInstall\n```\n\nSources:\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts:30-34]()\n- [src/vs/workbench/contrib/extensions/browser/extensionsActions.ts:727-815]()\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementService.ts:1-100]()\n\n## Extension Profiles\n\nVS Code supports extension profiles, which allow users to have different sets of extensions for different workspaces or projects.\n\n### Profile-Aware Extension Management\n\nThe `IProfileAwareExtensionManagementService` extends the base `IExtensionManagementService` with profile-specific functionality:\n\n- Installing extensions to specific profiles\n- Copying extensions between profiles\n- Profile-specific events for extension changes\n\n```mermaid\ngraph TD\n    IExtMgmtService[\"IExtensionManagementService\"]\n    IProfileAwareExtMgmtService[\"IProfileAwareExtensionManagementService\"]\n    \n    IExtMgmtService --\u003e IProfileAwareExtMgmtService\n    \n    IProfileAwareExtMgmtService --\u003e ProfileEvents[\"Profile-specific Events\"]\n    IProfileAwareExtMgmtService --\u003e ProfileOperations[\"Profile-specific Operations\"]\n    \n    ProfileEvents --\u003e OnProfileAwareDidInstall[\"onProfileAwareDidInstallExtensions\"]\n    ProfileEvents --\u003e OnProfileAwareDidUninstall[\"onProfileAwareDidUninstallExtension\"]\n    ProfileEvents --\u003e OnDidChangeProfile[\"onDidChangeProfile\"]\n    \n    ProfileOperations --\u003e InstallToProfile[\"installExtensionsFromProfile()\"]\n    ProfileOperations --\u003e CopyExtensions[\"copyExtensions()\"]\n```\n\nSources:\n- [src/vs/workbench/services/extensionManagement/common/extensionManagement.ts:16-22]()\n- [src/vs/workbench/services/extensionManagement/common/extensionManagementService.ts:1-100]()\n\n### Extension Metadata\n\nExtensions store metadata that includes profile-specific information:\n\n- Installation source (gallery, VSIX, etc.)\n- Whether the extension is machine-scoped or profile-scoped\n- Pre-release status\n- Installation timestamp\n- And more\n\nThis metadata is used to properly restore extensions when switching profiles or workspaces.\n\n```mermaid\ngraph TD\n    Metadata[\"Extension Metadata\"]\n    \n    GalleryMetadata[\"Gallery Metadata\"]\n    ProfileMetadata[\"Profile Metadata\"]\n    \n    Metadata --\u003e GalleryMetadata\n    Metadata --\u003e ProfileMetadata\n    \n    GalleryMetadata --\u003e Id[\"Extension ID\"]\n    GalleryMetadata --\u003e PublisherId[\"Publisher ID\"]\n    GalleryMetadata --\u003e IsPreRelease[\"Is Pre-Release Version\"]\n    \n    ProfileMetadata --\u003e IsApplicationScoped[\"Is Application Scoped\"]\n    ProfileMetadata --\u003e IsMachineScoped[\"Is Machine Scoped\"]\n    ProfileMetadata --\u003e InstalledTimestamp[\"Installed Timestamp\"]\n    ProfileMetadata --\u003e Source[\"Installation Source\"]\n```\n\nSources:\n- [src/vs/platform/extensionManagement/common/extensionManagement.ts:260-272]()\n- [src/vs/platform/extensionManagement/node/extensionManagementService.ts:198-218]()\n\n## Conclusion\n\nThe extension management system in VS Code is a comprehensive set of services and components that work together to provide a seamless experience for discovering, installing, and managing extensions. It handles the complexities of different environments, profiles, and extension types while providing a user-friendly interface for interacting with extensions.\n\nThe system is designed to be extensible and adaptable to different environments, making it possible to run VS Code in a variety of contexts while maintaining a consistent extension management experience."])</script>
    <script>self.__next_f.push([1, "24:T80fe,"])</script>
    <script>self.__next_f.push([1, "# Extension API\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/git/package.json](extensions/git/package.json)\n- [extensions/git/package.nls.json](extensions/git/package.nls.json)\n- [extensions/git/src/actionButton.ts](extensions/git/src/actionButton.ts)\n- [extensions/git/src/api/api1.ts](extensions/git/src/api/api1.ts)\n- [extensions/git/src/api/extension.ts](extensions/git/src/api/extension.ts)\n- [extensions/git/src/api/git.d.ts](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/askpass-empty.sh](extensions/git/src/askpass-empty.sh)\n- [extensions/git/src/askpass-main.ts](extensions/git/src/askpass-main.ts)\n- [extensions/git/src/askpass.sh](extensions/git/src/askpass.sh)\n- [extensions/git/src/askpass.ts](extensions/git/src/askpass.ts)\n- [extensions/git/src/autofetch.ts](extensions/git/src/autofetch.ts)\n- [extensions/git/src/commands.ts](extensions/git/src/commands.ts)\n- [extensions/git/src/git.ts](extensions/git/src/git.ts)\n- [extensions/git/src/gitEditor.ts](extensions/git/src/gitEditor.ts)\n- [extensions/git/src/ipc/ipcClient.ts](extensions/git/src/ipc/ipcClient.ts)\n- [extensions/git/src/ipc/ipcServer.ts](extensions/git/src/ipc/ipcServer.ts)\n- [extensions/git/src/main.ts](extensions/git/src/main.ts)\n- [extensions/git/src/model.ts](extensions/git/src/model.ts)\n- [extensions/git/src/postCommitCommands.ts](extensions/git/src/postCommitCommands.ts)\n- [extensions/git/src/repository.ts](extensions/git/src/repository.ts)\n- [extensions/git/src/ssh-askpass-empty.sh](extensions/git/src/ssh-askpass-empty.sh)\n- [extensions/git/src/ssh-askpass.sh](extensions/git/src/ssh-askpass.sh)\n- [extensions/git/src/statusbar.ts](extensions/git/src/statusbar.ts)\n- [extensions/git/src/terminal.ts](extensions/git/src/terminal.ts)\n- [extensions/git/src/test/git.test.ts](extensions/git/src/test/git.test.ts)\n- [extensions/git/src/util.ts](extensions/git/src/util.ts)\n- [extensions/git/tsconfig.json](extensions/git/tsconfig.json)\n- [extensions/vscode-api-tests/package.json](extensions/vscode-api-tests/package.json)\n- [src/vs/editor/common/languages.ts](src/vs/editor/common/languages.ts)\n- [src/vs/platform/extensions/common/extensionsApiProposals.ts](src/vs/platform/extensions/common/extensionsApiProposals.ts)\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts](src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHost.api.impl.ts](src/vs/workbench/api/common/extHost.api.impl.ts)\n- [src/vs/workbench/api/common/extHost.protocol.ts](src/vs/workbench/api/common/extHost.protocol.ts)\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts](src/vs/workbench/api/common/extHostLanguageFeatures.ts)\n- [src/vs/workbench/api/common/extHostTypeConverters.ts](src/vs/workbench/api/common/extHostTypeConverters.ts)\n- [src/vs/workbench/api/common/extHostTypes.ts](src/vs/workbench/api/common/extHostTypes.ts)\n- [src/vscode-dts/vscode.d.ts](src/vscode-dts/vscode.d.ts)\n\n\u003c/details\u003e\n\n\n\nThis page documents the Extension API system in VS Code, which enables extensions to interact with and extend the functionality of the editor. The Extension API provides a comprehensive set of interfaces and services that extensions can use to integrate with VS Code's features.\n\nFor information about the Extension Host Protocol that enables communication between the extension host and the main thread, see [Extension Host Protocol](#4.1).\n\nFor information about Extension Management, see [Extension Management](#4.2).\n\n## Overview\n\nThe VS Code Extension API is the primary way for extensions to interact with the editor. It provides a rich set of capabilities that allow extensions to:\n\n1. Access and modify editor content\n2. Contribute UI elements\n3. Respond to editor events\n4. Add new functionality to VS Code\n\nThe API is exposed through the `vscode` namespace, which is automatically available to extensions when they are loaded.\n\n```mermaid\ngraph TD\n    subgraph \"Extension API Architecture\"\n        ExtAPI[\"Extension API (vscode namespace)\"]\n        ExtHost[\"Extension Host Process\"]\n        MainThread[\"Main Thread\"]\n        \n        ExtAPI --\u003e ExtHost\n        ExtHost \u003c--\u003e|\"RPC Protocol\"| MainThread\n        \n        subgraph \"Extension API Components\"\n            Commands[\"Commands API\"]\n            Workspace[\"Workspace API\"]\n            Languages[\"Languages API\"]\n            Debug[\"Debug API\"]\n            UI[\"UI API\"]\n            SCM[\"SCM API\"]\n        end\n        \n        ExtAPI --\u003e Commands\n        ExtAPI --\u003e Workspace\n        ExtAPI --\u003e Languages\n        ExtAPI --\u003e Debug\n        ExtAPI --\u003e UI\n        ExtAPI --\u003e SCM\n    end\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:126-240]()\n- [src/vs/workbench/api/common/extHost.protocol.ts:93-167]()\n\n## API Factory and Initialization\n\nWhen an extension is activated, VS Code creates an instance of the API for that extension. This is done through the `createApiFactoryAndRegisterActors` function, which sets up all the necessary services and components that the extension will need to interact with VS Code.\n\n```mermaid\nflowchart TD\n    subgraph \"API Initialization\"\n        createApiFactory[\"createApiFactoryAndRegisterActors()\"]\n        extHostServices[\"Extension Host Services\"]\n        registerActors[\"Register Addressable Instances\"]\n        createAPI[\"Create API for Extension\"]\n        \n        createApiFactory --\u003e extHostServices\n        extHostServices --\u003e registerActors\n        registerActors --\u003e createAPI\n    end\n    \n    subgraph \"Extension Host Services\"\n        extHostFileSystem[\"ExtHostFileSystem\"]\n        extHostWorkspace[\"ExtHostWorkspace\"]\n        extHostDocuments[\"ExtHostDocuments\"]\n        extHostLanguages[\"ExtHostLanguages\"]\n        extHostCommands[\"ExtHostCommands\"]\n        extHostTerminal[\"ExtHostTerminalService\"]\n        extHostDebug[\"ExtHostDebugService\"]\n        extHostTelemetry[\"ExtHostTelemetry\"]\n        extHostAuthentication[\"ExtHostAuthentication\"]\n    end\n    \n    createAPI --\u003e vscodeNamespace[\"vscode namespace\"]\n    \n    vscodeNamespace --\u003e commands\n    vscodeNamespace --\u003e workspace\n    vscodeNamespace --\u003e languages\n    vscodeNamespace --\u003e window\n    vscodeNamespace --\u003e debug\n    vscodeNamespace --\u003e env\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:126-240]()\n- [src/vs/workbench/api/common/extHost.api.impl.ts:240-524]()\n\n## Core API Namespaces\n\nThe VS Code API is organized into several key namespaces, each providing access to different aspects of the editor:\n\n### Commands API\n\nThe Commands API allows extensions to register and execute commands.\n\n```typescript\n// Register a command\ncommands.registerCommand('extension.myCommand', () =\u003e {\n    console.log('My command executed!');\n});\n\n// Execute a command\ncommands.executeCommand('workbench.action.openSettings');\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:317-361]()\n\n### Workspace API\n\nThe Workspace API provides access to workspace-related functionality, such as file system operations, configuration, and workspace folders.\n\n```typescript\n// Access workspace folders\nconst folders = workspace.workspaceFolders;\n\n// Read configuration\nconst config = workspace.getConfiguration('myExtension');\n\n// Watch for file changes\nconst watcher = workspace.createFileSystemWatcher('**/*.json');\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostWorkspace.ts]()\n\n### Languages API\n\nThe Languages API allows extensions to contribute language features like code completion, diagnostics, and formatting.\n\n```typescript\n// Register a completion provider\nlanguages.registerCompletionItemProvider('javascript', {\n    provideCompletionItems(document, position) {\n        // Provide completion items\n    }\n});\n\n// Create diagnostics\nconst diagnostics = languages.createDiagnosticCollection('myExtension');\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:526-589]()\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts]()\n\n### Window API\n\nThe Window API provides access to the editor UI, including text editors, terminals, and UI components.\n\n```typescript\n// Show information message\nwindow.showInformationMessage('Hello World!');\n\n// Get active text editor\nconst editor = window.activeTextEditor;\n```\n\n### Debug API\n\nThe Debug API allows extensions to interact with the debugging system.\n\n```typescript\n// Register a debug adapter provider\ndebug.registerDebugAdapterDescriptorFactory('myDebugType', {\n    createDebugAdapterDescriptor(session) {\n        // Create debug adapter\n    }\n});\n```\n\n### Environment API\n\nThe Environment API provides information about the VS Code environment.\n\n```typescript\n// Get VS Code version\nconst version = env.appVersion;\n\n// Access clipboard\nconst text = await env.clipboard.readText();\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:364-449]()\n\n## Communication Architecture\n\nThe Extension API uses a Remote Procedure Call (RPC) protocol to communicate between the extension host process and the main VS Code process.\n\n```mermaid\nsequenceDiagram\n    participant Extension\n    participant ExtHost as Extension Host\n    participant MainThread as Main Thread\n    participant VSCode as VS Code Core\n    \n    Extension-\u003e\u003eExtHost: Call API method\n    ExtHost-\u003e\u003eMainThread: Send RPC request\n    MainThread-\u003e\u003eVSCode: Execute operation\n    VSCode--\u003e\u003eMainThread: Operation result\n    MainThread--\u003e\u003eExtHost: RPC response\n    ExtHost--\u003e\u003eExtension: Return result\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.protocol.ts:93-167]()\n- [src/vs/workbench/api/common/extHost.api.impl.ts:152-225]()\n\n## Extension Context and Lifecycle\n\nWhen an extension is activated, it receives an `ExtensionContext` object that provides access to various services and utilities:\n\n```typescript\nexport function activate(context: vscode.ExtensionContext) {\n    // Register commands, providers, etc.\n    const disposable = vscode.commands.registerCommand('extension.helloWorld', () =\u003e {\n        vscode.window.showInformationMessage('Hello World!');\n    });\n    \n    // Add to disposables to ensure cleanup on deactivation\n    context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {\n    // Cleanup resources\n}\n```\n\nThe `ExtensionContext` provides:\n- Subscription management for disposables\n- Storage APIs for persisting data\n- Extension path information\n- Secrets storage\n\nSources:\n- [src/vscode-dts/vscode.d.ts]()\n\n## Type System\n\nVS Code's Extension API includes a rich type system that provides classes and interfaces for working with editor concepts:\n\n```mermaid\ngraph TD\n    subgraph \"Core Types\"\n        Position[\"Position (line, character)\"]\n        Range[\"Range (start, end)\"]\n        Selection[\"Selection (anchor, active)\"]\n        Location[\"Location (uri, range)\"]\n        Uri[\"Uri\"]\n        Disposable[\"Disposable\"]\n    end\n    \n    subgraph \"Document Types\"\n        TextDocument[\"TextDocument\"]\n        TextLine[\"TextLine\"]\n        TextEditor[\"TextEditor\"]\n        TextEditorEdit[\"TextEditorEdit\"]\n        WorkspaceEdit[\"WorkspaceEdit\"]\n    end\n    \n    subgraph \"Language Types\"\n        CompletionItem[\"CompletionItem\"]\n        Diagnostic[\"Diagnostic\"]\n        DocumentSymbol[\"DocumentSymbol\"]\n        Hover[\"Hover\"]\n        CodeAction[\"CodeAction\"]\n    end\n    \n    Position --\u003e Range\n    Position --\u003e Selection\n    Range --\u003e Selection\n    Range --\u003e Location\n    Uri --\u003e Location\n    \n    TextDocument --\u003e TextLine\n    TextEditor --\u003e TextDocument\n    TextEditor --\u003e TextEditorEdit\n    TextDocument --\u003e WorkspaceEdit\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostTypes.ts:99-281]()\n- [src/vs/workbench/api/common/extHostTypes.ts:283-431]()\n- [src/vs/workbench/api/common/extHostTypes.ts:433-502]()\n\n### Position and Range\n\nThe `Position` and `Range` classes are fundamental to working with text in VS Code:\n\n```typescript\n// Create a position at line 5, character 10\nconst position = new vscode.Position(5, 10);\n\n// Create a range from line 5, character 10 to line 6, character 20\nconst range = new vscode.Range(5, 10, 6, 20);\n// Or using positions\nconst range2 = new vscode.Range(position, new vscode.Position(6, 20));\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostTypes.ts:99-281]()\n- [src/vs/workbench/api/common/extHostTypes.ts:283-431]()\n\n### Selection\n\nThe `Selection` class extends `Range` to represent text selections with anchor and active positions:\n\n```typescript\n// Create a selection from line 5, character 10 to line 6, character 20\nconst selection = new vscode.Selection(5, 10, 6, 20);\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostTypes.ts:433-502]()\n\n### URI\n\nThe `Uri` class represents Universal Resource Identifiers:\n\n```typescript\n// Create a URI for a file\nconst uri = vscode.Uri.file('/path/to/file.txt');\n\n// Create a URI from a string\nconst uri2 = vscode.Uri.parse('file:///path/to/file.txt');\n```\n\n## Type Converters\n\nVS Code uses type converters to translate between the API types that extensions use and the internal types used by the editor. These converters ensure that data is properly transformed when crossing the boundary between the extension host and the main thread.\n\n```mermaid\ngraph TD\n    subgraph \"Type Converters\"\n        Position[\"Position Converter\"]\n        Range[\"Range Converter\"]\n        Selection[\"Selection Converter\"]\n        DocumentSelector[\"DocumentSelector Converter\"]\n        Diagnostic[\"Diagnostic Converter\"]\n        Command[\"Command Converter\"]\n    end\n    \n    subgraph \"Extension Host Types\"\n        ExtPosition[\"vscode.Position\"]\n        ExtRange[\"vscode.Range\"]\n        ExtSelection[\"vscode.Selection\"]\n        ExtDocSelector[\"vscode.DocumentSelector\"]\n        ExtDiagnostic[\"vscode.Diagnostic\"]\n        ExtCommand[\"vscode.Command\"]\n    end\n    \n    subgraph \"Internal Types\"\n        IntPosition[\"IPosition\"]\n        IntRange[\"IRange\"]\n        IntSelection[\"ISelection\"]\n        IntDocSelector[\"IDocumentFilterDto\"]\n        IntDiagnostic[\"IMarkerData\"]\n        IntCommand[\"ICommandDto\"]\n    end\n    \n    ExtPosition \u003c--\u003e|\"to/from\"| Position\n    Position \u003c--\u003e|\"to/from\"| IntPosition\n    \n    ExtRange \u003c--\u003e|\"to/from\"| Range\n    Range \u003c--\u003e|\"to/from\"| IntRange\n    \n    ExtSelection \u003c--\u003e|\"to/from\"| Selection\n    Selection \u003c--\u003e|\"to/from\"| IntSelection\n    \n    ExtDocSelector \u003c--\u003e|\"from\"| DocumentSelector\n    DocumentSelector \u003c--\u003e|\"from\"| IntDocSelector\n    \n    ExtDiagnostic \u003c--\u003e|\"to/from\"| Diagnostic\n    Diagnostic \u003c--\u003e|\"to/from\"| IntDiagnostic\n    \n    ExtCommand \u003c--\u003e|\"to/from\"| Command\n    Command \u003c--\u003e|\"to/from\"| IntCommand\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostTypeConverters.ts:89-170]()\n- [src/vs/workbench/api/common/extHostTypeConverters.ts:172-256]()\n- [src/vs/workbench/api/common/extHostTypeConverters.ts:210-266]()\n\n## Language Features API\n\nThe Language Features API allows extensions to contribute language-specific functionality to the editor, such as code completion, diagnostics, and formatting.\n\n```mermaid\ngraph TD\n    subgraph \"Language Features\"\n        CompletionProvider[\"CompletionItemProvider\"]\n        HoverProvider[\"HoverProvider\"]\n        DefinitionProvider[\"DefinitionProvider\"]\n        ReferenceProvider[\"ReferenceProvider\"]\n        DocumentSymbolProvider[\"DocumentSymbolProvider\"]\n        CodeActionProvider[\"CodeActionProvider\"]\n        CodeLensProvider[\"CodeLensProvider\"]\n        FormattingProvider[\"DocumentFormattingEditProvider\"]\n        RenameProvider[\"RenameProvider\"]\n        SemanticTokensProvider[\"DocumentSemanticTokensProvider\"]\n    end\n    \n    subgraph \"Registration\"\n        RegisterCompletion[\"languages.registerCompletionItemProvider\"]\n        RegisterHover[\"languages.registerHoverProvider\"]\n        RegisterDefinition[\"languages.registerDefinitionProvider\"]\n        RegisterReference[\"languages.registerReferenceProvider\"]\n        RegisterSymbol[\"languages.registerDocumentSymbolProvider\"]\n        RegisterCodeAction[\"languages.registerCodeActionProvider\"]\n        RegisterCodeLens[\"languages.registerCodeLensProvider\"]\n        RegisterFormatting[\"languages.registerDocumentFormattingEditProvider\"]\n        RegisterRename[\"languages.registerRenameProvider\"]\n        RegisterSemanticTokens[\"languages.registerDocumentSemanticTokensProvider\"]\n    end\n    \n    CompletionProvider --\u003e RegisterCompletion\n    HoverProvider --\u003e RegisterHover\n    DefinitionProvider --\u003e RegisterDefinition\n    ReferenceProvider --\u003e RegisterReference\n    DocumentSymbolProvider --\u003e RegisterSymbol\n    CodeActionProvider --\u003e RegisterCodeAction\n    CodeLensProvider --\u003e RegisterCodeLens\n    FormattingProvider --\u003e RegisterFormatting\n    RenameProvider --\u003e RegisterRename\n    SemanticTokensProvider --\u003e RegisterSemanticTokens\n    \n    subgraph \"Main Thread\"\n        MainThreadLanguageFeatures[\"MainThreadLanguageFeatures\"]\n    end\n    \n    RegisterCompletion --\u003e MainThreadLanguageFeatures\n    RegisterHover --\u003e MainThreadLanguageFeatures\n    RegisterDefinition --\u003e MainThreadLanguageFeatures\n    RegisterReference --\u003e MainThreadLanguageFeatures\n    RegisterSymbol --\u003e MainThreadLanguageFeatures\n    RegisterCodeAction --\u003e MainThreadLanguageFeatures\n    RegisterCodeLens --\u003e MainThreadLanguageFeatures\n    RegisterFormatting --\u003e MainThreadLanguageFeatures\n    RegisterRename --\u003e MainThreadLanguageFeatures\n    RegisterSemanticTokens --\u003e MainThreadLanguageFeatures\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts]()\n- [src/vs/workbench/api/browser/mainThreadLanguageFeatures.ts]()\n- [src/vs/editor/common/languages.ts]()\n\n### Registering Language Providers\n\nExtensions can register various language providers to enhance the editing experience for specific languages:\n\n```typescript\n// Register a completion provider for JavaScript\nconst provider = vscode.languages.registerCompletionItemProvider('javascript', {\n    provideCompletionItems(document, position, token, context) {\n        // Return completion items\n        return [\n            new vscode.CompletionItem('function', vscode.CompletionItemKind.Keyword),\n            new vscode.CompletionItem('class', vscode.CompletionItemKind.Keyword)\n        ];\n    }\n});\n\n// Register a hover provider for TypeScript\nconst hoverProvider = vscode.languages.registerHoverProvider('typescript', {\n    provideHover(document, position, token) {\n        // Return hover information\n        return new vscode.Hover('Hover information');\n    }\n});\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:526-589]()\n- [src/vs/workbench/api/common/extHostLanguageFeatures.ts]()\n\n## Commands API\n\nThe Commands API allows extensions to register and execute commands. Commands are the primary way for extensions to expose functionality to users and to interact with other parts of VS Code.\n\n```mermaid\ngraph TD\n    subgraph \"Commands System\"\n        ExtHostCommands[\"ExtHostCommands\"]\n        MainThreadCommands[\"MainThreadCommands\"]\n        CommandRegistry[\"CommandRegistry (VS Code Core)\"]\n        \n        ExtHostCommands \u003c--\u003e|\"RPC Protocol\"| MainThreadCommands\n        MainThreadCommands --\u003e CommandRegistry\n    end\n    \n    subgraph \"Extension API\"\n        RegisterCommand[\"commands.registerCommand\"]\n        ExecuteCommand[\"commands.executeCommand\"]\n        GetCommands[\"commands.getCommands\"]\n        \n        RegisterCommand --\u003e ExtHostCommands\n        ExecuteCommand --\u003e ExtHostCommands\n        GetCommands --\u003e ExtHostCommands\n    end\n    \n    subgraph \"Command Execution\"\n        UserAction[\"User Action (Menu, Keybinding)\"]\n        CommandPalette[\"Command Palette\"]\n        \n        UserAction --\u003e CommandRegistry\n        CommandPalette --\u003e CommandRegistry\n        CommandRegistry --\u003e MainThreadCommands\n    end\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:317-361]()\n- [src/vs/workbench/api/common/extHostCommands.ts]()\n\n### Registering Commands\n\nExtensions can register commands that can be executed by users or other extensions:\n\n```typescript\n// Register a simple command\nconst disposable = vscode.commands.registerCommand('extension.helloWorld', () =\u003e {\n    vscode.window.showInformationMessage('Hello World!');\n});\n\n// Register a command that takes parameters\nconst paramCommand = vscode.commands.registerCommand('extension.greet', (name) =\u003e {\n    vscode.window.showInformationMessage(`Hello, ${name}!`);\n});\n\n// Register a text editor command\nconst editorCommand = vscode.commands.registerTextEditorCommand('extension.insertText', (editor, edit) =\u003e {\n    edit.insert(editor.selection.start, 'Inserted text');\n});\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:317-361]()\n\n### Executing Commands\n\nExtensions can execute commands, including built-in VS Code commands and commands registered by other extensions:\n\n```typescript\n// Execute a command without parameters\nvscode.commands.executeCommand('workbench.action.openSettings');\n\n// Execute a command with parameters\nvscode.commands.executeCommand('extension.greet', 'John');\n\n// Execute a command and get the result\nconst result = await vscode.commands.executeCommand('vscode.executeDefinitionProvider', \n    document.uri, new vscode.Position(10, 20));\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:317-361]()\n\n## Workspace API\n\nThe Workspace API provides access to workspace-related functionality, such as file system operations, configuration, and workspace folders.\n\n```mermaid\ngraph TD\n    subgraph \"Workspace API Components\"\n        WorkspaceFolders[\"workspace.workspaceFolders\"]\n        FileSystem[\"workspace.fs\"]\n        Configuration[\"workspace.getConfiguration\"]\n        FileSystemWatcher[\"workspace.createFileSystemWatcher\"]\n        FindFiles[\"workspace.findFiles\"]\n        SaveFile[\"workspace.saveAll\"]\n        OpenTextDocument[\"workspace.openTextDocument\"]\n    end\n    \n    subgraph \"Extension Host\"\n        ExtHostWorkspace[\"ExtHostWorkspace\"]\n        ExtHostFileSystem[\"ExtHostFileSystem\"]\n        ExtHostConfiguration[\"ExtHostConfiguration\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadWorkspace[\"MainThreadWorkspace\"]\n        MainThreadFileSystem[\"MainThreadFileSystem\"]\n        MainThreadConfiguration[\"MainThreadConfiguration\"]\n    end\n    \n    WorkspaceFolders --\u003e ExtHostWorkspace\n    FileSystem --\u003e ExtHostFileSystem\n    Configuration --\u003e ExtHostConfiguration\n    FileSystemWatcher --\u003e ExtHostWorkspace\n    FindFiles --\u003e ExtHostWorkspace\n    SaveFile --\u003e ExtHostWorkspace\n    OpenTextDocument --\u003e ExtHostWorkspace\n    \n    ExtHostWorkspace \u003c--\u003e MainThreadWorkspace\n    ExtHostFileSystem \u003c--\u003e MainThreadFileSystem\n    ExtHostConfiguration \u003c--\u003e MainThreadConfiguration\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostWorkspace.ts]()\n- [src/vs/workbench/api/common/extHostFileSystem.ts]()\n- [src/vs/workbench/api/common/extHostConfiguration.ts]()\n\n### Workspace Folders\n\nExtensions can access the folders that are open in the workspace:\n\n```typescript\n// Get all workspace folders\nconst folders = vscode.workspace.workspaceFolders;\n\n// Check if workspace has folders\nif (folders \u0026\u0026 folders.length \u003e 0) {\n    const firstFolder = folders[0];\n    console.log(`First folder: ${firstFolder.name} at ${firstFolder.uri.fsPath}`);\n}\n```\n\n### File System Operations\n\nThe Workspace API provides file system operations through the `workspace.fs` namespace:\n\n```typescript\n// Read a file\nconst fileContent = await vscode.workspace.fs.readFile(vscode.Uri.file('/path/to/file.txt'));\n\n// Write a file\nawait vscode.workspace.fs.writeFile(\n    vscode.Uri.file('/path/to/file.txt'),\n    new Uint8Array(Buffer.from('Hello, World!'))\n);\n\n// Create a directory\nawait vscode.workspace.fs.createDirectory(vscode.Uri.file('/path/to/directory'));\n\n// Delete a file\nawait vscode.workspace.fs.delete(vscode.Uri.file('/path/to/file.txt'));\n```\n\n### Configuration\n\nExtensions can access and modify VS Code settings through the Configuration API:\n\n```typescript\n// Get configuration for the extension\nconst config = vscode.workspace.getConfiguration('myExtension');\n\n// Read a setting\nconst value = config.get('setting', 'default');\n\n// Update a setting\nawait config.update('setting', 'new value', vscode.ConfigurationTarget.Global);\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostConfiguration.ts]()\n\n### File System Watchers\n\nExtensions can watch for file system changes:\n\n```typescript\n// Watch for changes to JSON files\nconst watcher = vscode.workspace.createFileSystemWatcher('**/*.json');\n\n// Listen for file creation\nwatcher.onDidCreate(uri =\u003e {\n    console.log(`File created: ${uri.fsPath}`);\n});\n\n// Listen for file changes\nwatcher.onDidChange(uri =\u003e {\n    console.log(`File changed: ${uri.fsPath}`);\n});\n\n// Listen for file deletion\nwatcher.onDidDelete(uri =\u003e {\n    console.log(`File deleted: ${uri.fsPath}`);\n});\n```\n\n## Window API\n\nThe Window API provides access to the editor UI, including text editors, terminals, and UI components.\n\n```mermaid\ngraph TD\n    subgraph \"Window API Components\"\n        ActiveTextEditor[\"window.activeTextEditor\"]\n        VisibleTextEditors[\"window.visibleTextEditors\"]\n        ShowMessage[\"window.showInformationMessage\"]\n        ShowQuickPick[\"window.showQuickPick\"]\n        ShowInputBox[\"window.showInputBox\"]\n        CreateTerminal[\"window.createTerminal\"]\n        CreateOutputChannel[\"window.createOutputChannel\"]\n        CreateWebviewPanel[\"window.createWebviewPanel\"]\n        RegisterTreeDataProvider[\"window.registerTreeDataProvider\"]\n    end\n    \n    subgraph \"Extension Host\"\n        ExtHostWindow[\"ExtHostWindow\"]\n        ExtHostEditors[\"ExtHostEditors\"]\n        ExtHostMessageService[\"ExtHostMessageService\"]\n        ExtHostTerminalService[\"ExtHostTerminalService\"]\n        ExtHostOutputService[\"ExtHostOutputService\"]\n        ExtHostWebviews[\"ExtHostWebviews\"]\n        ExtHostTreeViews[\"ExtHostTreeViews\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadWindow[\"MainThreadWindow\"]\n        MainThreadEditors[\"MainThreadEditors\"]\n        MainThreadMessageService[\"MainThreadMessageService\"]\n        MainThreadTerminalService[\"MainThreadTerminalService\"]\n        MainThreadOutputService[\"MainThreadOutputService\"]\n        MainThreadWebviews[\"MainThreadWebviews\"]\n        MainThreadTreeViews[\"MainThreadTreeViews\"]\n    end\n    \n    ActiveTextEditor --\u003e ExtHostEditors\n    VisibleTextEditors --\u003e ExtHostEditors\n    ShowMessage --\u003e ExtHostMessageService\n    ShowQuickPick --\u003e ExtHostWindow\n    ShowInputBox --\u003e ExtHostWindow\n    CreateTerminal --\u003e ExtHostTerminalService\n    CreateOutputChannel --\u003e ExtHostOutputService\n    CreateWebviewPanel --\u003e ExtHostWebviews\n    RegisterTreeDataProvider --\u003e ExtHostTreeViews\n    \n    ExtHostWindow \u003c--\u003e MainThreadWindow\n    ExtHostEditors \u003c--\u003e MainThreadEditors\n    ExtHostMessageService \u003c--\u003e MainThreadMessageService\n    ExtHostTerminalService \u003c--\u003e MainThreadTerminalService\n    ExtHostOutputService \u003c--\u003e MainThreadOutputService\n    ExtHostWebviews \u003c--\u003e MainThreadWebviews\n    ExtHostTreeViews \u003c--\u003e MainThreadTreeViews\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostEditors.ts]()\n- [src/vs/workbench/api/common/extHostMessageService.ts]()\n- [src/vs/workbench/api/common/extHostTerminalService.ts]()\n\n### Text Editors\n\nExtensions can access and manipulate text editors:\n\n```typescript\n// Get the active text editor\nconst editor = vscode.window.activeTextEditor;\nif (editor) {\n    // Get the document\n    const document = editor.document;\n    \n    // Get the selection\n    const selection = editor.selection;\n    \n    // Get the text in the selection\n    const text = document.getText(selection);\n    \n    // Edit the document\n    editor.edit(editBuilder =\u003e {\n        editBuilder.replace(selection, text.toUpperCase());\n    });\n}\n```\n\n### Messages and UI\n\nExtensions can show messages and UI elements:\n\n```typescript\n// Show an information message\nvscode.window.showInformationMessage('Hello, World!');\n\n// Show a warning message\nvscode.window.showWarningMessage('Warning!');\n\n// Show an error message\nvscode.window.showErrorMessage('Error!');\n\n// Show a message with buttons\nvscode.window.showInformationMessage('Do you want to continue?', 'Yes', 'No')\n    .then(selection =\u003e {\n        if (selection === 'Yes') {\n            // User clicked Yes\n        }\n    });\n\n// Show a quick pick\nvscode.window.showQuickPick(['Option 1', 'Option 2', 'Option 3'])\n    .then(selection =\u003e {\n        if (selection) {\n            console.log(`Selected: ${selection}`);\n        }\n    });\n\n// Show an input box\nvscode.window.showInputBox({ prompt: 'Enter your name' })\n    .then(value =\u003e {\n        if (value) {\n            console.log(`Name: ${value}`);\n        }\n    });\n```\n\n### Terminals\n\nExtensions can create and interact with integrated terminals:\n\n```typescript\n// Create a terminal\nconst terminal = vscode.window.createTerminal('My Terminal');\n\n// Send text to the terminal\nterminal.sendText('echo Hello, World!');\n\n// Show the terminal\nterminal.show();\n\n// Hide the terminal\nterminal.hide();\n\n// Dispose the terminal\nterminal.dispose();\n```\n\n## Events and Event Handling\n\nVS Code's Extension API uses an event-based architecture for many of its features. Extensions can subscribe to events to be notified when certain actions occur.\n\n```mermaid\ngraph TD\n    subgraph \"Event Sources\"\n        WorkspaceEvents[\"Workspace Events\"]\n        WindowEvents[\"Window Events\"]\n        EditorEvents[\"Editor Events\"]\n        DebugEvents[\"Debug Events\"]\n        TerminalEvents[\"Terminal Events\"]\n        TaskEvents[\"Task Events\"]\n    end\n    \n    subgraph \"Event Types\"\n        OnDidChangeWorkspaceFolders[\"onDidChangeWorkspaceFolders\"]\n        OnDidChangeTextDocument[\"onDidChangeTextDocument\"]\n        OnDidChangeActiveTextEditor[\"onDidChangeActiveTextEditor\"]\n        OnDidChangeVisibleTextEditors[\"onDidChangeVisibleTextEditors\"]\n        OnDidChangeConfiguration[\"onDidChangeConfiguration\"]\n        OnDidStartDebugSession[\"onDidStartDebugSession\"]\n        OnDidTerminateDebugSession[\"onDidTerminateDebugSession\"]\n        OnDidCreateTerminal[\"onDidCreateTerminal\"]\n        OnDidCloseTerminal[\"onDidCloseTerminal\"]\n    end\n    \n    WorkspaceEvents --\u003e OnDidChangeWorkspaceFolders\n    WorkspaceEvents --\u003e OnDidChangeTextDocument\n    WorkspaceEvents --\u003e OnDidChangeConfiguration\n    WindowEvents --\u003e OnDidChangeActiveTextEditor\n    WindowEvents --\u003e OnDidChangeVisibleTextEditors\n    DebugEvents --\u003e OnDidStartDebugSession\n    DebugEvents --\u003e OnDidTerminateDebugSession\n    TerminalEvents --\u003e OnDidCreateTerminal\n    TerminalEvents --\u003e OnDidCloseTerminal\n```\n\nSources:\n- [src/vs/workbench/api/common/extHost.api.impl.ts:245-257]()\n\n### Subscribing to Events\n\nExtensions can subscribe to events using the `on*` methods provided by various API objects:\n\n```typescript\n// Listen for changes to workspace folders\nvscode.workspace.onDidChangeWorkspaceFolders(event =\u003e {\n    console.log(`Added folders: ${event.added.length}`);\n    console.log(`Removed folders: ${event.removed.length}`);\n});\n\n// Listen for changes to text documents\nvscode.workspace.onDidChangeTextDocument(event =\u003e {\n    console.log(`Document changed: ${event.document.uri.fsPath}`);\n    console.log(`Changes: ${event.contentChanges.length}`);\n});\n\n// Listen for changes to the active text editor\nvscode.window.onDidChangeActiveTextEditor(editor =\u003e {\n    if (editor) {\n        console.log(`New active editor: ${editor.document.uri.fsPath}`);\n    } else {\n        console.log('No active editor');\n    }\n});\n\n// Listen for changes to configuration\nvscode.workspace.onDidChangeConfiguration(event =\u003e {\n    if (event.affectsConfiguration('myExtension')) {\n        console.log('My extension configuration changed');\n    }\n});\n```\n\n### Event Handling Best Practices\n\nWhen handling events in extensions, it's important to follow these best practices:\n\n1. **Dispose of event listeners**: Always dispose of event listeners when they are no longer needed to prevent memory leaks.\n\n```typescript\n// Store the disposable returned by the event subscription\nconst disposable = vscode.workspace.onDidChangeTextDocument(event =\u003e {\n    // Handle event\n});\n\n// Add to extension context subscriptions for automatic disposal\ncontext.subscriptions.push(disposable);\n```\n\n2. **Error handling**: Wrap event handlers in try-catch blocks to prevent errors from crashing the extension host.\n\n```typescript\nvscode.workspace.onDidChangeTextDocument(event =\u003e {\n    try {\n        // Handle event\n    } catch (error) {\n        console.error('Error handling text document change:', error);\n    }\n});\n```\n\n3. **Debouncing**: For frequent events, consider debouncing to improve performance.\n\n```typescript\nlet timeout: NodeJS.Timeout | undefined;\nvscode.workspace.onDidChangeTextDocument(event =\u003e {\n    if (timeout) {\n        clearTimeout(timeout);\n    }\n    timeout = setTimeout(() =\u003e {\n        // Handle event\n        timeout = undefined;\n    }, 500);\n});\n```\n\n## Extension Activation\n\nExtensions in VS Code are activated lazily, meaning they are only loaded when needed. The activation is controlled by the `activationEvents` specified in the extension's `package.json` file.\n\n```\n\n---\n\n**Note: This wiki page content was truncated due to reaching the token limit.**"])</script>
    <script>self.__next_f.push([1, "25:T713e,"])</script>
    <script>self.__next_f.push([1, "# Integrated Terminal\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/platform/terminal/common/terminal.ts](src/vs/platform/terminal/common/terminal.ts)\n- [src/vs/platform/terminal/common/terminalPlatformConfiguration.ts](src/vs/platform/terminal/common/terminalPlatformConfiguration.ts)\n- [src/vs/platform/terminal/node/ptyHostService.ts](src/vs/platform/terminal/node/ptyHostService.ts)\n- [src/vs/platform/terminal/node/ptyService.ts](src/vs/platform/terminal/node/ptyService.ts)\n- [src/vs/platform/terminal/node/terminalProcess.ts](src/vs/platform/terminal/node/terminalProcess.ts)\n- [src/vs/platform/terminal/node/terminalProfiles.ts](src/vs/platform/terminal/node/terminalProfiles.ts)\n- [src/vs/workbench/api/browser/mainThreadTerminalService.ts](src/vs/workbench/api/browser/mainThreadTerminalService.ts)\n- [src/vs/workbench/api/common/extHostTerminalService.ts](src/vs/workbench/api/common/extHostTerminalService.ts)\n- [src/vs/workbench/api/node/extHostTerminalService.ts](src/vs/workbench/api/node/extHostTerminalService.ts)\n- [src/vs/workbench/browser/parts/media/compositepart.css](src/vs/workbench/browser/parts/media/compositepart.css)\n- [src/vs/workbench/contrib/terminal/browser/media/terminal.css](src/vs/workbench/contrib/terminal/browser/media/terminal.css)\n- [src/vs/workbench/contrib/terminal/browser/media/xterm.css](src/vs/workbench/contrib/terminal/browser/media/xterm.css)\n- [src/vs/workbench/contrib/terminal/browser/remotePty.ts](src/vs/workbench/contrib/terminal/browser/remotePty.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts](src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts](src/vs/workbench/contrib/terminal/browser/terminal.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalActions.ts](src/vs/workbench/contrib/terminal/browser/terminalActions.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditor.ts](src/vs/workbench/contrib/terminal/browser/terminalEditor.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroup.ts](src/vs/workbench/contrib/terminal/browser/terminalGroup.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalIcon.ts](src/vs/workbench/contrib/terminal/browser/terminalIcon.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalMenus.ts](src/vs/workbench/contrib/terminal/browser/terminalMenus.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts](src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts](src/vs/workbench/contrib/terminal/browser/terminalService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts](src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts](src/vs/workbench/contrib/terminal/browser/terminalView.ts)\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts)\n- [src/vs/workbench/contrib/terminal/common/terminal.ts](src/vs/workbench/contrib/terminal/common/terminal.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts](src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts](src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalStrings.ts](src/vs/workbench/contrib/terminal/common/terminalStrings.ts)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts](src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts](src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts)\n- [src/vs/workbench/contrib/terminal/test/node/terminalProfiles.test.ts](src/vs/workbench/contrib/terminal/test/node/terminalProfiles.test.ts)\n\n\u003c/details\u003e\n\n\n\nThe Integrated Terminal in VS Code provides a full-featured terminal directly within the editor. This document covers the architecture, components, and functionality of the terminal system, including how it manages terminal instances, processes, and UI integration.\n\n## Overview\n\nThe VS Code terminal system allows users to run command-line shells directly within the editor interface. It supports multiple terminal instances, split views, and can be displayed either in the panel at the bottom of the window or as an editor in the main editor area.\n\nThe terminal implementation consists of several key components:\n- Terminal UI components (instances, groups, tabs)\n- Process management (local and remote)\n- Shell integration\n- Configuration and profiles\n- Extension API\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:36-41](src/vs/workbench/contrib/terminal/browser/terminal.ts:36-41)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-132](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-132)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-91](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-91)\n\n## Architecture\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Services\"\n        TerminalService[\"TerminalService\u003cbr\u003e(Main service)\"]\n        TerminalInstanceService[\"TerminalInstanceService\u003cbr\u003e(Creates instances)\"]\n        TerminalGroupService[\"TerminalGroupService\u003cbr\u003e(Manages panel terminals)\"]\n        TerminalEditorService[\"TerminalEditorService\u003cbr\u003e(Manages editor terminals)\"]\n        TerminalProfileService[\"TerminalProfileService\u003cbr\u003e(Manages profiles)\"]\n    end\n\n    subgraph \"Terminal UI\"\n        TerminalInstance[\"TerminalInstance\u003cbr\u003e(Terminal UI + process)\"]\n        TerminalGroup[\"TerminalGroup\u003cbr\u003e(Group of instances)\"]\n        TerminalTabbedView[\"TerminalTabbedView\u003cbr\u003e(Panel UI)\"]\n        TerminalEditor[\"TerminalEditor\u003cbr\u003e(Editor UI)\"]\n    end\n\n    subgraph \"Process Management\"\n        TerminalProcessManager[\"TerminalProcessManager\u003cbr\u003e(Process lifecycle)\"]\n        PtyService[\"PtyService\u003cbr\u003e(PTY host)\"]\n        TerminalProcess[\"TerminalProcess\u003cbr\u003e(node-pty wrapper)\"]\n        ExtHostTerminal[\"ExtHostTerminal\u003cbr\u003e(Extension-owned terminals)\"]\n    end\n\n    subgraph \"Terminal Components\"\n        XtermTerminal[\"XtermTerminal\u003cbr\u003e(xterm.js wrapper)\"]\n        ShellIntegration[\"ShellIntegrationAddon\u003cbr\u003e(Shell features)\"]\n        TerminalCapabilities[\"TerminalCapabilityStore\u003cbr\u003e(Terminal features)\"]\n    end\n\n    TerminalService --\u003e TerminalInstanceService\n    TerminalService --\u003e TerminalGroupService\n    TerminalService --\u003e TerminalEditorService\n    \n    TerminalInstanceService --\u003e TerminalInstance\n    TerminalGroupService --\u003e TerminalGroup\n    TerminalEditorService --\u003e TerminalEditor\n    \n    TerminalGroup --\u003e TerminalInstance\n    TerminalTabbedView --\u003e TerminalGroup\n    \n    TerminalInstance --\u003e TerminalProcessManager\n    TerminalInstance --\u003e XtermTerminal\n    TerminalInstance --\u003e TerminalCapabilities\n    \n    XtermTerminal --\u003e ShellIntegration\n    \n    TerminalProcessManager --\u003e PtyService\n    PtyService --\u003e TerminalProcess\n    \n    TerminalService -.-\u003e ExtHostTerminal\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts:55-62](src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts:55-62)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:170-192](src/vs/workbench/contrib/terminal/browser/terminalService.ts:170-192)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-394](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-394)\n\n## Terminal Services\n\nThe terminal system is built around several key services that manage different aspects of the terminal functionality:\n\n```mermaid\nclassDiagram\n    class ITerminalService {\n        +instances: ITerminalInstance[]\n        +activeInstance: ITerminalInstance\n        +createTerminal(options): Promise~ITerminalInstance~\n        +setActiveInstance(instance): void\n        +focusActiveInstance(): Promise~void~\n        +safeDisposeTerminal(instance): Promise~void~\n    }\n    \n    class ITerminalInstanceService {\n        +createInstance(config, location): ITerminalInstance\n        +getBackend(remoteAuthority): Promise~ITerminalBackend~\n    }\n    \n    class ITerminalGroupService {\n        +instances: ITerminalInstance[]\n        +activeGroup: ITerminalGroup\n        +createGroup(instance): ITerminalGroup\n        +showPanel(focus): Promise~void~\n    }\n    \n    class ITerminalEditorService {\n        +instances: ITerminalInstance[]\n        +openEditor(instance, options): Promise~void~\n        +detachInstance(instance): void\n    }\n    \n    class ITerminalProfileService {\n        +availableProfiles: ITerminalProfile[]\n        +contributedProfiles: IExtensionTerminalProfile[]\n        +getDefaultProfile(): ITerminalProfile\n    }\n    \n    ITerminalService --\u003e ITerminalInstanceService: creates instances\n    ITerminalService --\u003e ITerminalGroupService: manages panel terminals\n    ITerminalService --\u003e ITerminalEditorService: manages editor terminals\n    ITerminalService --\u003e ITerminalProfileService: resolves profiles\n```\n\n### TerminalService\n\nThe `TerminalService` is the main entry point for terminal operations. It manages terminal instances across both the panel and editor locations, handles terminal creation, and maintains the active terminal state.\n\nKey responsibilities:\n- Creating terminal instances\n- Managing terminal lifecycle\n- Tracking active terminals\n- Handling terminal location (panel vs. editor)\n- Reconnecting to persistent terminals\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-91](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-91)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:243-280](src/vs/workbench/contrib/terminal/browser/terminalService.ts:243-280)\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:246-358](src/vs/workbench/contrib/terminal/browser/terminal.ts:246-358)\n\n### TerminalInstanceService\n\nThe `TerminalInstanceService` is responsible for creating terminal instances and managing terminal backends. It provides a layer of abstraction for creating terminals without directly depending on the terminal service.\n\nKey responsibilities:\n- Creating terminal instances\n- Managing terminal backends (local and remote)\n- Converting profile configurations to shell launch configs\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:61-98](src/vs/workbench/contrib/terminal/browser/terminal.ts:61-98)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstanceService.ts](src/vs/workbench/contrib/terminal/browser/terminalInstanceService.ts)\n\n### TerminalGroupService and TerminalEditorService\n\nThese services manage terminals in their respective locations:\n- `TerminalGroupService`: Manages terminals in the panel view\n- `TerminalEditorService`: Manages terminals in the editor area\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts:1-20](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts:1-20)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts:1-15](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts:1-15)\n\n## Terminal Instances\n\nThe `TerminalInstance` class is the core component that represents a single terminal in the UI. It manages both the UI aspects (xterm.js) and the process aspects (via `TerminalProcessManager`).\n\n```mermaid\ngraph TD\n    subgraph \"TerminalInstance\"\n        UI[\"UI Components\u003cbr\u003e(xterm.js)\"]\n        ProcessMgr[\"TerminalProcessManager\"]\n        Capabilities[\"CapabilityStore\"]\n        Contributions[\"Terminal Contributions\"]\n    end\n    \n    subgraph \"Process\"\n        LocalProcess[\"Local Process\u003cbr\u003e(node-pty)\"]\n        RemoteProcess[\"Remote Process\u003cbr\u003e(remote pty)\"]\n        ExtensionProcess[\"Extension Process\u003cbr\u003e(pseudoterminal)\"]\n    end\n    \n    subgraph \"UI Components\"\n        XtermTerminal[\"XtermTerminal\"]\n        WidgetManager[\"WidgetManager\"]\n        StatusList[\"StatusList\"]\n    end\n    \n    TerminalInstance --\u003e UI\n    TerminalInstance --\u003e ProcessMgr\n    TerminalInstance --\u003e Capabilities\n    TerminalInstance --\u003e Contributions\n    \n    ProcessMgr --\u003e LocalProcess\n    ProcessMgr --\u003e RemoteProcess\n    ProcessMgr --\u003e ExtensionProcess\n    \n    UI --\u003e XtermTerminal\n    UI --\u003e WidgetManager\n    UI --\u003e StatusList\n```\n\nKey properties and methods:\n- `xterm`: The xterm.js instance\n- `processManager`: Manages the terminal process\n- `capabilities`: Stores terminal capabilities (e.g., shell integration features)\n- `shellType`: The type of shell running in the terminal\n- `statusList`: List of status indicators for the terminal\n- `onData`, `onExit`, etc.: Events for terminal interactions\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-132](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-132)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:207-356](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:207-356)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-394](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-394)\n\n### Terminal Process Management\n\nThe `TerminalProcessManager` handles the lifecycle of the terminal process, including:\n- Creating and managing the process\n- Handling process data events\n- Managing process exit\n- Tracking process capabilities\n- Handling environment variables\n\n```mermaid\nsequenceDiagram\n    participant TS as TerminalService\n    participant TI as TerminalInstance\n    participant TPM as TerminalProcessManager\n    participant PTY as PtyService\n    participant Proc as TerminalProcess\n    \n    TS-\u003e\u003eTI: createTerminal()\n    TI-\u003e\u003eTPM: new TerminalProcessManager()\n    TPM-\u003e\u003eTPM: ptyProcessReady = createPtyProcessReadyPromise()\n    TI-\u003e\u003eTI: _createXterm()\n    TI-\u003e\u003eTPM: createProcess(shellLaunchConfig)\n    TPM-\u003e\u003ePTY: createProcess()\n    PTY-\u003e\u003eProc: spawn()\n    Proc--\u003e\u003ePTY: processReady\n    PTY--\u003e\u003eTPM: onProcessReady\n    TPM--\u003e\u003eTI: onProcessReady\n    \n    loop Process Lifetime\n        Proc--\u003e\u003ePTY: data event\n        PTY--\u003e\u003eTPM: onProcessData\n        TPM--\u003e\u003eTI: onProcessData\n        TI--\u003e\u003eTI: xterm.write()\n        \n        TI-\u003e\u003eTPM: write(data)\n        TPM-\u003e\u003ePTY: write(data)\n        PTY-\u003e\u003eProc: write(data)\n    end\n    \n    Proc--\u003e\u003ePTY: exit event\n    PTY--\u003e\u003eTPM: onProcessExit\n    TPM--\u003e\u003eTI: onProcessExit\n    TI--\u003e\u003eTS: onExit\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:70-132](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:70-132)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:510-547](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:510-547)\n- [src/vs/platform/terminal/node/ptyService.ts:71-116](src/vs/platform/terminal/node/ptyService.ts:71-116)\n\n### Terminal Capabilities\n\nThe terminal system uses a capability-based architecture to represent features that may or may not be available in a terminal instance. These capabilities are stored in a `TerminalCapabilityStore` and include:\n\n| Capability | Description |\n|------------|-------------|\n| `TerminalCapability.CwdDetection` | Detects the current working directory |\n| `TerminalCapability.CommandDetection` | Detects commands executed in the terminal |\n| `TerminalCapability.NaiveCwdDetection` | Fallback CWD detection when shell integration is unavailable |\n| `TerminalCapability.PartialCommandDetection` | Detects commands as they're being typed |\n| `TerminalCapability.DirectoryDetection` | Detects directories in the terminal output |\n| `TerminalCapability.BufferMarkDetection` | Detects marks in the terminal buffer |\n\nCapabilities are typically added through shell integration, which injects special sequences into the terminal that can be detected and interpreted by VS Code.\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:206](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:206)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:456-490](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:456-490)\n- [src/vs/platform/terminal/common/capabilities/capabilities.js](src/vs/platform/terminal/common/capabilities/capabilities.js)\n\n## Terminal UI Components\n\n### XtermTerminal\n\nThe `XtermTerminal` class wraps the xterm.js library and provides additional functionality specific to VS Code. It handles:\n- Terminal rendering\n- Input handling\n- Terminal addons (search, webgl, etc.)\n- Theme integration\n- Accessibility features\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts:53-69](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts:53-69)\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts:70-358](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts:70-358)\n\n### Terminal Groups and Tabs\n\nTerminals in the panel view are organized into groups and displayed with tabs:\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Panel View\"\n        TTV[\"TerminalTabbedView\"]\n        TabList[\"TerminalTabList\"]\n        SplitView[\"SplitView\"]\n    end\n    \n    subgraph \"Terminal Groups\"\n        Group1[\"TerminalGroup\"]\n        Group2[\"TerminalGroup\"]\n    end\n    \n    subgraph \"Terminal Instances\"\n        Instance1[\"TerminalInstance\"]\n        Instance2[\"TerminalInstance\"]\n        Instance3[\"TerminalInstance\"]\n        Instance4[\"TerminalInstance\"]\n    end\n    \n    TTV --\u003e TabList\n    TTV --\u003e SplitView\n    \n    SplitView --\u003e Group1\n    SplitView --\u003e Group2\n    \n    Group1 --\u003e Instance1\n    Group1 --\u003e Instance2\n    Group2 --\u003e Instance3\n    Group2 --\u003e Instance4\n    \n    TabList -.-\u003e Instance1\n    TabList -.-\u003e Instance2\n    TabList -.-\u003e Instance3\n    TabList -.-\u003e Instance4\n```\n\nThe `TerminalTabbedView` manages the overall layout of the terminal panel, including:\n- The tabs list on the side\n- The terminal groups in the main area\n- Split view management\n- Tab actions (new, split, kill)\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts:37-66](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts:37-66)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts:1-34](src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts:1-34)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroup.ts:1-9](src/vs/workbench/contrib/terminal/browser/terminalGroup.ts:1-9)\n\n### Terminal View\n\nThe `TerminalViewPane` is the main container for terminals in the panel view. It:\n- Creates and manages the `TerminalTabbedView`\n- Handles terminal creation and focus\n- Manages terminal actions and menus\n- Handles terminal welcome screen\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts:55-93](src/vs/workbench/contrib/terminal/browser/terminalView.ts:55-93)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts:94-114](src/vs/workbench/contrib/terminal/browser/terminalView.ts:94-114)\n\n### Terminal Editor\n\nThe `TerminalEditor` allows terminals to be displayed in the main editor area instead of the panel. It:\n- Integrates with the editor framework\n- Manages terminal instance lifecycle in the editor\n- Handles editor-specific actions and context\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalEditor.ts:1-13](src/vs/workbench/contrib/terminal/browser/terminalEditor.ts:1-13)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts:1-4](src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts:1-4)\n\n## Terminal Process Architecture\n\nThe terminal process architecture spans multiple processes to ensure security and stability:\n\n```mermaid\ngraph TD\n    subgraph \"Renderer Process\"\n        TerminalService[\"TerminalService\"]\n        TerminalInstance[\"TerminalInstance\"]\n        TerminalProcessManager[\"TerminalProcessManager\"]\n    end\n    \n    subgraph \"Extension Host Process\"\n        ExtHostTerminal[\"ExtHostTerminal\"]\n        ExtensionTerminal[\"Extension-owned Terminal\"]\n    end\n    \n    subgraph \"PTY Host Process\"\n        PtyService[\"PtyService\"]\n        TerminalProcess[\"TerminalProcess\"]\n    end\n    \n    subgraph \"Shell Process\"\n        Shell[\"Shell (bash, cmd, powershell, etc.)\"]\n    end\n    \n    TerminalService --\u003e TerminalInstance\n    TerminalInstance --\u003e TerminalProcessManager\n    TerminalProcessManager --\u003e|IPC| PtyService\n    PtyService --\u003e TerminalProcess\n    TerminalProcess --\u003e|spawn| Shell\n    \n    TerminalService -.-\u003e|Extension API| ExtHostTerminal\n    ExtHostTerminal -.-\u003e ExtensionTerminal\n    ExtensionTerminal -.-\u003e|Pseudoterminal API| TerminalProcessManager\n```\n\n### Local vs Remote Terminals\n\nVS Code supports both local and remote terminals:\n\n- **Local terminals**: Run on the same machine as VS Code\n- **Remote terminals**: Run on a remote machine (via SSH, WSL, Dev Containers)\n\nFor remote terminals, the PTY host process runs on the remote machine, while the UI remains in the local VS Code window.\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:282-339](src/vs/workbench/contrib/terminal/browser/terminalService.ts:282-339)\n- [src/vs/workbench/contrib/terminal/browser/remotePty.ts:1-7](src/vs/workbench/contrib/terminal/browser/remotePty.ts:1-7)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts:1-6](src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts:1-6)\n\n### Shell Integration\n\nShell integration enhances the terminal with additional features by injecting special sequences into the shell initialization scripts. This enables capabilities like:\n\n- Command detection\n- Current working directory tracking\n- Command navigation\n- Enhanced prompts\n\nThe shell integration is implemented through:\n1. Injecting shell-specific initialization scripts\n2. Detecting and interpreting special sequences in the terminal output\n3. Adding capabilities to the terminal instance based on detected features\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:519-538](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:519-538)\n- [src/vs/platform/terminal/common/xterm/shellIntegrationAddon.js](src/vs/platform/terminal/common/xterm/shellIntegrationAddon.js)\n\n## Terminal Configuration\n\nThe terminal system is highly configurable through user settings. Key configuration areas include:\n\n### Terminal Profiles\n\nTerminal profiles define the shells and configurations available to users. Profiles can be:\n- Default system profiles (automatically detected)\n- User-defined profiles (configured in settings)\n- Extension-contributed profiles\n\n```mermaid\ngraph TD\n    subgraph \"Profile Sources\"\n        DefaultProfiles[\"Default System Profiles\"]\n        UserProfiles[\"User-defined Profiles\"]\n        ExtensionProfiles[\"Extension-contributed Profiles\"]\n    end\n    \n    subgraph \"Profile Resolution\"\n        TerminalProfileService[\"TerminalProfileService\"]\n        TerminalProfileResolverService[\"TerminalProfileResolverService\"]\n    end\n    \n    subgraph \"Terminal Creation\"\n        ShellLaunchConfig[\"ShellLaunchConfig\"]\n        TerminalInstance[\"TerminalInstance\"]\n    end\n    \n    DefaultProfiles --\u003e TerminalProfileService\n    UserProfiles --\u003e TerminalProfileService\n    ExtensionProfiles --\u003e TerminalProfileService\n    \n    TerminalProfileService --\u003e TerminalProfileResolverService\n    TerminalProfileResolverService --\u003e ShellLaunchConfig\n    ShellLaunchConfig --\u003e TerminalInstance\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts:1](src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts:1)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts:1-10](src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts:1-10)\n- [src/vs/platform/terminal/node/terminalProfiles.ts:1-12](src/vs/platform/terminal/node/terminalProfiles.ts:1-12)\n\n### Terminal Settings\n\nThe terminal has numerous configuration options, including:\n\n| Setting Category | Examples |\n|------------------|----------|\n| Appearance | Font family, font size, line height, cursor style |\n| Behavior | Shell integration, scrollback, environment variables |\n| Keybindings | Custom key bindings, send sequences |\n| Location | Default location (panel or editor) |\n| Shell | Default shell, shell args, profiles |\n\nSources:\n- [src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts:43-48](src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts:43-48)\n- [src/vs/platform/terminal/common/terminal.ts:30-133](src/vs/platform/terminal/common/terminal.ts:30-133)\n- [src/vs/platform/terminal/common/terminalPlatformConfiguration.ts:1-4](src/vs/platform/terminal/common/terminalPlatformConfiguration.ts:1-4)\n\n## Extension API\n\nVS Code provides a rich API for extensions to interact with the terminal:\n\n```mermaid\ngraph TD\n    subgraph \"Extension API\"\n        Terminal[\"Terminal\"]\n        TerminalOptions[\"TerminalOptions\"]\n        ExtensionTerminalOptions[\"ExtensionTerminalOptions\"]\n        Pseudoterminal[\"Pseudoterminal\"]\n        TerminalProfile[\"TerminalProfile\"]\n    end\n    \n    subgraph \"VS Code Implementation\"\n        ExtHostTerminal[\"ExtHostTerminal\"]\n        MainThreadTerminal[\"MainThreadTerminalService\"]\n        TerminalService[\"TerminalService\"]\n    end\n    \n    Terminal --\u003e ExtHostTerminal\n    TerminalOptions --\u003e ExtHostTerminal\n    ExtensionTerminalOptions --\u003e ExtHostTerminal\n    Pseudoterminal --\u003e ExtHostTerminal\n    TerminalProfile --\u003e ExtHostTerminal\n    \n    ExtHostTerminal --\u003e|RPC| MainThreadTerminal\n    MainThreadTerminal --\u003e TerminalService\n```\n\nKey API features:\n- Creating and managing terminals\n- Sending text to terminals\n- Handling terminal events (creation, data, exit)\n- Creating custom terminal profiles\n- Implementing custom terminal backends (pseudoterminals)\n\nSources:\n- [src/vs/workbench/api/common/extHostTerminalService.ts:31-59](src/vs/workbench/api/common/extHostTerminalService.ts:31-59)\n- [src/vs/workbench/api/node/extHostTerminalService.ts:12-31](src/vs/workbench/api/node/extHostTerminalService.ts:12-31)\n- [src/vs/workbench/api/browser/mainThreadTerminalService.ts:1-17](src/vs/workbench/api/browser/mainThreadTerminalService.ts:1-17)\n\n## Terminal Actions and Commands\n\nThe terminal provides numerous actions and commands for user interaction:\n\n| Category | Examples |\n|----------|----------|\n| Creation | New terminal, split terminal, create with profile |\n| Navigation | Focus next/previous terminal, focus terminal tabs |\n| Editing | Copy, paste, clear, select all |\n| View | Move to editor, move to panel, resize |\n| Process | Kill terminal, run selected text, run active file |\n\nThese actions are registered and managed through the command system and are accessible via:\n- Command palette\n- Context menus\n- Keybindings\n- Terminal dropdown menu\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalActions.ts:161-286](src/vs/workbench/contrib/terminal/browser/terminalActions.ts:161-286)\n- [src/vs/workbench/contrib/terminal/browser/terminalActions.ts:310-363](src/vs/workbench/contrib/terminal/browser/terminalActions.ts:310-363)\n- [src/vs/workbench/contrib/terminal/common/terminal.ts:399-486](src/vs/workbench/contrib/terminal/common/terminal.ts:399-486)\n\n## Conclusion\n\nThe Integrated Terminal in VS Code is a complex system that spans multiple processes and components. It provides a rich terminal experience directly within the editor, with features like shell integration, multiple terminals, and customizable profiles. The architecture is designed to be extensible, allowing for both built-in functionality and extension-contributed features."])</script>
    <script>self.__next_f.push([1, "26:T7494,"])</script>
    <script>self.__next_f.push([1, "# Terminal Instance and Process Management\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/platform/terminal/common/terminal.ts](src/vs/platform/terminal/common/terminal.ts)\n- [src/vs/platform/terminal/common/terminalPlatformConfiguration.ts](src/vs/platform/terminal/common/terminalPlatformConfiguration.ts)\n- [src/vs/platform/terminal/node/ptyHostService.ts](src/vs/platform/terminal/node/ptyHostService.ts)\n- [src/vs/platform/terminal/node/ptyService.ts](src/vs/platform/terminal/node/ptyService.ts)\n- [src/vs/platform/terminal/node/terminalProcess.ts](src/vs/platform/terminal/node/terminalProcess.ts)\n- [src/vs/platform/terminal/node/terminalProfiles.ts](src/vs/platform/terminal/node/terminalProfiles.ts)\n- [src/vs/workbench/api/browser/mainThreadTerminalService.ts](src/vs/workbench/api/browser/mainThreadTerminalService.ts)\n- [src/vs/workbench/api/common/extHostTerminalService.ts](src/vs/workbench/api/common/extHostTerminalService.ts)\n- [src/vs/workbench/api/node/extHostTerminalService.ts](src/vs/workbench/api/node/extHostTerminalService.ts)\n- [src/vs/workbench/browser/parts/media/compositepart.css](src/vs/workbench/browser/parts/media/compositepart.css)\n- [src/vs/workbench/contrib/terminal/browser/media/terminal.css](src/vs/workbench/contrib/terminal/browser/media/terminal.css)\n- [src/vs/workbench/contrib/terminal/browser/media/xterm.css](src/vs/workbench/contrib/terminal/browser/media/xterm.css)\n- [src/vs/workbench/contrib/terminal/browser/remotePty.ts](src/vs/workbench/contrib/terminal/browser/remotePty.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts](src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts](src/vs/workbench/contrib/terminal/browser/terminal.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalActions.ts](src/vs/workbench/contrib/terminal/browser/terminalActions.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditor.ts](src/vs/workbench/contrib/terminal/browser/terminalEditor.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroup.ts](src/vs/workbench/contrib/terminal/browser/terminalGroup.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalIcon.ts](src/vs/workbench/contrib/terminal/browser/terminalIcon.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalMenus.ts](src/vs/workbench/contrib/terminal/browser/terminalMenus.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts](src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts](src/vs/workbench/contrib/terminal/browser/terminalService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts](src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts](src/vs/workbench/contrib/terminal/browser/terminalView.ts)\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts)\n- [src/vs/workbench/contrib/terminal/common/terminal.ts](src/vs/workbench/contrib/terminal/common/terminal.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts](src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts](src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalStrings.ts](src/vs/workbench/contrib/terminal/common/terminalStrings.ts)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts](src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts](src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts)\n- [src/vs/workbench/contrib/terminal/test/node/terminalProfiles.test.ts](src/vs/workbench/contrib/terminal/test/node/terminalProfiles.test.ts)\n\n\u003c/details\u003e\n\n\n\nThis document explains how VS Code manages terminal instances and processes, focusing on the lifecycle of terminal instances, their communication with shell processes, and the architecture that enables terminal functionality across different environments.\n\nFor information about terminal UI components and rendering, see [Terminal UI and Integration](#5.2).\n\n## Overview\n\nThe VS Code terminal system provides an integrated terminal experience within the editor. It manages terminal instances, handles process creation and communication, and provides a rich set of features for interacting with terminal processes.\n\nThe terminal architecture consists of several key components:\n\n1. **Terminal Instance**: Represents a terminal in the UI, manages the terminal's lifecycle, and handles user interactions\n2. **Process Manager**: Manages the communication with the underlying shell process\n3. **Terminal Service**: Coordinates terminal instances and provides APIs for terminal operations\n4. **Terminal Backend**: Handles the actual process creation and communication, which varies by environment (local, remote)\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:70-175](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:70-175)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193)\n\n## Terminal Architecture\n\n```mermaid\nflowchart TD\n    subgraph \"Terminal UI Layer\"\n        TerminalInstance[\"TerminalInstance\\n(UI representation)\"]\n        XtermTerminal[\"XtermTerminal\\n(xterm.js wrapper)\"]\n    end\n\n    subgraph \"Process Management Layer\"\n        TerminalProcessManager[\"TerminalProcessManager\\n(Process communication)\"]\n        TerminalBackend[\"ITerminalBackend\\n(Process creation)\"]\n    end\n\n    subgraph \"Service Layer\"\n        TerminalService[\"TerminalService\\n(Terminal coordination)\"]\n        TerminalInstanceService[\"TerminalInstanceService\\n(Instance creation)\"]\n        TerminalGroupService[\"TerminalGroupService\\n(Terminal groups)\"]\n        TerminalEditorService[\"TerminalEditorService\\n(Terminal editors)\"]\n    end\n\n    subgraph \"Process Layer\"\n        LocalPty[\"Local PTY Process\"]\n        RemotePty[\"Remote PTY Process\"]\n        ExtensionHostPty[\"Extension Host PTY\"]\n    end\n\n    TerminalInstance --\u003e XtermTerminal\n    TerminalInstance --\u003e TerminalProcessManager\n    TerminalProcessManager --\u003e TerminalBackend\n    TerminalBackend --\u003e LocalPty\n    TerminalBackend --\u003e RemotePty\n    TerminalBackend --\u003e ExtensionHostPty\n    \n    TerminalService --\u003e TerminalInstanceService\n    TerminalService --\u003e TerminalGroupService\n    TerminalService --\u003e TerminalEditorService\n    TerminalInstanceService --\u003e TerminalInstance\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:70-175](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:70-175)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193)\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:36-41](src/vs/workbench/contrib/terminal/browser/terminal.ts:36-41)\n\n## Terminal Instance Lifecycle\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant TerminalService\n    participant TerminalInstance\n    participant ProcessManager\n    participant Backend\n    participant ShellProcess\n\n    User-\u003e\u003eTerminalService: Create terminal\n    TerminalService-\u003e\u003eTerminalInstance: Create instance\n    TerminalInstance-\u003e\u003eProcessManager: Initialize\n    ProcessManager-\u003e\u003eBackend: Create process\n    Backend-\u003e\u003eShellProcess: Launch shell\n    ShellProcess--\u003e\u003eProcessManager: Process ready\n    ProcessManager--\u003e\u003eTerminalInstance: Process ready\n    TerminalInstance--\u003e\u003eTerminalService: Instance ready\n    TerminalService--\u003e\u003eUser: Terminal created\n\n    User-\u003e\u003eTerminalInstance: Input (keystrokes)\n    TerminalInstance-\u003e\u003eProcessManager: Send text\n    ProcessManager-\u003e\u003eShellProcess: Write data\n    ShellProcess--\u003e\u003eProcessManager: Output data\n    ProcessManager--\u003e\u003eTerminalInstance: Process data\n    TerminalInstance--\u003e\u003eUser: Display output\n\n    User-\u003e\u003eTerminalInstance: Close terminal\n    TerminalInstance-\u003e\u003eProcessManager: Dispose\n    ProcessManager-\u003e\u003eShellProcess: Kill process\n    ShellProcess--\u003e\u003eProcessManager: Process exit\n    ProcessManager--\u003e\u003eTerminalInstance: Exit event\n    TerminalInstance--\u003e\u003eTerminalService: Dispose instance\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-648](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-648)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:134-175](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:134-175)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:243-280](src/vs/workbench/contrib/terminal/browser/terminalService.ts:243-280)\n\n## Terminal Instance\n\nThe `TerminalInstance` class is the central component that represents a terminal in VS Code. It manages the terminal's lifecycle, handles user interactions, and coordinates with the process manager to communicate with the shell process.\n\n### Key Properties\n\n| Property | Type | Description |\n|----------|------|-------------|\n| `_id` | `number` | Unique identifier for the terminal instance |\n| `_processManager` | `ITerminalProcessManager` | Manages communication with the shell process |\n| `xterm` | `XtermTerminal` | The xterm.js instance for rendering the terminal |\n| `_shellLaunchConfig` | `IShellLaunchConfig` | Configuration for launching the shell |\n| `_cols` / `_rows` | `number` | Terminal dimensions |\n| `capabilities` | `TerminalCapabilityStore` | Store for terminal capabilities (e.g., shell integration) |\n\n### Key Methods\n\n| Method | Description |\n|--------|-------------|\n| `create` | Creates the terminal instance and initializes the process |\n| `createProcess` | Creates the shell process using the process manager |\n| `setVisible` | Sets the visibility of the terminal |\n| `sendText` | Sends text to the terminal process |\n| `dispose` | Disposes the terminal instance and kills the process |\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649)\n\n## Process Management\n\nThe `TerminalProcessManager` class is responsible for managing the communication with the shell process. It handles process creation, data transmission, and process termination.\n\n### Process States\n\nThe terminal process can be in one of the following states:\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Uninitialized\n    Uninitialized --\u003e Launching: createProcess\n    Launching --\u003e Running: Process ready\n    Launching --\u003e KilledDuringLaunch: Process exit during launch\n    Running --\u003e KilledByUser: User kills process\n    Running --\u003e KilledByProcess: Process exits itself\n    KilledDuringLaunch --\u003e [*]\n    KilledByUser --\u003e [*]\n    KilledByProcess --\u003e [*]\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/common/terminal.ts:313-330](src/vs/workbench/contrib/terminal/common/terminal.ts:313-330)\n\n### Process Creation\n\nThe process creation flow involves several steps:\n\n1. The `TerminalInstance` calls `createProcess` on the `TerminalProcessManager`\n2. The `TerminalProcessManager` resolves the shell environment and configuration\n3. The `TerminalProcessManager` requests the backend to create the process\n4. The backend creates the process and returns a process object\n5. The `TerminalProcessManager` sets up event listeners for process data and exit events\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:296-395](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:296-395)\n\n### Data Flow\n\n```mermaid\nflowchart LR\n    User[User Input] --\u003e|keystrokes| TerminalInstance\n    TerminalInstance --\u003e|sendText| ProcessManager\n    ProcessManager --\u003e|write| ShellProcess\n    ShellProcess --\u003e|data event| ProcessManager\n    ProcessManager --\u003e|onProcessData| TerminalInstance\n    TerminalInstance --\u003e|write to xterm| Display[Terminal Display]\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:1000-1050](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:1000-1050)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:296-395](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts:296-395)\n\n## Terminal Service Architecture\n\nThe terminal service architecture consists of several services that work together to provide terminal functionality:\n\n```mermaid\nclassDiagram\n    class ITerminalService {\n        +instances: ITerminalInstance[]\n        +activeInstance: ITerminalInstance\n        +createTerminal(options): Promise\u003cITerminalInstance\u003e\n        +getActiveOrCreateInstance(): Promise\u003cITerminalInstance\u003e\n        +setActiveInstance(instance): void\n        +onDidCreateInstance: Event\u003cITerminalInstance\u003e\n        +onDidDisposeInstance: Event\u003cITerminalInstance\u003e\n    }\n    \n    class TerminalService {\n        -_terminalGroupService: ITerminalGroupService\n        -_terminalEditorService: ITerminalEditorService\n        -_terminalInstanceService: ITerminalInstanceService\n        -_primaryBackend: ITerminalBackend\n        +createTerminal(options): Promise\u003cITerminalInstance\u003e\n        +setActiveInstance(instance): void\n    }\n    \n    class ITerminalInstanceService {\n        +createInstance(config, location): ITerminalInstance\n        +getBackend(authority): Promise\u003cITerminalBackend\u003e\n    }\n    \n    class ITerminalGroupService {\n        +instances: ITerminalInstance[]\n        +activeGroup: ITerminalGroup\n        +createGroup(instance): ITerminalGroup\n        +showPanel(focus): Promise\u003cvoid\u003e\n    }\n    \n    class ITerminalEditorService {\n        +instances: ITerminalInstance[]\n        +openEditor(instance, options): Promise\u003cvoid\u003e\n        +detachInstance(instance): void\n    }\n    \n    ITerminalService \u003c|-- TerminalService\n    TerminalService --\u003e ITerminalInstanceService\n    TerminalService --\u003e ITerminalGroupService\n    TerminalService --\u003e ITerminalEditorService\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:246-358](src/vs/workbench/contrib/terminal/browser/terminal.ts:246-358)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193)\n\n### Terminal Service\n\nThe `TerminalService` is the main entry point for terminal operations. It coordinates between different terminal-related services and provides APIs for creating and managing terminal instances.\n\nKey responsibilities:\n- Creating terminal instances\n- Managing active terminal instances\n- Handling terminal instance events\n- Coordinating between terminal groups and editors\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-193)\n\n### Terminal Instance Service\n\nThe `TerminalInstanceService` is responsible for creating terminal instances and managing terminal backends.\n\nKey responsibilities:\n- Creating terminal instances\n- Providing access to terminal backends\n- Converting shell launch configurations to terminal instances\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:61-98](src/vs/workbench/contrib/terminal/browser/terminal.ts:61-98)\n\n### Terminal Group Service\n\nThe `TerminalGroupService` manages terminal groups in the terminal panel view.\n\nKey responsibilities:\n- Managing terminal groups\n- Handling terminal panel visibility\n- Providing access to terminal instances in the panel\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts:1-70](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts:1-70)\n\n### Terminal Editor Service\n\nThe `TerminalEditorService` manages terminal instances in editor tabs.\n\nKey responsibilities:\n- Opening terminals in editor tabs\n- Managing terminal editor inputs\n- Providing access to terminal instances in editors\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts:1-70](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts:1-70)\n\n## Terminal Backends\n\nTerminal backends are responsible for creating and communicating with terminal processes. VS Code supports different backends depending on the environment:\n\n```mermaid\nflowchart TD\n    TerminalService --\u003e TerminalBackend\n    \n    subgraph \"Terminal Backends\"\n        TerminalBackend[\"ITerminalBackend\\n(Interface)\"]\n        LocalPtyBackend[\"LocalPtyBackend\\n(Local processes)\"]\n        RemotePtyBackend[\"RemotePtyBackend\\n(Remote processes)\"]\n        ExtensionTerminalBackend[\"ExtensionTerminalBackend\\n(Extension-provided terminals)\"]\n    end\n    \n    TerminalBackend --\u003e LocalPtyBackend\n    TerminalBackend --\u003e RemotePtyBackend\n    TerminalBackend --\u003e ExtensionTerminalBackend\n    \n    LocalPtyBackend --\u003e PtyService[\"PtyService\\n(Node.js process)\"]\n    RemotePtyBackend --\u003e RemotePtyService[\"Remote PtyService\\n(Remote process)\"]\n    ExtensionTerminalBackend --\u003e ExtensionHost[\"Extension Host\\n(Extension process)\"]\n    \n    PtyService --\u003e NodePty[\"node-pty\\n(Native PTY implementation)\"]\n    RemotePtyService --\u003e RemoteNodePty[\"Remote node-pty\"]\n    ExtensionHost --\u003e CustomPty[\"Custom Pseudoterminal\\n(Extension-provided)\"]\n```\n\nSources:\n- [src/vs/platform/terminal/node/ptyService.ts:71-116](src/vs/platform/terminal/node/ptyService.ts:71-116)\n- [src/vs/workbench/contrib/terminal/browser/remotePty.ts:1-20](src/vs/workbench/contrib/terminal/browser/remotePty.ts:1-20)\n- [src/vs/workbench/api/common/extHostTerminalService.ts:31-60](src/vs/workbench/api/common/extHostTerminalService.ts:31-60)\n\n### Local PTY Backend\n\nThe local PTY backend creates and manages terminal processes on the local machine. It uses the `node-pty` library to create pseudoterminal processes.\n\nKey components:\n- `PtyService`: Manages PTY processes\n- `TerminalProcess`: Represents a terminal process\n- `node-pty`: Native implementation of pseudoterminals\n\nSources:\n- [src/vs/platform/terminal/node/ptyService.ts:71-116](src/vs/platform/terminal/node/ptyService.ts:71-116)\n- [src/vs/platform/terminal/node/terminalProcess.ts:70-100](src/vs/platform/terminal/node/terminalProcess.ts:70-100)\n\n### Remote PTY Backend\n\nThe remote PTY backend creates and manages terminal processes on a remote machine. It communicates with a remote PTY service over the remote connection.\n\nKey components:\n- `RemotePtyBackend`: Manages remote PTY processes\n- `RemotePtyService`: Remote service for creating and managing PTY processes\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/remotePty.ts:1-20](src/vs/workbench/contrib/terminal/browser/remotePty.ts:1-20)\n\n### Extension Terminal Backend\n\nThe extension terminal backend allows extensions to provide custom terminal implementations. It communicates with the extension host to create and manage extension-provided terminals.\n\nKey components:\n- `ExtHostTerminalService`: Manages extension-provided terminals\n- `TerminalProcessExtHostProxy`: Proxies communication between the workbench and extension host\n\nSources:\n- [src/vs/workbench/api/common/extHostTerminalService.ts:31-60](src/vs/workbench/api/common/extHostTerminalService.ts:31-60)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts:1-20](src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts:1-20)\n\n## Shell Integration\n\nVS Code provides shell integration features that enhance the terminal experience. Shell integration is implemented through a combination of shell scripts and terminal capabilities.\n\n```mermaid\nflowchart TD\n    TerminalInstance --\u003e ShellIntegration[\"Shell Integration\"]\n    \n    subgraph \"Shell Integration\"\n        ShellIntegrationAddon[\"ShellIntegrationAddon\\n(xterm.js addon)\"]\n        ShellIntegrationScripts[\"Shell Integration Scripts\\n(bash, zsh, pwsh)\"]\n        TerminalCapabilities[\"Terminal Capabilities\"]\n    end\n    \n    ShellIntegration --\u003e ShellIntegrationAddon\n    ShellIntegration --\u003e ShellIntegrationScripts\n    ShellIntegration --\u003e TerminalCapabilities\n    \n    subgraph \"Terminal Capabilities\"\n        CommandDetection[\"CommandDetectionCapability\\n(Detect commands)\"]\n        CwdDetection[\"CwdDetectionCapability\\n(Detect current directory)\"]\n        NaviagationMarkers[\"NavigationMarkersCapability\\n(Command markers)\"]\n    end\n    \n    TerminalCapabilities --\u003e CommandDetection\n    TerminalCapabilities --\u003e CwdDetection\n    TerminalCapabilities --\u003e NaviagationMarkers\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:456-490](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:456-490)\n- [src/vs/platform/terminal/common/capabilities/capabilities.ts:1-50](src/vs/platform/terminal/common/capabilities/capabilities.ts:1-50)\n\n### Shell Integration Process\n\n1. When a terminal is created, VS Code injects shell integration scripts into the shell's startup sequence\n2. The shell integration scripts emit special escape sequences to signal events like command execution, current directory changes, etc.\n3. The `ShellIntegrationAddon` in the terminal instance parses these escape sequences and updates terminal capabilities\n4. Terminal capabilities provide APIs for features like command detection, current directory tracking, and command navigation\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:456-490](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:456-490)\n\n### Terminal Capabilities\n\nTerminal capabilities provide APIs for accessing shell integration features:\n\n| Capability | Description |\n|------------|-------------|\n| `CommandDetectionCapability` | Detects command execution and output |\n| `CwdDetectionCapability` | Tracks the current working directory |\n| `NavigationMarkersCapability` | Provides markers for navigating between commands |\n\nSources:\n- [src/vs/platform/terminal/common/capabilities/capabilities.ts:1-50](src/vs/platform/terminal/common/capabilities/capabilities.ts:1-50)\n\n## Terminal Persistence\n\nVS Code supports terminal persistence, allowing terminal sessions to be restored after VS Code is restarted.\n\n```mermaid\nsequenceDiagram\n    participant VS as VS Code\n    participant TS as TerminalService\n    participant PTY as PtyService\n    participant Process as Terminal Process\n\n    Note over VS,Process: VS Code Shutdown\n    VS-\u003e\u003eTS: onWillShutdown\n    TS-\u003e\u003ePTY: getTerminalLayoutInfo\n    PTY--\u003e\u003eTS: Terminal layout info\n    TS-\u003e\u003eVS: Store terminal layout\n\n    Note over VS,Process: VS Code Restart\n    VS-\u003e\u003eTS: Initialize\n    TS-\u003e\u003ePTY: reconnectToTerminals\n    PTY-\u003e\u003eProcess: Reconnect to existing processes\n    Process--\u003e\u003ePTY: Process data\n    PTY--\u003e\u003eTS: Terminal layout info\n    TS-\u003e\u003eVS: Recreate terminal instances\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:234-242](src/vs/workbench/contrib/terminal/browser/terminalService.ts:234-242)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:442-483](src/vs/workbench/contrib/terminal/browser/terminalService.ts:442-483)\n\n### Persistence Process\n\n1. When VS Code is shutting down, the terminal service stores the terminal layout information\n2. The terminal layout includes information about terminal groups, instances, and their associated processes\n3. When VS Code restarts, the terminal service reconnects to existing terminal processes\n4. The terminal service recreates terminal instances based on the stored layout information\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:234-242](src/vs/workbench/contrib/terminal/browser/terminalService.ts:234-242)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:442-483](src/vs/workbench/contrib/terminal/browser/terminalService.ts:442-483)\n\n## Terminal Locations\n\nVS Code supports different terminal locations:\n\n```mermaid\nflowchart TD\n    TerminalService --\u003e TerminalLocation\n    \n    subgraph \"Terminal Locations\"\n        TerminalLocation[\"TerminalLocation\\n(Enum)\"]\n        Panel[\"Panel\\n(Terminal view)\"]\n        Editor[\"Editor\\n(Terminal editor)\"]\n    end\n    \n    TerminalLocation --\u003e Panel\n    TerminalLocation --\u003e Editor\n    \n    Panel --\u003e TerminalGroupService\n    Editor --\u003e TerminalEditorService\n```\n\nSources:\n- [src/vs/platform/terminal/common/terminal.ts:207-216](src/vs/platform/terminal/common/terminal.ts:207-216)\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:246-358](src/vs/workbench/contrib/terminal/browser/terminal.ts:246-358)\n\n### Panel Terminals\n\nPanel terminals are displayed in the terminal panel view. They are managed by the `TerminalGroupService` and can be organized into groups and split panes.\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts:1-70](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts:1-70)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts:55-115](src/vs/workbench/contrib/terminal/browser/terminalView.ts:55-115)\n\n### Editor Terminals\n\nEditor terminals are displayed in editor tabs. They are managed by the `TerminalEditorService` and behave like regular editor tabs.\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts:1-70](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts:1-70)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditor.ts:1-70](src/vs/workbench/contrib/terminal/browser/terminalEditor.ts:1-70)\n\n## Terminal Configuration\n\nVS Code provides extensive configuration options for terminals. These configurations are managed by the `TerminalConfigurationService`.\n\n```mermaid\nflowchart TD\n    ConfigurationService[\"ConfigurationService\"] --\u003e TerminalConfigurationService\n    TerminalConfigurationService --\u003e TerminalProfiles[\"Terminal Profiles\"]\n    TerminalConfigurationService --\u003e ShellIntegration[\"Shell Integration Settings\"]\n    TerminalConfigurationService --\u003e TerminalAppearance[\"Terminal Appearance Settings\"]\n    TerminalConfigurationService --\u003e TerminalBehavior[\"Terminal Behavior Settings\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts:43-251](src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts:43-251)\n- [src/vs/platform/terminal/common/terminalPlatformConfiguration.ts:1-50](src/vs/platform/terminal/common/terminalPlatformConfiguration.ts:1-50)\n\n### Terminal Profiles\n\nTerminal profiles define the shell and configuration used for creating terminals. Profiles can be defined in settings or detected automatically.\n\nSources:\n- [src/vs/platform/terminal/node/terminalProfiles.ts:1-50](src/vs/platform/terminal/node/terminalProfiles.ts:1-50)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts:1-50](src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts:1-50)\n\n### Profile Resolution\n\nWhen creating a terminal, VS Code resolves the terminal profile based on the following process:\n\n1. If a specific profile is requested, use that profile\n2. If no profile is specified, use the default profile for the current platform\n3. If no default profile is configured, detect the default shell for the platform\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts:1-50](src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts:1-50)\n\n## Conclusion\n\nThe terminal instance and process management system in VS Code provides a robust foundation for the integrated terminal experience. It handles the lifecycle of terminal instances, manages communication with shell processes, and provides a rich set of features for interacting with terminals.\n\nKey components include:\n- `TerminalInstance`: Represents a terminal in the UI\n- `TerminalProcessManager`: Manages communication with the shell process\n- `TerminalService`: Coordinates terminal instances and provides APIs for terminal operations\n- Terminal backends: Handle process creation and communication in different environments\n\nThis architecture enables VS Code to provide a seamless terminal experience across different platforms and environments, with support for features like shell integration, terminal persistence, and multiple terminal locations."])</script>
    <script>self.__next_f.push([1, "27:T7bb2,"])</script>
    <script>self.__next_f.push([1, "# Terminal UI and Integration\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/platform/terminal/common/terminal.ts](src/vs/platform/terminal/common/terminal.ts)\n- [src/vs/platform/terminal/common/terminalPlatformConfiguration.ts](src/vs/platform/terminal/common/terminalPlatformConfiguration.ts)\n- [src/vs/platform/terminal/node/ptyHostService.ts](src/vs/platform/terminal/node/ptyHostService.ts)\n- [src/vs/platform/terminal/node/ptyService.ts](src/vs/platform/terminal/node/ptyService.ts)\n- [src/vs/platform/terminal/node/terminalProcess.ts](src/vs/platform/terminal/node/terminalProcess.ts)\n- [src/vs/platform/terminal/node/terminalProfiles.ts](src/vs/platform/terminal/node/terminalProfiles.ts)\n- [src/vs/workbench/api/browser/mainThreadTerminalService.ts](src/vs/workbench/api/browser/mainThreadTerminalService.ts)\n- [src/vs/workbench/api/common/extHostTerminalService.ts](src/vs/workbench/api/common/extHostTerminalService.ts)\n- [src/vs/workbench/api/node/extHostTerminalService.ts](src/vs/workbench/api/node/extHostTerminalService.ts)\n- [src/vs/workbench/browser/parts/media/compositepart.css](src/vs/workbench/browser/parts/media/compositepart.css)\n- [src/vs/workbench/contrib/terminal/browser/media/terminal.css](src/vs/workbench/contrib/terminal/browser/media/terminal.css)\n- [src/vs/workbench/contrib/terminal/browser/media/xterm.css](src/vs/workbench/contrib/terminal/browser/media/xterm.css)\n- [src/vs/workbench/contrib/terminal/browser/remotePty.ts](src/vs/workbench/contrib/terminal/browser/remotePty.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts](src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts](src/vs/workbench/contrib/terminal/browser/terminal.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalActions.ts](src/vs/workbench/contrib/terminal/browser/terminalActions.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditor.ts](src/vs/workbench/contrib/terminal/browser/terminalEditor.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroup.ts](src/vs/workbench/contrib/terminal/browser/terminalGroup.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalIcon.ts](src/vs/workbench/contrib/terminal/browser/terminalIcon.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalMenus.ts](src/vs/workbench/contrib/terminal/browser/terminalMenus.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts](src/vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts](src/vs/workbench/contrib/terminal/browser/terminalProcessManager.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileQuickpick.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileResolverService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts](src/vs/workbench/contrib/terminal/browser/terminalProfileService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts](src/vs/workbench/contrib/terminal/browser/terminalService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts](src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts](src/vs/workbench/contrib/terminal/browser/terminalView.ts)\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts)\n- [src/vs/workbench/contrib/terminal/common/terminal.ts](src/vs/workbench/contrib/terminal/common/terminal.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts](src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts](src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts)\n- [src/vs/workbench/contrib/terminal/common/terminalStrings.ts](src/vs/workbench/contrib/terminal/common/terminalStrings.ts)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts](src/vs/workbench/contrib/terminal/electron-sandbox/localPty.ts)\n- [src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts](src/vs/workbench/contrib/terminal/electron-sandbox/terminalProfileResolverService.ts)\n- [src/vs/workbench/contrib/terminal/test/node/terminalProfiles.test.ts](src/vs/workbench/contrib/terminal/test/node/terminalProfiles.test.ts)\n\n\u003c/details\u003e\n\n\n\nThis document explains how the VS Code terminal UI is implemented and integrated with the rest of the editor. It covers the terminal's visual components, rendering, and how it interacts with the VS Code workbench. For information about terminal process management and shell integration, see [Terminal Instance and Process Management](#5.1).\n\n## Overview\n\nThe VS Code terminal provides an integrated terminal experience within the editor. The terminal UI can be displayed in two primary locations:\n- The terminal panel (at the bottom of the workbench)\n- Terminal editors (in the editor area)\n\nThe terminal UI is built on top of the [xterm.js](https://xtermjs.org/) library, which provides the core terminal emulation functionality. VS Code extends this with additional features like tabs, split views, and integration with the editor's theming and command systems.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal UI Components\"\n        TerminalView[\"TerminalViewPane\"]\n        TerminalTabbedView[\"TerminalTabbedView\"]\n        TerminalGroup[\"TerminalGroup\"]\n        TerminalInstance[\"TerminalInstance\"]\n        XtermTerminal[\"XtermTerminal\"]\n        TerminalEditor[\"TerminalEditor\"]\n    end\n\n    subgraph \"Terminal Services\"\n        TerminalService[\"ITerminalService\"]\n        TerminalGroupService[\"ITerminalGroupService\"]\n        TerminalEditorService[\"ITerminalEditorService\"]\n        TerminalInstanceService[\"ITerminalInstanceService\"]\n        TerminalProfileService[\"ITerminalProfileService\"]\n    end\n\n    subgraph \"Process Management\"\n        TerminalProcessManager[\"TerminalProcessManager\"]\n        PtyService[\"IPtyService\"]\n        TerminalBackend[\"ITerminalBackend\"]\n    end\n\n    TerminalView --\u003e TerminalTabbedView\n    TerminalTabbedView --\u003e TerminalGroup\n    TerminalGroup --\u003e TerminalInstance\n    TerminalInstance --\u003e XtermTerminal\n    TerminalInstance --\u003e TerminalProcessManager\n    \n    TerminalEditor --\u003e TerminalInstance\n\n    TerminalService --\u003e TerminalGroupService\n    TerminalService --\u003e TerminalEditorService\n    TerminalService --\u003e TerminalInstanceService\n    \n    TerminalProcessManager --\u003e TerminalBackend\n    TerminalBackend --\u003e PtyService\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts](src/vs/workbench/contrib/terminal/browser/terminal.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts](src/vs/workbench/contrib/terminal/browser/terminalService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts](src/vs/workbench/contrib/terminal/browser/terminalView.ts)\n\n## Terminal UI Architecture\n\nThe terminal UI is composed of several key components that work together to provide the integrated terminal experience.\n\n```mermaid\nclassDiagram\n    class ITerminalInstance {\n        +xterm: XtermTerminal\n        +processManager: ITerminalProcessManager\n        +capabilities: ITerminalCapabilityStore\n        +statusList: ITerminalStatusList\n        +focus(): void\n        +sendText(): void\n        +layout(): void\n    }\n    \n    class TerminalInstance {\n        -_wrapperElement: HTMLElement\n        -_xtermReadyPromise: Promise\n        -_processManager: ITerminalProcessManager\n        -_configurationService: ITerminalConfigurationService\n        +create(): void\n        +layout(): void\n        +setVisible(): void\n    }\n    \n    class XtermTerminal {\n        -_raw: RawXtermTerminal\n        -_element: HTMLElement\n        +raw: RawXtermTerminal\n        +attachToElement(): void\n        +focus(): void\n        +scrollToBottom(): void\n    }\n    \n    class TerminalGroup {\n        +terminalInstances: ITerminalInstance[]\n        +activeInstance: ITerminalInstance\n        +addInstance(): void\n        +removeInstance(): void\n        +split(): ITerminalInstance\n    }\n    \n    class TerminalViewPane {\n        -_terminalTabbedView: TerminalTabbedView\n        +createTerminal(): void\n        +layout(): void\n    }\n    \n    class TerminalTabbedView {\n        -_splitView: SplitView\n        -_tabList: TerminalTabList\n        -_terminalContainer: HTMLElement\n        +layout(): void\n    }\n    \n    ITerminalInstance \u003c|.. TerminalInstance\n    TerminalInstance --\u003e XtermTerminal\n    TerminalGroup --\u003e ITerminalInstance\n    TerminalViewPane --\u003e TerminalTabbedView\n    TerminalTabbedView --\u003e TerminalGroup\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts)\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroup.ts](src/vs/workbench/contrib/terminal/browser/terminalGroup.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts](src/vs/workbench/contrib/terminal/browser/terminalView.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts)\n\n## Terminal Services\n\nThe terminal functionality is exposed through several services that handle different aspects of terminal management:\n\n```mermaid\nclassDiagram\n    class ITerminalService {\n        +instances: ITerminalInstance[]\n        +activeInstance: ITerminalInstance\n        +createTerminal(): ITerminalInstance\n        +showPanel(): void\n        +setActiveInstance(): void\n    }\n    \n    class ITerminalGroupService {\n        +instances: ITerminalInstance[]\n        +activeGroup: ITerminalGroup\n        +groups: ITerminalGroup[]\n        +createGroup(): ITerminalGroup\n        +showPanel(): void\n    }\n    \n    class ITerminalEditorService {\n        +instances: ITerminalInstance[]\n        +openEditor(): void\n        +detachInstance(): void\n    }\n    \n    class ITerminalInstanceService {\n        +createInstance(): ITerminalInstance\n        +getBackend(): ITerminalBackend\n    }\n    \n    class ITerminalProfileService {\n        +availableProfiles: ITerminalProfile[]\n        +contributedProfiles: IExtensionTerminalProfile[]\n        +getDefaultProfile(): ITerminalProfile\n    }\n    \n    ITerminalService --\u003e ITerminalGroupService\n    ITerminalService --\u003e ITerminalEditorService\n    ITerminalService --\u003e ITerminalInstanceService\n    ITerminalService --\u003e ITerminalProfileService\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.ts:36-358](src/vs/workbench/contrib/terminal/browser/terminal.ts:36-358)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-339](src/vs/workbench/contrib/terminal/browser/terminalService.ts:62-339)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts](src/vs/workbench/contrib/terminal/browser/terminalGroupService.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorService.ts)\n\n## Terminal Instance\n\nThe `TerminalInstance` class is the core component that represents a single terminal instance. It manages the xterm.js instance, process communication, and UI integration.\n\n```mermaid\ngraph TD\n    subgraph \"TerminalInstance\"\n        XtermInstance[\"xterm: XtermTerminal\"]\n        ProcessManager[\"_processManager: TerminalProcessManager\"]\n        WrapperElement[\"_wrapperElement: HTMLElement\"]\n        Capabilities[\"capabilities: TerminalCapabilityStore\"]\n        StatusList[\"statusList: TerminalStatusList\"]\n    end\n\n    subgraph \"Events\"\n        OnData[\"onData: Event\u003cstring\u003e\"]\n        OnTitleChanged[\"onTitleChanged: Event\u003cITerminalInstance\u003e\"]\n        OnProcessExit[\"onProcessExit: Event\u003cnumber\u003e\"]\n        OnFocus[\"onDidFocus: Event\u003cITerminalInstance\u003e\"]\n        OnBlur[\"onDidBlur: Event\u003cITerminalInstance\u003e\"]\n        OnDimensionsChanged[\"onDimensionsChanged: Event\u003cvoid\u003e\"]\n    end\n\n    subgraph \"Methods\"\n        Create[\"create()\"]\n        Layout[\"layout()\"]\n        SetVisible[\"setVisible(visible: boolean)\"]\n        SendText[\"sendText(text: string)\"]\n        Focus[\"focus()\"]\n        Dispose[\"dispose()\"]\n    end\n\n    XtermInstance --\u003e OnData\n    ProcessManager --\u003e OnProcessExit\n    TerminalInstance --\u003e XtermInstance\n    TerminalInstance --\u003e ProcessManager\n    TerminalInstance --\u003e WrapperElement\n    TerminalInstance --\u003e Capabilities\n    TerminalInstance --\u003e StatusList\n    TerminalInstance --\u003e Create\n    TerminalInstance --\u003e Layout\n    TerminalInstance --\u003e SetVisible\n    TerminalInstance --\u003e SendText\n    TerminalInstance --\u003e Focus\n    TerminalInstance --\u003e Dispose\n    TerminalInstance --\u003e OnTitleChanged\n    TerminalInstance --\u003e OnFocus\n    TerminalInstance --\u003e OnBlur\n    TerminalInstance --\u003e OnDimensionsChanged\n```\n\nKey responsibilities of `TerminalInstance`:\n- Managing the lifecycle of the terminal (creation, resizing, visibility)\n- Handling user input and output\n- Managing the terminal's appearance (title, icon, color)\n- Integrating with the workbench (focus, blur, visibility)\n- Communicating with the terminal process\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:127-649)\n\n## XtermTerminal\n\nThe `XtermTerminal` class wraps the xterm.js library and provides additional functionality specific to VS Code.\n\n```mermaid\ngraph TD\n    subgraph \"XtermTerminal\"\n        RawXterm[\"_raw: RawXtermTerminal\"]\n        Element[\"_element: HTMLElement\"]\n        Theme[\"_theme: ITheme\"]\n        Addons[\"Addons\"]\n    end\n\n    subgraph \"Addons\"\n        SearchAddon[\"SearchAddon\"]\n        WebglAddon[\"WebglAddon\"]\n        Unicode11Addon[\"Unicode11Addon\"]\n        LigaturesAddon[\"LigaturesAddon\"]\n        SerializeAddon[\"SerializeAddon\"]\n        ImageAddon[\"ImageAddon\"]\n        DecorationAddon[\"DecorationAddon\"]\n        MarkNavigationAddon[\"MarkNavigationAddon\"]\n        ShellIntegrationAddon[\"ShellIntegrationAddon\"]\n    end\n\n    subgraph \"Methods\"\n        AttachToElement[\"attachToElement(container)\"]\n        Focus[\"focus()\"]\n        ScrollToBottom[\"scrollToBottom()\"]\n        ClearSelection[\"clearSelection()\"]\n        SelectAll[\"selectAll()\"]\n        FindNext[\"findNext(term)\"]\n        FindPrevious[\"findPrevious(term)\"]\n    end\n\n    XtermTerminal --\u003e RawXterm\n    XtermTerminal --\u003e Element\n    XtermTerminal --\u003e Theme\n    XtermTerminal --\u003e Addons\n    XtermTerminal --\u003e AttachToElement\n    XtermTerminal --\u003e Focus\n    XtermTerminal --\u003e ScrollToBottom\n    XtermTerminal --\u003e ClearSelection\n    XtermTerminal --\u003e SelectAll\n    XtermTerminal --\u003e FindNext\n    XtermTerminal --\u003e FindPrevious\n```\n\nKey responsibilities of `XtermTerminal`:\n- Rendering the terminal content\n- Handling user input\n- Managing terminal addons for additional functionality\n- Applying VS Code themes to the terminal\n- Providing search functionality\n- Supporting terminal decorations and marks\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts:70-1000](src/vs/workbench/contrib/terminal/browser/xterm/xtermTerminal.ts:70-1000)\n\n## Terminal View and Layout\n\nThe terminal UI can be displayed in two primary locations:\n1. The terminal panel (at the bottom of the workbench)\n2. Terminal editors (in the editor area)\n\n### Terminal Panel\n\nThe terminal panel is implemented by the `TerminalViewPane` class, which extends `ViewPane`. It contains a `TerminalTabbedView` that manages the terminal tabs and instances.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Panel\"\n        TerminalViewPane[\"TerminalViewPane\"]\n        TerminalTabbedView[\"TerminalTabbedView\"]\n        TabList[\"TerminalTabList\"]\n        SplitView[\"SplitView\"]\n        TerminalContainer[\"Terminal Container\"]\n    end\n\n    subgraph \"Terminal Groups\"\n        Group1[\"TerminalGroup\"]\n        Group2[\"TerminalGroup\"]\n        Instance1[\"TerminalInstance\"]\n        Instance2[\"TerminalInstance\"]\n        Instance3[\"TerminalInstance\"]\n    end\n\n    TerminalViewPane --\u003e TerminalTabbedView\n    TerminalTabbedView --\u003e TabList\n    TerminalTabbedView --\u003e SplitView\n    TerminalTabbedView --\u003e TerminalContainer\n    \n    SplitView --\u003e Group1\n    SplitView --\u003e Group2\n    Group1 --\u003e Instance1\n    Group1 --\u003e Instance2\n    Group2 --\u003e Instance3\n```\n\nThe `TerminalTabbedView` manages:\n- The tabs list (showing all terminal instances)\n- The split view (allowing multiple terminal groups)\n- The terminal container (where terminal instances are rendered)\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts:55-1000](src/vs/workbench/contrib/terminal/browser/terminalView.ts:55-1000)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts:37-500](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts:37-500)\n\n### Terminal Editor\n\nTerminal editors allow terminals to be opened in the editor area, just like text files. They are implemented by the `TerminalEditor` class.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Editor\"\n        TerminalEditor[\"TerminalEditor\"]\n        EditorInput[\"TerminalEditorInput\"]\n        Instance[\"TerminalInstance\"]\n    end\n\n    TerminalEditor --\u003e EditorInput\n    TerminalEditor --\u003e Instance\n```\n\nThe `TerminalEditorInput` class represents the editor input for a terminal, allowing it to be managed by the editor service like other editor inputs.\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalEditor.ts](src/vs/workbench/contrib/terminal/browser/terminalEditor.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts](src/vs/workbench/contrib/terminal/browser/terminalEditorInput.ts)\n\n## Terminal Tabs and Groups\n\nTerminals in the panel are organized into tabs and groups. A group can contain multiple terminal instances that are split horizontally or vertically.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Groups\"\n        TerminalGroupService[\"TerminalGroupService\"]\n        Group1[\"TerminalGroup 1\"]\n        Group2[\"TerminalGroup 2\"]\n        Instance1[\"TerminalInstance 1\"]\n        Instance2[\"TerminalInstance 2\"]\n        Instance3[\"TerminalInstance 3\"]\n        Instance4[\"TerminalInstance 4\"]\n    end\n\n    TerminalGroupService --\u003e Group1\n    TerminalGroupService --\u003e Group2\n    Group1 --\u003e Instance1\n    Group1 --\u003e Instance2\n    Group2 --\u003e Instance3\n    Group2 --\u003e Instance4\n```\n\nThe `TerminalTabList` component displays the tabs for all terminal instances and allows users to:\n- Switch between terminals\n- Rearrange terminals via drag and drop\n- Close terminals\n- See terminal status indicators\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts](src/vs/workbench/contrib/terminal/browser/terminalTabsList.ts)\n- [src/vs/workbench/contrib/terminal/browser/terminalGroup.ts](src/vs/workbench/contrib/terminal/browser/terminalGroup.ts)\n\n## Terminal Styling and Theming\n\nThe terminal UI is styled using CSS and integrates with VS Code's theming system. The terminal colors are defined in the terminal color registry and applied to the xterm.js instance.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Styling\"\n        TerminalColorRegistry[\"Terminal Color Registry\"]\n        ThemeService[\"ThemeService\"]\n        XtermTheme[\"XtermTheme\"]\n        CSS[\"Terminal CSS\"]\n    end\n\n    TerminalColorRegistry --\u003e ThemeService\n    ThemeService --\u003e XtermTheme\n    ThemeService --\u003e CSS\n```\n\nKey terminal styling components:\n- Terminal foreground and background colors\n- Cursor colors\n- ANSI colors (16 standard colors)\n- Selection colors\n- Find match colors\n\nSources:\n- [src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts](src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts)\n- [src/vs/workbench/contrib/terminal/browser/media/terminal.css](src/vs/workbench/contrib/terminal/browser/media/terminal.css)\n- [src/vs/workbench/contrib/terminal/browser/media/xterm.css](src/vs/workbench/contrib/terminal/browser/media/xterm.css)\n\n## Terminal Actions and Commands\n\nThe terminal provides a rich set of actions and commands for interacting with terminals.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Actions\"\n        CreateTerminal[\"Create Terminal\"]\n        SplitTerminal[\"Split Terminal\"]\n        KillTerminal[\"Kill Terminal\"]\n        ClearTerminal[\"Clear Terminal\"]\n        SelectAll[\"Select All\"]\n        CopySelection[\"Copy Selection\"]\n        Paste[\"Paste\"]\n        ScrollUp[\"Scroll Up\"]\n        ScrollDown[\"Scroll Down\"]\n        FindNext[\"Find Next\"]\n        FindPrevious[\"Find Previous\"]\n    end\n\n    subgraph \"Terminal Command Registration\"\n        RegisterTerminalAction[\"registerTerminalAction()\"]\n        RegisterContextualInstanceAction[\"registerContextualInstanceAction()\"]\n        RegisterActiveInstanceAction[\"registerActiveInstanceAction()\"]\n    end\n\n    RegisterTerminalAction --\u003e CreateTerminal\n    RegisterTerminalAction --\u003e KillTerminal\n    RegisterContextualInstanceAction --\u003e SplitTerminal\n    RegisterActiveInstanceAction --\u003e ClearTerminal\n    RegisterActiveInstanceAction --\u003e SelectAll\n    RegisterActiveInstanceAction --\u003e CopySelection\n    RegisterActiveInstanceAction --\u003e Paste\n    RegisterActiveInstanceAction --\u003e ScrollUp\n    RegisterActiveInstanceAction --\u003e ScrollDown\n    RegisterActiveInstanceAction --\u003e FindNext\n    RegisterActiveInstanceAction --\u003e FindPrevious\n```\n\nTerminal actions are registered using helper functions that handle common patterns:\n- `registerTerminalAction`: Registers a general terminal action\n- `registerContextualInstanceAction`: Registers an action that operates on the selected terminal instance(s)\n- `registerActiveInstanceAction`: Registers an action that operates on the active terminal instance\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalActions.ts:161-286](src/vs/workbench/contrib/terminal/browser/terminalActions.ts:161-286)\n- [src/vs/workbench/contrib/terminal/common/terminal.ts:399-486](src/vs/workbench/contrib/terminal/common/terminal.ts:399-486)\n\n## Terminal Configuration\n\nTerminal behavior and appearance can be configured through VS Code's settings system. The terminal configuration is defined in `terminalConfiguration.ts`.\n\nKey terminal configuration categories:\n- Appearance (font, colors, cursor style)\n- Behavior (scrollback, bell, right-click behavior)\n- Environment (shell, args, environment variables)\n- Integration (shell integration, links)\n- Performance (GPU acceleration)\n\nThe `ITerminalConfigurationService` provides access to the terminal configuration and derived values.\n\nSources:\n- [src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts:43-1000](src/vs/workbench/contrib/terminal/common/terminalConfiguration.ts:43-1000)\n- [src/vs/platform/terminal/common/terminal.ts:30-133](src/vs/platform/terminal/common/terminal.ts:30-133)\n- [src/vs/workbench/contrib/terminal/browser/terminalConfigurationService.ts](src/vs/workbench/contrib/terminal/browser/terminalConfigurationService.ts)\n\n## Terminal Integration with Extensions\n\nVS Code's terminal API allows extensions to interact with the terminal. The extension host terminal service provides the implementation for the terminal API.\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        ExtHostTerminalService[\"ExtHostTerminalService\"]\n        ExtHostTerminal[\"ExtHostTerminal\"]\n        ExtensionTerminalAPI[\"vscode.Terminal API\"]\n    end\n\n    subgraph \"Main Thread\"\n        MainThreadTerminalService[\"MainThreadTerminalService\"]\n        TerminalService[\"TerminalService\"]\n        TerminalInstance[\"TerminalInstance\"]\n    end\n\n    ExtensionTerminalAPI --\u003e ExtHostTerminalService\n    ExtHostTerminalService --\u003e ExtHostTerminal\n    ExtHostTerminal -- \"RPC\" --\u003e MainThreadTerminalService\n    MainThreadTerminalService --\u003e TerminalService\n    TerminalService --\u003e TerminalInstance\n```\n\nThe terminal API allows extensions to:\n- Create terminals\n- Send text to terminals\n- Show/hide terminals\n- Get terminal exit status\n- Register terminal link providers\n- Register terminal profiles\n\nSources:\n- [src/vs/workbench/api/common/extHostTerminalService.ts](src/vs/workbench/api/common/extHostTerminalService.ts)\n- [src/vs/workbench/api/node/extHostTerminalService.ts](src/vs/workbench/api/node/extHostTerminalService.ts)\n- [src/vs/workbench/api/browser/mainThreadTerminalService.ts](src/vs/workbench/api/browser/mainThreadTerminalService.ts)\n\n## Terminal Initialization and Lifecycle\n\nThe terminal system is initialized during workbench startup. The terminal contribution registers the terminal services, views, and commands.\n\n```mermaid\nsequenceDiagram\n    participant Workbench\n    participant TerminalContribution\n    participant TerminalService\n    participant TerminalViewPane\n    participant TerminalInstance\n    participant XtermTerminal\n    participant ProcessManager\n\n    Workbench-\u003e\u003eTerminalContribution: registerWorkbenchContribution\n    TerminalContribution-\u003e\u003eWorkbench: registerSingleton(ITerminalService)\n    TerminalContribution-\u003e\u003eWorkbench: registerSingleton(ITerminalGroupService)\n    TerminalContribution-\u003e\u003eWorkbench: registerSingleton(ITerminalEditorService)\n    TerminalContribution-\u003e\u003eWorkbench: registerSingleton(ITerminalInstanceService)\n    TerminalContribution-\u003e\u003eWorkbench: registerSingleton(ITerminalProfileService)\n    \n    Workbench-\u003e\u003eTerminalViewPane: createView\n    TerminalViewPane-\u003e\u003eTerminalService: onDidCreateInstance\n    \n    Note over TerminalService: User creates terminal\n    TerminalService-\u003e\u003eTerminalInstance: createInstance\n    TerminalInstance-\u003e\u003eXtermTerminal: create\n    TerminalInstance-\u003e\u003eProcessManager: createProcess\n    XtermTerminal--\u003e\u003eTerminalInstance: onDidFocus\n    ProcessManager--\u003e\u003eTerminalInstance: onProcessData\n    TerminalInstance--\u003e\u003eTerminalService: onDidChangeInstance\n```\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts:55-65](src/vs/workbench/contrib/terminal/browser/terminal.contribution.ts:55-65)\n- [src/vs/workbench/contrib/terminal/browser/terminalService.ts:170-193](src/vs/workbench/contrib/terminal/browser/terminalService.ts:170-193)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-648](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:364-648)\n\n## Terminal UI Layout\n\nThe terminal UI layout is managed by several components:\n\n1. `TerminalViewPane`: Manages the overall terminal view in the panel\n2. `TerminalTabbedView`: Manages the tabs and split view\n3. `TerminalGroup`: Manages a group of terminal instances\n4. `TerminalInstance`: Manages a single terminal instance\n\n```mermaid\ngraph TD\n    subgraph \"Terminal UI Layout\"\n        ViewPane[\"TerminalViewPane\"]\n        TabbedView[\"TerminalTabbedView\"]\n        SplitView[\"SplitView\"]\n        TabList[\"TerminalTabList\"]\n        TerminalContainer[\"Terminal Container\"]\n        Group1[\"TerminalGroup 1\"]\n        Group2[\"TerminalGroup 2\"]\n        Instance1[\"TerminalInstance 1\"]\n        Instance2[\"TerminalInstance 2\"]\n        Instance3[\"TerminalInstance 3\"]\n    end\n\n    ViewPane --\u003e TabbedView\n    TabbedView --\u003e SplitView\n    TabbedView --\u003e TabList\n    TabbedView --\u003e TerminalContainer\n    \n    SplitView --\u003e Group1\n    SplitView --\u003e Group2\n    Group1 --\u003e Instance1\n    Group1 --\u003e Instance2\n    Group2 --\u003e Instance3\n    \n    Instance1 --\u003e XtermInstance1[\"XtermTerminal 1\"]\n    Instance2 --\u003e XtermInstance2[\"XtermTerminal 2\"]\n    Instance3 --\u003e XtermInstance3[\"XtermTerminal 3\"]\n```\n\nThe layout process:\n1. The workbench layout service triggers layout on the terminal view pane\n2. The terminal view pane layouts the tabbed view\n3. The tabbed view layouts the split view and tab list\n4. The split view layouts the terminal groups\n5. The terminal groups layout the terminal instances\n6. The terminal instances layout the xterm.js instances\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalView.ts:112-113](src/vs/workbench/contrib/terminal/browser/terminalView.ts:112-113)\n- [src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts:152-180](src/vs/workbench/contrib/terminal/browser/terminalTabbedView.ts:152-180)\n- [src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:719-800](src/vs/workbench/contrib/terminal/browser/terminalInstance.ts:719-800)\n\n## Terminal Status and Decorations\n\nTerminals can display status indicators and decorations to provide additional information to users.\n\n```mermaid\ngraph TD\n    subgraph \"Terminal Status\"\n        StatusList[\"TerminalStatusList\"]\n        Status1[\"Status: Shell Integration\"]\n        Status2[\"Status: Task\"]\n        Status3[\"Status: Error\"]\n    end\n\n    subgraph \"Terminal Decorations\"\n        DecorationAddon[\"DecorationAddon\"]\n        CommandDecoration[\"Command Decoration\"]\n        ErrorDecoration[\"Error Decoration\"]\n        LinkDecoration[\"Link Decoration\"]\n    end\n\n    TerminalInstance --\u003e StatusList\n    StatusList --\u003e Status1\n    StatusList --\u003e Status2\n    StatusList --\u003e Status3\n    \n    XtermTerminal --\u003e DecorationAddon\n    DecorationAddon --\u003e CommandDecoration\n    DecorationAddon --\u003e ErrorDecoration\n    DecorationAddon --\u003e LinkDecoration\n```\n\nTerminal status indicators appear in the terminal tabs and provide information about:\n- Shell integration status\n- Task status\n- Error status\n- Process status\n\nTerminal decorations appear in the terminal content and provide:\n- Command decorations (showing command execution status)\n- Error decorations (highlighting errors)\n- Link decorations (making URLs and file paths clickable)\n\nSources:\n- [src/vs/workbench/contrib/terminal/browser/terminalStatusList.ts](src/vs/workbench/contrib/terminal/browser/terminalStatusList.ts)\n- [src/vs/workbench/contrib/terminal/browser/xterm/decorationAddon.ts](src/vs/workbench/contrib/terminal/browser/xterm/decorationAddon.ts)\n\n## Conclusion\n\nThe VS Code terminal UI is a complex system that integrates the xterm.js terminal emulator with the VS Code workbench. It provides a rich set of features for terminal management, including tabs, splits, theming, and integration with the editor. The terminal UI is highly configurable and extensible, allowing users and extensions to customize the terminal experience.\n\nThe key components of the terminal UI are:\n- `TerminalInstance`: Manages a single terminal instance\n- `XtermTerminal`: Wraps the xterm.js library\n- `TerminalViewPane`: Manages the terminal view in the panel\n- `TerminalTabbedView`: Manages the terminal tabs and split view\n- `TerminalGroup`: Manages a group of terminal instances\n- `TerminalService`: Provides the main terminal service API\n\nThese components work together to provide a seamless terminal experience within VS Code."])</script>
    <script>self.__next_f.push([1, "28:T6f8e,"])</script>
    <script>self.__next_f.push([1, "# Debugging System\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/workbench/api/browser/mainThreadDebugService.ts](src/vs/workbench/api/browser/mainThreadDebugService.ts)\n- [src/vs/workbench/api/common/extHostDebugService.ts](src/vs/workbench/api/common/extHostDebugService.ts)\n- [src/vs/workbench/contrib/debug/browser/baseDebugView.ts](src/vs/workbench/contrib/debug/browser/baseDebugView.ts)\n- [src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts](src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/breakpointsView.ts](src/vs/workbench/contrib/debug/browser/breakpointsView.ts)\n- [src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts](src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/callStackView.ts](src/vs/workbench/contrib/debug/browser/callStackView.ts)\n- [src/vs/workbench/contrib/debug/browser/debug.contribution.ts](src/vs/workbench/contrib/debug/browser/debug.contribution.ts)\n- [src/vs/workbench/contrib/debug/browser/debugActionViewItems.ts](src/vs/workbench/contrib/debug/browser/debugActionViewItems.ts)\n- [src/vs/workbench/contrib/debug/browser/debugCommands.ts](src/vs/workbench/contrib/debug/browser/debugCommands.ts)\n- [src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts](src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts)\n- [src/vs/workbench/contrib/debug/browser/debugEditorActions.ts](src/vs/workbench/contrib/debug/browser/debugEditorActions.ts)\n- [src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts](src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/debugHover.ts](src/vs/workbench/contrib/debug/browser/debugHover.ts)\n- [src/vs/workbench/contrib/debug/browser/debugService.ts](src/vs/workbench/contrib/debug/browser/debugService.ts)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts](src/vs/workbench/contrib/debug/browser/debugSession.ts)\n- [src/vs/workbench/contrib/debug/browser/debugToolBar.ts](src/vs/workbench/contrib/debug/browser/debugToolBar.ts)\n- [src/vs/workbench/contrib/debug/browser/debugViewlet.ts](src/vs/workbench/contrib/debug/browser/debugViewlet.ts)\n- [src/vs/workbench/contrib/debug/browser/disassemblyView.ts](src/vs/workbench/contrib/debug/browser/disassemblyView.ts)\n- [src/vs/workbench/contrib/debug/browser/exceptionWidget.ts](src/vs/workbench/contrib/debug/browser/exceptionWidget.ts)\n- [src/vs/workbench/contrib/debug/browser/loadedScriptsView.ts](src/vs/workbench/contrib/debug/browser/loadedScriptsView.ts)\n- [src/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css](src/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css)\n- [src/vs/workbench/contrib/debug/browser/media/debug.contribution.css](src/vs/workbench/contrib/debug/browser/media/debug.contribution.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugHover.css](src/vs/workbench/contrib/debug/browser/media/debugHover.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugToolBar.css](src/vs/workbench/contrib/debug/browser/media/debugToolBar.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugViewlet.css](src/vs/workbench/contrib/debug/browser/media/debugViewlet.css)\n- [src/vs/workbench/contrib/debug/browser/media/exceptionWidget.css](src/vs/workbench/contrib/debug/browser/media/exceptionWidget.css)\n- [src/vs/workbench/contrib/debug/browser/media/repl.css](src/vs/workbench/contrib/debug/browser/media/repl.css)\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts)\n- [src/vs/workbench/contrib/debug/browser/repl.ts](src/vs/workbench/contrib/debug/browser/repl.ts)\n- [src/vs/workbench/contrib/debug/browser/replFilter.ts](src/vs/workbench/contrib/debug/browser/replFilter.ts)\n- [src/vs/workbench/contrib/debug/browser/replViewer.ts](src/vs/workbench/contrib/debug/browser/replViewer.ts)\n- [src/vs/workbench/contrib/debug/browser/variablesView.ts](src/vs/workbench/contrib/debug/browser/variablesView.ts)\n- [src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts](src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts)\n- [src/vs/workbench/contrib/debug/common/debug.ts](src/vs/workbench/contrib/debug/common/debug.ts)\n- [src/vs/workbench/contrib/debug/common/debugModel.ts](src/vs/workbench/contrib/debug/common/debugModel.ts)\n- [src/vs/workbench/contrib/debug/common/debugStorage.ts](src/vs/workbench/contrib/debug/common/debugStorage.ts)\n- [src/vs/workbench/contrib/debug/common/replModel.ts](src/vs/workbench/contrib/debug/common/replModel.ts)\n- [src/vs/workbench/contrib/debug/test/browser/baseDebugView.test.ts](src/vs/workbench/contrib/debug/test/browser/baseDebugView.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/breakpoints.test.ts](src/vs/workbench/contrib/debug/test/browser/breakpoints.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/callStack.test.ts](src/vs/workbench/contrib/debug/test/browser/callStack.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugHover.test.ts](src/vs/workbench/contrib/debug/test/browser/debugHover.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts](src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugViewModel.test.ts](src/vs/workbench/contrib/debug/test/browser/debugViewModel.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts](src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts)\n- [src/vs/workbench/contrib/debug/test/browser/rawDebugSession.test.ts](src/vs/workbench/contrib/debug/test/browser/rawDebugSession.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/repl.test.ts](src/vs/workbench/contrib/debug/test/browser/repl.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/watch.test.ts](src/vs/workbench/contrib/debug/test/browser/watch.test.ts)\n- [src/vs/workbench/contrib/debug/test/common/debugModel.test.ts](src/vs/workbench/contrib/debug/test/common/debugModel.test.ts)\n- [src/vs/workbench/contrib/debug/test/common/mockDebug.ts](src/vs/workbench/contrib/debug/test/common/mockDebug.ts)\n- [src/vs/workbench/contrib/files/browser/views/emptyView.ts](src/vs/workbench/contrib/files/browser/views/emptyView.ts)\n- [src/vs/workbench/contrib/files/browser/views/openEditorsView.ts](src/vs/workbench/contrib/files/browser/views/openEditorsView.ts)\n\n\u003c/details\u003e\n\n\n\nThis document provides an overview of VS Code's debugging architecture, which enables users to debug programs written in various programming languages. The debugging system is responsible for launching debug sessions, managing breakpoints, evaluating expressions, and providing a user interface for controlling the debugging process.\n\nFor information about the Debug Adapter Protocol (DAP) specifically, see [Extension Host Protocol](#4.1).\n\n## Overview\n\nThe VS Code debugging system follows a client-server architecture where VS Code acts as the client (debug frontend) that communicates with language-specific debug adapters (debug backend) through the Debug Adapter Protocol (DAP). This architecture allows VS Code to support debugging for any programming language as long as there's a corresponding debug adapter that implements the protocol.\n\n```mermaid\nflowchart TD\n    subgraph \"VS Code\"\n        DebugService[\"DebugService\"]\n        DebugSession[\"DebugSession\"]\n        RawDebugSession[\"RawDebugSession\"]\n        DebugModel[\"DebugModel\"]\n        ViewModel[\"ViewModel\"]\n        UI[\"Debug UI Components\"]\n    end\n    \n    subgraph \"Debug Adapter\"\n        DebugAdapter[\"Debug Adapter\"]\n        Debugger[\"Language-specific Debugger\"]\n    end\n    \n    DebugService --\u003e DebugSession\n    DebugSession --\u003e RawDebugSession\n    RawDebugSession \u003c--\u003e DebugAdapter\n    DebugAdapter \u003c--\u003e Debugger\n    \n    DebugService --\u003e DebugModel\n    DebugService --\u003e ViewModel\n    UI --\u003e DebugService\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:62-215](src/vs/workbench/contrib/debug/browser/debugService.ts:62-215)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187](src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187)\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53)\n\n## Core Components\n\n### Debug Service\n\nThe `DebugService` is the central component of the debugging system. It manages the lifecycle of debug sessions, handles configuration, and coordinates between the UI and the debug adapters.\n\n```mermaid\nclassDiagram\n    class DebugService {\n        -model: DebugModel\n        -viewModel: ViewModel\n        -configurationManager: ConfigurationManager\n        -adapterManager: AdapterManager\n        +getModel(): IDebugModel\n        +getViewModel(): IViewModel\n        +startDebugging(launch, config, options): Promise~boolean~\n        +restartSession(session): Promise~void~\n        +stopSession(session): Promise~void~\n    }\n    \n    DebugService --\u003e DebugModel\n    DebugService --\u003e ViewModel\n    DebugService --\u003e ConfigurationManager\n    DebugService --\u003e AdapterManager\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:62-215](src/vs/workbench/contrib/debug/browser/debugService.ts:62-215)\n- [src/vs/workbench/contrib/debug/common/debug.ts:46-486](src/vs/workbench/contrib/debug/common/debug.ts:46-486)\n\n### Debug Session\n\nThe `DebugSession` represents a single debugging session. It handles communication with the debug adapter through the `RawDebugSession` and manages the state of the debugging session.\n\n```mermaid\nclassDiagram\n    class DebugSession {\n        -id: string\n        -raw: RawDebugSession\n        -configuration: IConfig\n        -state: State\n        +getId(): string\n        +getLabel(): string\n        +getStackTrace(threadId): Promise~IStackFrame[]~\n        +getScopes(frameId): Promise~IScope[]~\n        +evaluate(expression, frameId): Promise~IExpression~\n    }\n    \n    DebugSession --\u003e RawDebugSession\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187](src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187)\n- [src/vs/workbench/contrib/debug/common/debug.ts:370-486](src/vs/workbench/contrib/debug/common/debug.ts:370-486)\n\n### Raw Debug Session\n\nThe `RawDebugSession` encapsulates the communication with the debug adapter. It sends and receives Debug Adapter Protocol (DAP) messages and emits events for the `DebugSession` to handle.\n\n```mermaid\nclassDiagram\n    class RawDebugSession {\n        -debugAdapter: IDebugAdapter\n        -capabilities: DebugProtocol.Capabilities\n        +start(): Promise~void~\n        +disconnect(): Promise~void~\n        +sendRequest(command, args): Promise~Response~\n        +sendBreakpoints(uri, breakpoints): Promise~void~\n    }\n    \n    RawDebugSession --\u003e IDebugAdapter\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53)\n\n### Debug Model\n\nThe `DebugModel` maintains the state of the debugging system, including breakpoints, watch expressions, and debug sessions.\n\n```mermaid\nclassDiagram\n    class DebugModel {\n        -breakpoints: Map~string, IBreakpoint[]~\n        -functionBreakpoints: IFunctionBreakpoint[]\n        -exceptionBreakpoints: IExceptionBreakpoint[]\n        -watchExpressions: Expression[]\n        -sessions: IDebugSession[]\n        +addSession(session): void\n        +removeSession(session): void\n        +getBreakpoints(): IBreakpoint[]\n        +addBreakpoints(breakpoints): void\n        +removeBreakpoints(breakpoints): void\n    }\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debugModel.ts:25-1000](src/vs/workbench/contrib/debug/common/debugModel.ts:25-1000)\n\n### View Model\n\nThe `ViewModel` manages the UI state of the debugging system, including the focused debug session, thread, and stack frame.\n\n```mermaid\nclassDiagram\n    class ViewModel {\n        -focusedSession: IDebugSession\n        -focusedThread: IThread\n        -focusedStackFrame: IStackFrame\n        +setFocusedSession(session): void\n        +setFocusedThread(thread): void\n        +setFocusedStackFrame(stackFrame): void\n    }\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:138-139](src/vs/workbench/contrib/debug/browser/debugService.ts:138-139)\n\n## Debug States and Lifecycle\n\nA debug session can be in one of four states:\n\n1. **Inactive**: No debug session is running\n2. **Initializing**: A debug session is being set up\n3. **Running**: The program is running\n4. **Stopped**: The program is paused at a breakpoint or exception\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Inactive\n    Inactive --\u003e Initializing: startDebugging\n    Initializing --\u003e Running: launchOrAttach\n    Running --\u003e Stopped: breakpoint/exception\n    Stopped --\u003e Running: continue\n    Running --\u003e Inactive: terminate/disconnect\n    Stopped --\u003e Inactive: terminate/disconnect\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debug.ts:202-216](src/vs/workbench/contrib/debug/common/debug.ts:202-216)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:267-284](src/vs/workbench/contrib/debug/browser/debugSession.ts:267-284)\n\n### Starting a Debug Session\n\nThe process of starting a debug session involves several steps:\n\n1. Resolving the debug configuration\n2. Creating a debug session\n3. Initializing the debug adapter\n4. Launching or attaching to the target program\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant DebugService\n    participant ConfigurationManager\n    participant DebugSession\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    User-\u003e\u003eDebugService: startDebugging(config)\n    DebugService-\u003e\u003eConfigurationManager: resolveConfiguration(config)\n    ConfigurationManager--\u003e\u003eDebugService: resolvedConfig\n    DebugService-\u003e\u003eDebugService: createSession(resolvedConfig)\n    DebugService-\u003e\u003eDebugSession: new DebugSession(resolvedConfig)\n    DebugSession-\u003e\u003eRawDebugSession: new RawDebugSession()\n    RawDebugSession-\u003e\u003eDebugAdapter: initialize()\n    DebugAdapter--\u003e\u003eRawDebugSession: initialized\n    RawDebugSession-\u003e\u003eDebugAdapter: launchOrAttach(config)\n    DebugAdapter--\u003e\u003eRawDebugSession: launched/attached\n    RawDebugSession--\u003e\u003eDebugSession: running\n    DebugSession--\u003e\u003eDebugService: session started\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:352-449](src/vs/workbench/contrib/debug/browser/debugService.ts:352-449)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:338-403](src/vs/workbench/contrib/debug/browser/debugSession.ts:338-403)\n\n## Breakpoint Management\n\nBreakpoints are managed by the `DebugModel` and can be of several types:\n\n1. **Source Breakpoints**: Set on specific lines in source files\n2. **Function Breakpoints**: Set on function names\n3. **Data Breakpoints**: Triggered when data changes\n4. **Exception Breakpoints**: Triggered when exceptions occur\n5. **Instruction Breakpoints**: Set on specific instructions in disassembly view\n\n```mermaid\nclassDiagram\n    class IBreakpoint {\n        +id: string\n        +enabled: boolean\n        +condition?: string\n        +hitCondition?: string\n        +logMessage?: string\n        +verified: boolean\n    }\n    \n    class Breakpoint {\n        +uri: URI\n        +lineNumber: number\n        +column?: number\n    }\n    \n    class FunctionBreakpoint {\n        +name: string\n    }\n    \n    class DataBreakpoint {\n        +dataId: string\n        +accessType: string\n        +description: string\n    }\n    \n    class ExceptionBreakpoint {\n        +filter: string\n        +label: string\n    }\n    \n    class InstructionBreakpoint {\n        +instructionReference: string\n        +offset?: number\n        +address: bigint\n    }\n    \n    IBreakpoint \u003c|-- Breakpoint\n    IBreakpoint \u003c|-- FunctionBreakpoint\n    IBreakpoint \u003c|-- DataBreakpoint\n    IBreakpoint \u003c|-- ExceptionBreakpoint\n    IBreakpoint \u003c|-- InstructionBreakpoint\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debug.ts:580-686](src/vs/workbench/contrib/debug/common/debug.ts:580-686)\n- [src/vs/workbench/contrib/debug/common/debugModel.ts:1000-1500](src/vs/workbench/contrib/debug/common/debugModel.ts:1000-1500)\n\n### Breakpoint Lifecycle\n\nBreakpoints go through several stages during their lifecycle:\n\n1. **Creation**: User adds a breakpoint in the editor or breakpoints view\n2. **Registration**: Breakpoint is added to the `DebugModel`\n3. **Sending**: Breakpoint is sent to the debug adapter\n4. **Verification**: Debug adapter verifies if the breakpoint can be set\n5. **Updating**: Breakpoint state is updated based on verification\n6. **Removal**: User removes the breakpoint or debug session ends\n\n```mermaid\nsequenceDiagram\n    participant Editor\n    participant DebugService\n    participant DebugModel\n    participant DebugSession\n    participant DebugAdapter\n    \n    Editor-\u003e\u003eDebugService: addBreakpoints(breakpoints)\n    DebugService-\u003e\u003eDebugModel: addBreakpoints(breakpoints)\n    DebugModel--\u003e\u003eDebugService: breakpointsAdded\n    \n    alt Debug session active\n        DebugService-\u003e\u003eDebugSession: sendBreakpoints(uri, breakpoints)\n        DebugSession-\u003e\u003eDebugAdapter: setBreakpoints(source, breakpoints)\n        DebugAdapter--\u003e\u003eDebugSession: breakpointResponses\n        DebugSession-\u003e\u003eDebugModel: updateBreakpoints(responses)\n    end\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:1000-1100](src/vs/workbench/contrib/debug/browser/debugService.ts:1000-1100)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:480-500](src/vs/workbench/contrib/debug/browser/debugSession.ts:480-500)\n- [src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts:60-100](src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts:60-100)\n\n## Debug UI Components\n\nVS Code provides several UI components for debugging:\n\n### Debug Viewlet\n\nThe Debug Viewlet is the main UI container for debugging, containing several views:\n\n1. **Variables View**: Shows variables in the current scope\n2. **Watch View**: Shows watch expressions\n3. **Call Stack View**: Shows the call stack of the current thread\n4. **Breakpoints View**: Shows all breakpoints\n5. **Loaded Scripts View**: Shows all loaded scripts\n6. **Disassembly View**: Shows disassembly when source is not available\n\n```mermaid\nflowchart TD\n    DebugViewlet[\"Debug Viewlet\"]\n    VariablesView[\"Variables View\"]\n    WatchView[\"Watch View\"]\n    CallStackView[\"Call Stack View\"]\n    BreakpointsView[\"Breakpoints View\"]\n    LoadedScriptsView[\"Loaded Scripts View\"]\n    DisassemblyView[\"Disassembly View\"]\n    \n    DebugViewlet --\u003e VariablesView\n    DebugViewlet --\u003e WatchView\n    DebugViewlet --\u003e CallStackView\n    DebugViewlet --\u003e BreakpointsView\n    DebugViewlet --\u003e LoadedScriptsView\n    DebugViewlet --\u003e DisassemblyView\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugViewlet.ts:1-100](src/vs/workbench/contrib/debug/browser/debugViewlet.ts:1-100)\n- [src/vs/workbench/contrib/debug/browser/variablesView.ts:1-100](src/vs/workbench/contrib/debug/browser/variablesView.ts:1-100)\n- [src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts:1-100](src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts:1-100)\n- [src/vs/workbench/contrib/debug/browser/callStackView.ts:1-100](src/vs/workbench/contrib/debug/browser/callStackView.ts:1-100)\n- [src/vs/workbench/contrib/debug/browser/breakpointsView.ts:1-100](src/vs/workbench/contrib/debug/browser/breakpointsView.ts:1-100)\n\n### Debug Console (REPL)\n\nThe Debug Console (REPL) allows users to evaluate expressions and see program output during debugging.\n\n```mermaid\nclassDiagram\n    class Repl {\n        -history: HistoryNavigator\n        -replInput: CodeEditorWidget\n        -tree: WorkbenchAsyncDataTree\n        +acceptReplInput(): void\n        +clearRepl(): void\n        +getVisibleContent(): string\n    }\n    \n    class ReplModel {\n        -elements: IReplElement[]\n        +addReplExpression(stackFrame, expression): Promise~void~\n        +appendToRepl(data): void\n        +getReplElements(): IReplElement[]\n    }\n    \n    Repl --\u003e ReplModel\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/repl.ts:95-547](src/vs/workbench/contrib/debug/browser/repl.ts:95-547)\n- [src/vs/workbench/contrib/debug/common/replModel.ts:1-100](src/vs/workbench/contrib/debug/common/replModel.ts:1-100)\n\n### Debug Actions and Commands\n\nVS Code provides various actions and commands for controlling the debugging process:\n\n| Command | Description | Key Binding |\n|---------|-------------|------------|\n| Start Debugging | Starts a new debug session | F5 |\n| Stop Debugging | Stops the current debug session | Shift+F5 |\n| Restart Debugging | Restarts the current debug session | Ctrl+Shift+F5 |\n| Continue | Continues execution | F5 |\n| Step Over | Steps over the current line | F10 |\n| Step Into | Steps into the current function | F11 |\n| Step Out | Steps out of the current function | Shift+F11 |\n| Toggle Breakpoint | Toggles a breakpoint at the current line | F9 |\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugCommands.ts:42-138](src/vs/workbench/contrib/debug/browser/debugCommands.ts:42-138)\n- [src/vs/workbench/contrib/debug/browser/debugToolBar.ts:1-100](src/vs/workbench/contrib/debug/browser/debugToolBar.ts:1-100)\n\n### Debug Editor Contributions\n\nVS Code extends the editor with debugging features:\n\n1. **Breakpoint Editor Contribution**: Manages breakpoints in the editor\n2. **Debug Editor Contribution**: Provides inline values, hover, and exception widgets\n3. **Call Stack Editor Contribution**: Shows the current execution position\n\n```mermaid\nclassDiagram\n    class BreakpointEditorContribution {\n        -breakpointDecorations: IBreakpointDecoration[]\n        -hoverWidget: BreakpointHoverWidget\n        +addBreakpoint(lineNumber, column): void\n        +removeBreakpoint(lineNumber, column): void\n    }\n    \n    class DebugEditorContribution {\n        -hoverWidget: DebugHoverWidget\n        -exceptionWidget: ExceptionWidget\n        -showInlineValues: boolean\n        +showHover(range, focus): Promise~boolean~\n        +addInlineValues(): void\n    }\n    \n    class CallStackEditorContribution {\n        -showDebugStackframe(stackFrame): void\n    }\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts:1-100](src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts:1-100)\n- [src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts:1-100](src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts:1-100)\n- [src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts:1-100](src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts:1-100)\n\n## Debug Configuration\n\nDebug configurations are stored in `launch.json` files and define how to launch or attach to a program for debugging.\n\n```mermaid\nclassDiagram\n    class ConfigurationManager {\n        -launches: ILaunch[]\n        -configProviders: IDebugConfigurationProvider[]\n        -selectedName: string\n        -selectedLaunch: ILaunch\n        +getLaunches(): ILaunch[]\n        +selectConfiguration(launch, name): void\n        +resolveConfiguration(config): Promise~IConfig~\n    }\n    \n    class Launch {\n        -name: string\n        -workspace: IWorkspaceFolder\n        -configurations: IConfig[]\n        -compounds: ICompound[]\n        +getConfiguration(name): IConfig\n        +getCompound(name): ICompound\n    }\n    \n    ConfigurationManager --\u003e Launch\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts:52-100](src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts:52-100)\n\n### Configuration Resolution\n\nDebug configurations go through a resolution process before they are used to start a debug session:\n\n1. **Initial Resolution**: Basic variable substitution\n2. **Provider Resolution**: Debug configuration providers can modify the configuration\n3. **Final Resolution**: Final variable substitution and validation\n\n```mermaid\nsequenceDiagram\n    participant DebugService\n    participant ConfigurationManager\n    participant ConfigProviders\n    participant DebugSession\n    \n    DebugService-\u003e\u003eConfigurationManager: resolveConfigurationByProviders(config)\n    ConfigurationManager-\u003e\u003eConfigProviders: resolveDebugConfiguration(config)\n    ConfigProviders--\u003e\u003eConfigurationManager: modifiedConfig\n    ConfigurationManager-\u003e\u003eConfigurationManager: substituteVariables(modifiedConfig)\n    ConfigurationManager--\u003e\u003eDebugService: resolvedConfig\n    DebugService-\u003e\u003eDebugSession: launchOrAttach(resolvedConfig)\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts:127-168](src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts:127-168)\n\n## Debug Adapter Integration\n\nVS Code communicates with debug adapters through the Debug Adapter Protocol (DAP). The `RawDebugSession` handles this communication.\n\n```mermaid\nsequenceDiagram\n    participant DebugSession\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    DebugSession-\u003e\u003eRawDebugSession: sendRequest(command, args)\n    RawDebugSession-\u003e\u003eDebugAdapter: send(request)\n    DebugAdapter--\u003e\u003eRawDebugSession: response\n    RawDebugSession--\u003e\u003eDebugSession: handleResponse(response)\n    \n    DebugAdapter-\u003e\u003eRawDebugSession: event\n    RawDebugSession-\u003e\u003eDebugSession: handleEvent(event)\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-100](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-100)\n\n### Debug Adapter Lifecycle\n\nThe lifecycle of a debug adapter includes:\n\n1. **Creation**: Debug adapter is created by the debugger\n2. **Initialization**: Debug adapter is initialized with capabilities\n3. **Launch/Attach**: Debug adapter launches or attaches to the target program\n4. **Debugging**: Debug adapter handles requests and sends events\n5. **Termination**: Debug adapter is terminated when the debug session ends\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Created\n    Created --\u003e Initialized: initialize\n    Initialized --\u003e Running: launch/attach\n    Running --\u003e Stopped: stopped event\n    Stopped --\u003e Running: continue\n    Running --\u003e Terminated: terminate/disconnect\n    Stopped --\u003e Terminated: terminate/disconnect\n    Terminated --\u003e [*]\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-100](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-100)\n\n## Extension Points\n\nVS Code provides several extension points for the debugging system:\n\n1. **Debug Configuration Providers**: Contribute debug configurations\n2. **Debug Adapter Descriptor Factories**: Create debug adapter descriptors\n3. **Debug Adapter Tracker Factories**: Track debug adapter communication\n\n```mermaid\nclassDiagram\n    class IDebugConfigurationProvider {\n        +type: string\n        +provideDebugConfigurations(folder): Promise~IConfig[]~\n        +resolveDebugConfiguration(folder, config): Promise~IConfig~\n    }\n    \n    class IDebugAdapterDescriptorFactory {\n        +type: string\n        +createDebugAdapterDescriptor(session): Promise~IAdapterDescriptor~\n    }\n    \n    class IDebugAdapterTrackerFactory {\n        +type: string\n        +createDebugAdapterTracker(session): IDebugAdapterTracker\n    }\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debug.ts:186-200](src/vs/workbench/contrib/debug/common/debug.ts:186-200)\n- [src/vs/workbench/api/common/extHostDebugService.ts:1-100](src/vs/workbench/api/common/extHostDebugService.ts:1-100)\n\n## Conclusion\n\nThe VS Code debugging system provides a flexible and extensible architecture for debugging programs in various languages. It separates the debug frontend (VS Code) from the debug backend (language-specific debug adapters) through the Debug Adapter Protocol, allowing for a consistent debugging experience across languages.\n\nThe system is composed of several key components:\n\n1. **DebugService**: Central service managing debug sessions\n2. **DebugSession**: Represents a single debug session\n3. **RawDebugSession**: Handles communication with debug adapters\n4. **DebugModel**: Maintains the state of breakpoints and watch expressions\n5. **ViewModel**: Manages the UI state of debugging\n6. **UI Components**: Provides user interface for debugging\n\nThis architecture allows VS Code to support debugging for a wide range of programming languages while providing a consistent and powerful debugging experience."])</script>
    <script>self.__next_f.push([1, "29:T7449,"])</script>
    <script>self.__next_f.push([1, "# Debug Service and Session Management\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/workbench/api/browser/mainThreadDebugService.ts](src/vs/workbench/api/browser/mainThreadDebugService.ts)\n- [src/vs/workbench/api/common/extHostDebugService.ts](src/vs/workbench/api/common/extHostDebugService.ts)\n- [src/vs/workbench/contrib/debug/browser/baseDebugView.ts](src/vs/workbench/contrib/debug/browser/baseDebugView.ts)\n- [src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts](src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/breakpointsView.ts](src/vs/workbench/contrib/debug/browser/breakpointsView.ts)\n- [src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts](src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/callStackView.ts](src/vs/workbench/contrib/debug/browser/callStackView.ts)\n- [src/vs/workbench/contrib/debug/browser/debug.contribution.ts](src/vs/workbench/contrib/debug/browser/debug.contribution.ts)\n- [src/vs/workbench/contrib/debug/browser/debugActionViewItems.ts](src/vs/workbench/contrib/debug/browser/debugActionViewItems.ts)\n- [src/vs/workbench/contrib/debug/browser/debugCommands.ts](src/vs/workbench/contrib/debug/browser/debugCommands.ts)\n- [src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts](src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts)\n- [src/vs/workbench/contrib/debug/browser/debugEditorActions.ts](src/vs/workbench/contrib/debug/browser/debugEditorActions.ts)\n- [src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts](src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/debugHover.ts](src/vs/workbench/contrib/debug/browser/debugHover.ts)\n- [src/vs/workbench/contrib/debug/browser/debugService.ts](src/vs/workbench/contrib/debug/browser/debugService.ts)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts](src/vs/workbench/contrib/debug/browser/debugSession.ts)\n- [src/vs/workbench/contrib/debug/browser/debugToolBar.ts](src/vs/workbench/contrib/debug/browser/debugToolBar.ts)\n- [src/vs/workbench/contrib/debug/browser/debugViewlet.ts](src/vs/workbench/contrib/debug/browser/debugViewlet.ts)\n- [src/vs/workbench/contrib/debug/browser/disassemblyView.ts](src/vs/workbench/contrib/debug/browser/disassemblyView.ts)\n- [src/vs/workbench/contrib/debug/browser/exceptionWidget.ts](src/vs/workbench/contrib/debug/browser/exceptionWidget.ts)\n- [src/vs/workbench/contrib/debug/browser/loadedScriptsView.ts](src/vs/workbench/contrib/debug/browser/loadedScriptsView.ts)\n- [src/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css](src/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css)\n- [src/vs/workbench/contrib/debug/browser/media/debug.contribution.css](src/vs/workbench/contrib/debug/browser/media/debug.contribution.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugHover.css](src/vs/workbench/contrib/debug/browser/media/debugHover.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugToolBar.css](src/vs/workbench/contrib/debug/browser/media/debugToolBar.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugViewlet.css](src/vs/workbench/contrib/debug/browser/media/debugViewlet.css)\n- [src/vs/workbench/contrib/debug/browser/media/exceptionWidget.css](src/vs/workbench/contrib/debug/browser/media/exceptionWidget.css)\n- [src/vs/workbench/contrib/debug/browser/media/repl.css](src/vs/workbench/contrib/debug/browser/media/repl.css)\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts)\n- [src/vs/workbench/contrib/debug/browser/repl.ts](src/vs/workbench/contrib/debug/browser/repl.ts)\n- [src/vs/workbench/contrib/debug/browser/replFilter.ts](src/vs/workbench/contrib/debug/browser/replFilter.ts)\n- [src/vs/workbench/contrib/debug/browser/replViewer.ts](src/vs/workbench/contrib/debug/browser/replViewer.ts)\n- [src/vs/workbench/contrib/debug/browser/variablesView.ts](src/vs/workbench/contrib/debug/browser/variablesView.ts)\n- [src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts](src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts)\n- [src/vs/workbench/contrib/debug/common/debug.ts](src/vs/workbench/contrib/debug/common/debug.ts)\n- [src/vs/workbench/contrib/debug/common/debugModel.ts](src/vs/workbench/contrib/debug/common/debugModel.ts)\n- [src/vs/workbench/contrib/debug/common/debugStorage.ts](src/vs/workbench/contrib/debug/common/debugStorage.ts)\n- [src/vs/workbench/contrib/debug/common/replModel.ts](src/vs/workbench/contrib/debug/common/replModel.ts)\n- [src/vs/workbench/contrib/debug/test/browser/baseDebugView.test.ts](src/vs/workbench/contrib/debug/test/browser/baseDebugView.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/breakpoints.test.ts](src/vs/workbench/contrib/debug/test/browser/breakpoints.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/callStack.test.ts](src/vs/workbench/contrib/debug/test/browser/callStack.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugHover.test.ts](src/vs/workbench/contrib/debug/test/browser/debugHover.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts](src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugViewModel.test.ts](src/vs/workbench/contrib/debug/test/browser/debugViewModel.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts](src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts)\n- [src/vs/workbench/contrib/debug/test/browser/rawDebugSession.test.ts](src/vs/workbench/contrib/debug/test/browser/rawDebugSession.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/repl.test.ts](src/vs/workbench/contrib/debug/test/browser/repl.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/watch.test.ts](src/vs/workbench/contrib/debug/test/browser/watch.test.ts)\n- [src/vs/workbench/contrib/debug/test/common/debugModel.test.ts](src/vs/workbench/contrib/debug/test/common/debugModel.test.ts)\n- [src/vs/workbench/contrib/debug/test/common/mockDebug.ts](src/vs/workbench/contrib/debug/test/common/mockDebug.ts)\n- [src/vs/workbench/contrib/files/browser/views/emptyView.ts](src/vs/workbench/contrib/files/browser/views/emptyView.ts)\n- [src/vs/workbench/contrib/files/browser/views/openEditorsView.ts](src/vs/workbench/contrib/files/browser/views/openEditorsView.ts)\n\n\u003c/details\u003e\n\n\n\nThis document explains how VS Code's debug service manages debug sessions, including their lifecycle, state management, and communication with debug adapters. It covers the core components that enable debugging functionality in VS Code.\n\nFor information about debug configuration management, see [Debug Configuration Management](#6.2).\n\n## Overview\n\nThe VS Code debugging architecture follows a client-server model where the editor (client) communicates with a debug adapter (server) using the Debug Adapter Protocol (DAP). The Debug Service acts as the central coordinator for all debugging activities, managing debug sessions and their lifecycle.\n\n```mermaid\nflowchart TD\n    subgraph \"VS Code\"\n        DebugService[\"DebugService\"]\n        DebugSession[\"DebugSession\"]\n        RawDebugSession[\"RawDebugSession\"]\n        DebugModel[\"DebugModel\"]\n        ViewModel[\"ViewModel\"]\n    end\n    \n    subgraph \"Debug Adapter\"\n        DebugAdapter[\"IDebugAdapter\"]\n    end\n    \n    DebugService --\u003e DebugModel\n    DebugService --\u003e ViewModel\n    DebugService --\u003e DebugSession\n    DebugSession --\u003e RawDebugSession\n    RawDebugSession --\u003e DebugAdapter\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:62-93](src/vs/workbench/contrib/debug/browser/debugService.ts:62-93)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187](src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187)\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53)\n\n## Debug Service\n\nThe `DebugService` is the central component that manages all debugging activities in VS Code. It implements the `IDebugService` interface and is responsible for:\n\n1. Managing the debug model and view model\n2. Creating and managing debug sessions\n3. Handling debug state changes\n4. Coordinating breakpoints across sessions\n\n```mermaid\nclassDiagram\n    class IDebugService {\n        +getModel(): IDebugModel\n        +getViewModel(): IViewModel\n        +startDebugging(launch, config, options): Promise~boolean~\n        +stopSession(session): Promise~void~\n        +restartSession(session): Promise~void~\n        +focusStackFrame(stackFrame, thread, session): void\n        +onDidChangeState: Event~State~\n        +onDidNewSession: Event~IDebugSession~\n        +onDidEndSession: Event~IDebugSession~\n    }\n    \n    class DebugService {\n        -model: DebugModel\n        -viewModel: ViewModel\n        -configurationManager: ConfigurationManager\n        -adapterManager: AdapterManager\n        -debugState: IContextKey~string~\n        -inDebugMode: IContextKey~boolean~\n        -startDebugging()\n        -createSession()\n        -doCreateSession()\n        -onStateChange()\n    }\n    \n    IDebugService \u003c|-- DebugService\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:62-93](src/vs/workbench/contrib/debug/browser/debugService.ts:62-93)\n- [src/vs/workbench/contrib/debug/common/debug.ts:46-486](src/vs/workbench/contrib/debug/common/debug.ts:46-486)\n\n### Debug State Management\n\nThe debug service manages the overall debug state, which can be one of the following:\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Inactive\n    Inactive --\u003e Initializing: startDebugging\n    Initializing --\u003e Running: initialize \u0026 launch/attach\n    Running --\u003e Stopped: breakpoint/exception\n    Stopped --\u003e Running: continue\n    Running --\u003e Inactive: terminate/disconnect\n    Stopped --\u003e Inactive: terminate/disconnect\n```\n\nThe state is defined in the `State` enum:\n\n```\nenum State {\n    Inactive,\n    Initializing,\n    Stopped,\n    Running\n}\n```\n\nThe debug service maintains context keys that reflect the current debug state, which are used by the UI to show/hide appropriate commands and views.\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debug.ts:202-207](src/vs/workbench/contrib/debug/common/debug.ts:202-207)\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:262-316](src/vs/workbench/contrib/debug/browser/debugService.ts:262-316)\n\n## Debug Session\n\nThe `DebugSession` class represents a single debug session and is responsible for:\n\n1. Managing communication with the debug adapter\n2. Tracking session state\n3. Managing threads, stack frames, and variables\n4. Handling breakpoints for the session\n\nA debug session is created when the user starts debugging and is destroyed when debugging ends. Multiple debug sessions can exist simultaneously, allowing for multi-target debugging.\n\n```mermaid\nclassDiagram\n    class IDebugSession {\n        +getId(): string\n        +getName(): string\n        +getConfiguration(): IConfig\n        +state: State\n        +capabilities: DebugProtocol.Capabilities\n        +initialize(debugger): Promise~void~\n        +launchOrAttach(config): Promise~void~\n        +terminate(): Promise~void~\n        +disconnect(): Promise~void~\n        +getThread(threadId): IThread\n        +getAllThreads(): IThread[]\n        +onDidChangeState: Event~void~\n        +onDidEndAdapter: Event~AdapterEndEvent~\n    }\n    \n    class DebugSession {\n        -id: string\n        -raw: RawDebugSession\n        -configuration: IConfig\n        -threads: Map~number, Thread~\n        -sources: Map~string, Source~\n        -initialize()\n        -launchOrAttach()\n        -terminate()\n        -disconnect()\n        -rawUpdate()\n    }\n    \n    IDebugSession \u003c|-- DebugSession\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187](src/vs/workbench/contrib/debug/browser/debugSession.ts:52-187)\n- [src/vs/workbench/contrib/debug/common/debug.ts:371-486](src/vs/workbench/contrib/debug/common/debug.ts:371-486)\n\n### Session Lifecycle\n\nThe debug session follows a specific lifecycle:\n\n1. **Creation**: The session is created by the debug service when the user starts debugging\n2. **Initialization**: The session initializes the debug adapter\n3. **Launch/Attach**: The session launches a new process or attaches to an existing one\n4. **Running/Stopped**: The session runs until it hits a breakpoint or an exception\n5. **Termination**: The session is terminated when the user stops debugging or the debugged process ends\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant DebugService\n    participant DebugSession\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    User-\u003e\u003eDebugService: Start Debugging\n    DebugService-\u003e\u003eDebugService: startDebugging()\n    DebugService-\u003e\u003eDebugSession: new DebugSession()\n    DebugService-\u003e\u003eDebugSession: initialize()\n    DebugSession-\u003e\u003eRawDebugSession: new RawDebugSession()\n    DebugSession-\u003e\u003eRawDebugSession: initialize()\n    RawDebugSession-\u003e\u003eDebugAdapter: initialize()\n    DebugAdapter--\u003e\u003eRawDebugSession: initialized\n    DebugSession-\u003e\u003eRawDebugSession: launchOrAttach()\n    RawDebugSession-\u003e\u003eDebugAdapter: launch/attach\n    DebugAdapter--\u003e\u003eRawDebugSession: running\n    \n    Note over DebugAdapter: Program hits breakpoint\n    DebugAdapter--\u003e\u003eRawDebugSession: stopped\n    RawDebugSession--\u003e\u003eDebugSession: stopped\n    DebugSession--\u003e\u003eDebugService: state changed\n    \n    User-\u003e\u003eDebugService: Stop Debugging\n    DebugService-\u003e\u003eDebugSession: terminate()\n    DebugSession-\u003e\u003eRawDebugSession: terminate()\n    RawDebugSession-\u003e\u003eDebugAdapter: terminate\n    DebugAdapter--\u003e\u003eRawDebugSession: terminated\n    RawDebugSession--\u003e\u003eDebugSession: terminated\n    DebugSession--\u003e\u003eDebugService: session ended\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:347-443](src/vs/workbench/contrib/debug/browser/debugService.ts:347-443)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:334-477](src/vs/workbench/contrib/debug/browser/debugSession.ts:334-477)\n\n### Raw Debug Session\n\nThe `RawDebugSession` class encapsulates the direct communication with the debug adapter. It:\n\n1. Manages the debug adapter lifecycle\n2. Handles the Debug Adapter Protocol (DAP) messages\n3. Translates between VS Code's internal model and the DAP\n\n```mermaid\nclassDiagram\n    class RawDebugSession {\n        -debugAdapter: IDebugAdapter\n        -capabilities: DebugProtocol.Capabilities\n        -readyForBreakpoints: boolean\n        -onDidInitialize: Emitter\n        -onDidStop: Emitter\n        -onDidContinued: Emitter\n        -onDidTerminateDebugee: Emitter\n        -onDidExitDebugee: Emitter\n        +start(): Promise~void~\n        +initialize(args): Promise~DebugProtocol.InitializeResponse~\n        +launchOrAttach(config): Promise~void~\n        +terminate(restart): Promise~void~\n        +disconnect(args): Promise~void~\n    }\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53)\n\n## Debug Model\n\nThe debug model represents the state of the debugging session, including:\n\n1. Breakpoints\n2. Threads\n3. Stack frames\n4. Variables and expressions\n5. Debug sessions\n\n```mermaid\nclassDiagram\n    class IDebugModel {\n        +getSessions(): IDebugSession[]\n        +getBreakpoints(): IBreakpoint[]\n        +getFunctionBreakpoints(): IFunctionBreakpoint[]\n        +getDataBreakpoints(): IDataBreakpoint[]\n        +getExceptionBreakpoints(): IExceptionBreakpoint[]\n        +onDidChangeBreakpoints: Event\n        +onDidChangeCallStack: Event\n    }\n    \n    class DebugModel {\n        -breakpoints: Breakpoint[]\n        -functionBreakpoints: FunctionBreakpoint[]\n        -dataBreakpoints: DataBreakpoint[]\n        -exceptionBreakpoints: ExceptionBreakpoint[]\n        -sessions: IDebugSession[]\n        +addSession(session): void\n        +removeSession(session): void\n        +addBreakpoints(uri, breakpoints): IBreakpoint[]\n        +removeBreakpoints(breakpoints): void\n    }\n    \n    IDebugModel \u003c|-- DebugModel\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debugModel.ts:25-31](src/vs/workbench/contrib/debug/common/debugModel.ts:25-31)\n\n### Threads and Stack Frames\n\nThe debug model includes classes for representing threads and stack frames:\n\n```mermaid\nclassDiagram\n    class IThread {\n        +threadId: number\n        +name: string\n        +session: IDebugSession\n        +stopped: boolean\n        +getCallStack(): IStackFrame[]\n        +getTopStackFrame(): IStackFrame\n        +next(): Promise~void~\n        +stepIn(): Promise~void~\n        +stepOut(): Promise~void~\n        +continue(): Promise~void~\n        +pause(): Promise~void~\n    }\n    \n    class Thread {\n        -threadId: number\n        -name: string\n        -session: IDebugSession\n        -callStack: StackFrame[]\n        -stoppedDetails: IRawStoppedDetails\n        +getCallStack(): StackFrame[]\n        +fetchCallStack(): Promise~void~\n    }\n    \n    class IStackFrame {\n        +thread: IThread\n        +name: string\n        +frameId: number\n        +range: IRange\n        +source: Source\n        +getScopes(): Promise~IScope[]~\n        +restart(): Promise~void~\n    }\n    \n    class StackFrame {\n        -frameId: number\n        -thread: Thread\n        -name: string\n        -source: Source\n        -range: Range\n        -scopes: Scope[]\n        +getScopes(): Promise~Scope[]~\n    }\n    \n    IThread \u003c|-- Thread\n    IStackFrame \u003c|-- StackFrame\n    Thread \"1\" *-- \"many\" StackFrame\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debug.ts:487-573](src/vs/workbench/contrib/debug/common/debug.ts:487-573)\n- [src/vs/workbench/contrib/debug/common/debugModel.ts:1000-1200](src/vs/workbench/contrib/debug/common/debugModel.ts:1000-1200)\n\n### Variables and Expressions\n\nThe debug model includes classes for representing variables and expressions:\n\n```mermaid\nclassDiagram\n    class IExpressionContainer {\n        +value: string\n        +type: string\n        +hasChildren: boolean\n        +reference: number\n        +getChildren(): Promise~IExpression[]~\n    }\n    \n    class ExpressionContainer {\n        #session: IDebugSession\n        #threadId: number\n        #reference: number\n        #value: string\n        #namedVariables: number\n        #indexedVariables: number\n        +getChildren(): Promise~IExpression[]~\n    }\n    \n    class IExpression {\n        +name: string\n    }\n    \n    class Expression {\n        +name: string\n        +available: boolean\n        +evaluate(session, stackFrame): Promise~void~\n    }\n    \n    class Variable {\n        +name: string\n        +evaluateName: string\n        +parent: IExpressionContainer\n        +setVariable(value): Promise~void~\n    }\n    \n    IExpressionContainer \u003c|-- ExpressionContainer\n    IExpression --|\u003e IExpressionContainer\n    Expression --|\u003e ExpressionContainer\n    Variable --|\u003e ExpressionContainer\n    IExpression \u003c|-- Expression\n    IExpression \u003c|-- Variable\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debug.ts:165-196](src/vs/workbench/contrib/debug/common/debug.ts:165-196)\n- [src/vs/workbench/contrib/debug/common/debugModel.ts:37-304](src/vs/workbench/contrib/debug/common/debugModel.ts:37-304)\n\n## View Model\n\nThe view model represents the UI state of the debugging session, including:\n\n1. The focused session\n2. The focused thread\n3. The focused stack frame\n\n```mermaid\nclassDiagram\n    class IViewModel {\n        +focusedSession: IDebugSession\n        +focusedThread: IThread\n        +focusedStackFrame: IStackFrame\n        +onDidFocusSession: Event~IDebugSession~\n        +onDidFocusThread: Event~IThread~\n        +onDidFocusStackFrame: Event~IStackFrame~\n        +focusSession(session): void\n        +focusThread(thread): void\n        +focusStackFrame(stackFrame): void\n    }\n    \n    class ViewModel {\n        -focusedStackFrame: IStackFrame\n        -focusedThread: IThread\n        -focusedSession: IDebugSession\n        +focusSession(session): void\n        +focusThread(thread): void\n        +focusStackFrame(stackFrame): void\n    }\n    \n    IViewModel \u003c|-- ViewModel\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/common/debugViewModel.ts](src/vs/workbench/contrib/debug/common/debugViewModel.ts)\n\n## Debug Service Implementation\n\nThe `DebugService` implementation handles the core debugging functionality:\n\n### Starting a Debug Session\n\nThe `startDebugging` method is the main entry point for starting a debug session:\n\n```mermaid\nflowchart TD\n    A[startDebugging] --\u003e B{Is compound?}\n    B --\u003e|Yes| C[Start each configuration]\n    B --\u003e|No| D[createSession]\n    D --\u003e E[Initialize session]\n    E --\u003e F[Launch or attach]\n    F --\u003e G[Register session]\n```\n\nThe method:\n1. Resolves the debug configuration\n2. Runs pre-launch tasks\n3. Creates a debug session\n4. Initializes the debug adapter\n5. Launches or attaches to the target process\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:347-443](src/vs/workbench/contrib/debug/browser/debugService.ts:347-443)\n\n### Creating a Debug Session\n\nThe `createSession` method creates a new debug session:\n\n```mermaid\nflowchart TD\n    A[createSession] --\u003e B[Resolve configuration]\n    B --\u003e C[Run pre-launch tasks]\n    C --\u003e D[Create DebugSession]\n    D --\u003e E[Initialize session]\n    E --\u003e F[Launch or attach]\n    F --\u003e G[Register session]\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:454-568](src/vs/workbench/contrib/debug/browser/debugService.ts:454-568)\n\n### Debug Session Implementation\n\nThe `DebugSession` class implements the `IDebugSession` interface and manages the lifecycle of a debug session:\n\n#### Initialization\n\nThe `initialize` method initializes the debug adapter:\n\n```mermaid\nsequenceDiagram\n    participant DebugSession\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    DebugSession-\u003e\u003eRawDebugSession: new RawDebugSession()\n    DebugSession-\u003e\u003eRawDebugSession: start()\n    DebugSession-\u003e\u003eRawDebugSession: initialize()\n    RawDebugSession-\u003e\u003eDebugAdapter: initialize\n    DebugAdapter--\u003e\u003eRawDebugSession: initialized\n    RawDebugSession--\u003e\u003eDebugSession: capabilities\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:334-382](src/vs/workbench/contrib/debug/browser/debugSession.ts:334-382)\n\n#### Launch or Attach\n\nThe `launchOrAttach` method launches a new process or attaches to an existing one:\n\n```mermaid\nsequenceDiagram\n    participant DebugSession\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    DebugSession-\u003e\u003eRawDebugSession: launchOrAttach(config)\n    RawDebugSession-\u003e\u003eDebugAdapter: launch/attach\n    DebugAdapter--\u003e\u003eRawDebugSession: running\n    RawDebugSession--\u003e\u003eDebugSession: state changed\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:387-403](src/vs/workbench/contrib/debug/browser/debugSession.ts:387-403)\n\n#### Termination\n\nThe `terminate` method terminates the debug session:\n\n```mermaid\nsequenceDiagram\n    participant DebugSession\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    DebugSession-\u003e\u003eRawDebugSession: terminate(restart)\n    RawDebugSession-\u003e\u003eDebugAdapter: terminate\n    DebugAdapter--\u003e\u003eRawDebugSession: terminated\n    RawDebugSession--\u003e\u003eDebugSession: onDidExitAdapter\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts:418-440](src/vs/workbench/contrib/debug/browser/debugSession.ts:418-440)\n\n### Raw Debug Session Implementation\n\nThe `RawDebugSession` class handles the direct communication with the debug adapter:\n\n```mermaid\nsequenceDiagram\n    participant RawDebugSession\n    participant DebugAdapter\n    \n    RawDebugSession-\u003e\u003eDebugAdapter: initialize\n    DebugAdapter--\u003e\u003eRawDebugSession: initialized\n    RawDebugSession-\u003e\u003eDebugAdapter: setBreakpoints\n    RawDebugSession-\u003e\u003eDebugAdapter: configurationDone\n    RawDebugSession-\u003e\u003eDebugAdapter: launch/attach\n    \n    DebugAdapter--\u003e\u003eRawDebugSession: stopped\n    RawDebugSession-\u003e\u003eDebugAdapter: threads\n    RawDebugSession-\u003e\u003eDebugAdapter: stackTrace\n    RawDebugSession-\u003e\u003eDebugAdapter: scopes\n    RawDebugSession-\u003e\u003eDebugAdapter: variables\n    \n    RawDebugSession-\u003e\u003eDebugAdapter: continue\n    DebugAdapter--\u003e\u003eRawDebugSession: continued\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:42-53)\n\n## Debug UI Integration\n\nThe debug service integrates with the VS Code UI through various components:\n\n### Debug Views\n\nVS Code provides several debug-related views:\n\n1. **Call Stack View**: Shows the call stack of the current thread\n2. **Variables View**: Shows the variables in the current stack frame\n3. **Watch View**: Shows user-defined watch expressions\n4. **Breakpoints View**: Shows all breakpoints\n5. **Debug Console**: Shows debug output and allows evaluating expressions\n\n```mermaid\nflowchart TD\n    DebugService --\u003e CallStackView\n    DebugService --\u003e VariablesView\n    DebugService --\u003e WatchView\n    DebugService --\u003e BreakpointsView\n    DebugService --\u003e DebugConsole\n    \n    CallStackView --\u003e ViewModel\n    VariablesView --\u003e ViewModel\n    WatchView --\u003e ViewModel\n    BreakpointsView --\u003e DebugModel\n    DebugConsole --\u003e DebugSession\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/callStackView.ts:135-213](src/vs/workbench/contrib/debug/browser/callStackView.ts:135-213)\n- [src/vs/workbench/contrib/debug/browser/variablesView.ts:45-49](src/vs/workbench/contrib/debug/browser/variablesView.ts:45-49)\n- [src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts:1-14](src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts:1-14)\n- [src/vs/workbench/contrib/debug/browser/breakpointsView.ts:87-136](src/vs/workbench/contrib/debug/browser/breakpointsView.ts:87-136)\n- [src/vs/workbench/contrib/debug/browser/repl.ts:95-177](src/vs/workbench/contrib/debug/browser/repl.ts:95-177)\n\n### Debug Actions\n\nVS Code provides various debug-related actions:\n\n1. **Start Debugging**: Starts a new debug session\n2. **Stop Debugging**: Stops the current debug session\n3. **Continue**: Continues execution\n4. **Step Over**: Steps over the current line\n5. **Step Into**: Steps into the current function\n6. **Step Out**: Steps out of the current function\n7. **Restart**: Restarts the current debug session\n8. **Pause**: Pauses execution\n\n```mermaid\nflowchart TD\n    StartDebugging[Start Debugging] --\u003e DebugService\n    StopDebugging[Stop Debugging] --\u003e DebugService\n    Continue[Continue] --\u003e DebugSession\n    StepOver[Step Over] --\u003e DebugSession\n    StepInto[Step Into] --\u003e DebugSession\n    StepOut[Step Out] --\u003e DebugSession\n    Restart[Restart] --\u003e DebugSession\n    Pause[Pause] --\u003e DebugSession\n    \n    DebugService --\u003e DebugSession\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugCommands.ts:42-76](src/vs/workbench/contrib/debug/browser/debugCommands.ts:42-76)\n- [src/vs/workbench/contrib/debug/browser/debugToolBar.ts:1-20](src/vs/workbench/contrib/debug/browser/debugToolBar.ts:1-20)\n\n## Multi-Session Debugging\n\nVS Code supports debugging multiple targets simultaneously:\n\n```mermaid\nflowchart TD\n    DebugService --\u003e Session1[Debug Session 1]\n    DebugService --\u003e Session2[Debug Session 2]\n    DebugService --\u003e Session3[Debug Session 3]\n    \n    Session1 --\u003e Adapter1[Debug Adapter 1]\n    Session2 --\u003e Adapter2[Debug Adapter 2]\n    Session3 --\u003e Adapter3[Debug Adapter 3]\n    \n    ViewModel --\u003e FocusedSession[Focused Session]\n    FocusedSession --\u003e FocusedThread[Focused Thread]\n    FocusedThread --\u003e FocusedStackFrame[Focused Stack Frame]\n```\n\nThe view model keeps track of the focused session, thread, and stack frame, which determines what is shown in the UI.\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:171-185](src/vs/workbench/contrib/debug/browser/debugService.ts:171-185)\n- [src/vs/workbench/contrib/debug/browser/callStackView.ts:255-270](src/vs/workbench/contrib/debug/browser/callStackView.ts:255-270)\n\n## Compound Debugging\n\nVS Code supports compound debugging, which allows starting multiple debug sessions at once:\n\n```mermaid\nflowchart TD\n    StartDebugging[Start Debugging] --\u003e IsCompound{Is compound?}\n    IsCompound --\u003e|Yes| StartCompound[Start compound]\n    IsCompound --\u003e|No| StartSingle[Start single session]\n    \n    StartCompound --\u003e RunPreLaunchTask[Run pre-launch task]\n    StartCompound --\u003e StartConfig1[Start configuration 1]\n    StartCompound --\u003e StartConfig2[Start configuration 2]\n    StartCompound --\u003e StartConfig3[Start configuration 3]\n    \n    StartConfig1 --\u003e Session1[Debug Session 1]\n    StartConfig2 --\u003e Session2[Debug Session 2]\n    StartConfig3 --\u003e Session3[Debug Session 3]\n```\n\nSources:\n- [src/vs/workbench/contrib/debug/browser/debugService.ts:382-432](src/vs/workbench/contrib/debug/browser/debugService.ts:382-432)\n\n## Conclusion\n\nThe Debug Service and Session Management system in VS Code provides a robust architecture for debugging applications. It manages the lifecycle of debug sessions, communicates with debug adapters, and integrates with the VS Code UI to provide a seamless debugging experience.\n\nThe key components are:\n\n1. **DebugService**: The central coordinator for all debugging activities\n2. **DebugSession**: Represents a single debug session and manages communication with the debug adapter\n3. **RawDebugSession**: Handles the direct communication with the debug adapter\n4. **DebugModel**: Represents the state of the debugging session\n5. **ViewModel**: Represents the UI state of the debugging session\n\nThese components work together to provide a powerful and flexible debugging experience in VS Code."])</script>
    <script>self.__next_f.push([1, "2a:T5aa5,"])</script>
    <script>self.__next_f.push([1, "# Debug Adapter Protocol\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/workbench/api/browser/mainThreadDebugService.ts](src/vs/workbench/api/browser/mainThreadDebugService.ts)\n- [src/vs/workbench/api/common/extHostDebugService.ts](src/vs/workbench/api/common/extHostDebugService.ts)\n- [src/vs/workbench/contrib/debug/browser/baseDebugView.ts](src/vs/workbench/contrib/debug/browser/baseDebugView.ts)\n- [src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts](src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/breakpointsView.ts](src/vs/workbench/contrib/debug/browser/breakpointsView.ts)\n- [src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts](src/vs/workbench/contrib/debug/browser/callStackEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/callStackView.ts](src/vs/workbench/contrib/debug/browser/callStackView.ts)\n- [src/vs/workbench/contrib/debug/browser/debug.contribution.ts](src/vs/workbench/contrib/debug/browser/debug.contribution.ts)\n- [src/vs/workbench/contrib/debug/browser/debugActionViewItems.ts](src/vs/workbench/contrib/debug/browser/debugActionViewItems.ts)\n- [src/vs/workbench/contrib/debug/browser/debugCommands.ts](src/vs/workbench/contrib/debug/browser/debugCommands.ts)\n- [src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts](src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts)\n- [src/vs/workbench/contrib/debug/browser/debugEditorActions.ts](src/vs/workbench/contrib/debug/browser/debugEditorActions.ts)\n- [src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts](src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts)\n- [src/vs/workbench/contrib/debug/browser/debugHover.ts](src/vs/workbench/contrib/debug/browser/debugHover.ts)\n- [src/vs/workbench/contrib/debug/browser/debugService.ts](src/vs/workbench/contrib/debug/browser/debugService.ts)\n- [src/vs/workbench/contrib/debug/browser/debugSession.ts](src/vs/workbench/contrib/debug/browser/debugSession.ts)\n- [src/vs/workbench/contrib/debug/browser/debugToolBar.ts](src/vs/workbench/contrib/debug/browser/debugToolBar.ts)\n- [src/vs/workbench/contrib/debug/browser/debugViewlet.ts](src/vs/workbench/contrib/debug/browser/debugViewlet.ts)\n- [src/vs/workbench/contrib/debug/browser/disassemblyView.ts](src/vs/workbench/contrib/debug/browser/disassemblyView.ts)\n- [src/vs/workbench/contrib/debug/browser/exceptionWidget.ts](src/vs/workbench/contrib/debug/browser/exceptionWidget.ts)\n- [src/vs/workbench/contrib/debug/browser/loadedScriptsView.ts](src/vs/workbench/contrib/debug/browser/loadedScriptsView.ts)\n- [src/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css](src/vs/workbench/contrib/debug/browser/media/callStackEditorContribution.css)\n- [src/vs/workbench/contrib/debug/browser/media/debug.contribution.css](src/vs/workbench/contrib/debug/browser/media/debug.contribution.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugHover.css](src/vs/workbench/contrib/debug/browser/media/debugHover.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugToolBar.css](src/vs/workbench/contrib/debug/browser/media/debugToolBar.css)\n- [src/vs/workbench/contrib/debug/browser/media/debugViewlet.css](src/vs/workbench/contrib/debug/browser/media/debugViewlet.css)\n- [src/vs/workbench/contrib/debug/browser/media/exceptionWidget.css](src/vs/workbench/contrib/debug/browser/media/exceptionWidget.css)\n- [src/vs/workbench/contrib/debug/browser/media/repl.css](src/vs/workbench/contrib/debug/browser/media/repl.css)\n- [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts](src/vs/workbench/contrib/debug/browser/rawDebugSession.ts)\n- [src/vs/workbench/contrib/debug/browser/repl.ts](src/vs/workbench/contrib/debug/browser/repl.ts)\n- [src/vs/workbench/contrib/debug/browser/replFilter.ts](src/vs/workbench/contrib/debug/browser/replFilter.ts)\n- [src/vs/workbench/contrib/debug/browser/replViewer.ts](src/vs/workbench/contrib/debug/browser/replViewer.ts)\n- [src/vs/workbench/contrib/debug/browser/variablesView.ts](src/vs/workbench/contrib/debug/browser/variablesView.ts)\n- [src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts](src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts)\n- [src/vs/workbench/contrib/debug/common/debug.ts](src/vs/workbench/contrib/debug/common/debug.ts)\n- [src/vs/workbench/contrib/debug/common/debugModel.ts](src/vs/workbench/contrib/debug/common/debugModel.ts)\n- [src/vs/workbench/contrib/debug/common/debugStorage.ts](src/vs/workbench/contrib/debug/common/debugStorage.ts)\n- [src/vs/workbench/contrib/debug/common/replModel.ts](src/vs/workbench/contrib/debug/common/replModel.ts)\n- [src/vs/workbench/contrib/debug/test/browser/baseDebugView.test.ts](src/vs/workbench/contrib/debug/test/browser/baseDebugView.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/breakpoints.test.ts](src/vs/workbench/contrib/debug/test/browser/breakpoints.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/callStack.test.ts](src/vs/workbench/contrib/debug/test/browser/callStack.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugHover.test.ts](src/vs/workbench/contrib/debug/test/browser/debugHover.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts](src/vs/workbench/contrib/debug/test/browser/debugSource.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/debugViewModel.test.ts](src/vs/workbench/contrib/debug/test/browser/debugViewModel.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts](src/vs/workbench/contrib/debug/test/browser/mockDebugModel.ts)\n- [src/vs/workbench/contrib/debug/test/browser/rawDebugSession.test.ts](src/vs/workbench/contrib/debug/test/browser/rawDebugSession.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/repl.test.ts](src/vs/workbench/contrib/debug/test/browser/repl.test.ts)\n- [src/vs/workbench/contrib/debug/test/browser/watch.test.ts](src/vs/workbench/contrib/debug/test/browser/watch.test.ts)\n- [src/vs/workbench/contrib/debug/test/common/debugModel.test.ts](src/vs/workbench/contrib/debug/test/common/debugModel.test.ts)\n- [src/vs/workbench/contrib/debug/test/common/mockDebug.ts](src/vs/workbench/contrib/debug/test/common/mockDebug.ts)\n- [src/vs/workbench/contrib/files/browser/views/emptyView.ts](src/vs/workbench/contrib/files/browser/views/emptyView.ts)\n- [src/vs/workbench/contrib/files/browser/views/openEditorsView.ts](src/vs/workbench/contrib/files/browser/views/openEditorsView.ts)\n\n\u003c/details\u003e\n\n\n\nThe Debug Adapter Protocol (DAP) is a JSON-based protocol that standardizes the communication between a development tool (like VS Code) and a debugger or runtime environment. This page explains how VS Code implements the Debug Adapter Protocol, focusing on the architecture, components, and interactions that enable debugging across different languages and platforms.\n\nFor information about the Debug Service architecture, see [Debug Service](#6.1). For information about the Extension Host Protocol, see [Extension Host Protocol](#4.1).\n\n## Overview\n\nThe Debug Adapter Protocol allows VS Code to communicate with various debuggers in a standardized way. It defines a set of requests, responses, and events that enable common debugging actions like setting breakpoints, stepping through code, inspecting variables, and evaluating expressions, regardless of the programming language or runtime being debugged.\n\n```mermaid\nflowchart TB\n    subgraph \"VS Code\"\n        DebugService[\"DebugService\"]\n        DebugSession[\"DebugSession\"]\n        RawDebugSession[\"RawDebugSession\"]\n    end\n    \n    subgraph \"Debug Adapter\"\n        DebugAdapter[\"Debug Adapter\"]\n    end\n    \n    subgraph \"Target\"\n        DebugTarget[\"Debug Target (Program)\"]\n    end\n    \n    DebugService --\u003e DebugSession\n    DebugSession --\u003e RawDebugSession\n    RawDebugSession \u003c--\u003e |\"Debug Adapter Protocol\"| DebugAdapter\n    DebugAdapter \u003c--\u003e |\"Debugger-specific Protocol\"| DebugTarget\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/debugSession.ts:1-100](), [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:1-50](), [src/vs/workbench/contrib/debug/common/debug.ts:1-100]()\n\n## Protocol Architecture\n\nThe Debug Adapter Protocol is designed as a client-server architecture where VS Code acts as the client (debug service) and communicates with debug adapters that act as servers. Each debug adapter is specific to a programming language or runtime and translates between the Debug Adapter Protocol and the native debugging protocol of the target runtime.\n\n```mermaid\nflowchart LR\n    subgraph \"VS Code\"\n        DebugService[\"DebugService\"]\n        DebugSession[\"DebugSession\"]\n        RawDebugSession[\"RawDebugSession\"]\n    end\n    \n    subgraph \"Debug Adapters\"\n        NodeAdapter[\"Node.js Adapter\"]\n        PythonAdapter[\"Python Adapter\"]\n        JavaAdapter[\"Java Adapter\"]\n        OtherAdapters[\"Other Adapters...\"]\n    end\n    \n    subgraph \"Debug Targets\"\n        NodeRuntime[\"Node.js Runtime\"]\n        PythonRuntime[\"Python Runtime\"]\n        JavaRuntime[\"Java Runtime\"]\n        OtherRuntimes[\"Other Runtimes...\"]\n    end\n    \n    RawDebugSession \u003c--\u003e |\"DAP\"| NodeAdapter\n    RawDebugSession \u003c--\u003e |\"DAP\"| PythonAdapter\n    RawDebugSession \u003c--\u003e |\"DAP\"| JavaAdapter\n    RawDebugSession \u003c--\u003e |\"DAP\"| OtherAdapters\n    \n    NodeAdapter \u003c--\u003e NodeRuntime\n    PythonAdapter \u003c--\u003e PythonRuntime\n    JavaAdapter \u003c--\u003e JavaRuntime\n    OtherAdapters \u003c--\u003e OtherRuntimes\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/debugService.ts:1-100](), [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:1-100]()\n\n## Protocol Message Types\n\nThe Debug Adapter Protocol defines several types of messages that are exchanged between VS Code and debug adapters:\n\n1. **Requests**: Commands sent from VS Code to the debug adapter (e.g., \"launch\", \"setBreakpoints\")\n2. **Responses**: Replies from the debug adapter to VS Code's requests\n3. **Events**: Notifications sent from the debug adapter to VS Code (e.g., \"stopped\", \"output\")\n\n### Key Protocol Messages\n\n| Message Type | Direction | Examples | Purpose |\n|--------------|-----------|----------|---------|\n| Request | VS Code → Adapter | launch, attach, setBreakpoints | Command the adapter to perform an action |\n| Response | Adapter → VS Code | Success/failure with data | Acknowledge requests and return results |\n| Event | Adapter → VS Code | stopped, output, terminated | Notify VS Code of state changes |\n\nSources: [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:50-150](), [src/vs/workbench/contrib/debug/common/debug.ts:400-500]()\n\n## Implementation in VS Code\n\nVS Code's implementation of the Debug Adapter Protocol is centered around several key classes:\n\n### Core Components\n\n```mermaid\nclassDiagram\n    class IDebugService {\n        +getModel(): IDebugModel\n        +startDebugging()\n        +restartSession()\n        +stopSession()\n    }\n    \n    class DebugSession {\n        +id: string\n        +configuration: IConfig\n        +state: State\n        +capabilities: DebugProtocol.Capabilities\n        +initialize()\n        +launchOrAttach()\n        +terminate()\n        +disconnect()\n    }\n    \n    class RawDebugSession {\n        +capabilities: DebugProtocol.Capabilities\n        +sendRequest()\n        +sendResponse()\n        +onEvent()\n    }\n    \n    class IDebugAdapter {\n        +startSession()\n        +stopSession()\n        +sendMessage()\n        +handleMessage()\n    }\n    \n    IDebugService --\u003e DebugSession : manages\n    DebugSession --\u003e RawDebugSession : uses\n    RawDebugSession --\u003e IDebugAdapter : communicates with\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/debugService.ts:60-100](), [src/vs/workbench/contrib/debug/browser/debugSession.ts:50-100](), [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:40-60]()\n\n### DebugSession\n\nThe `DebugSession` class represents a debugging session in VS Code. It manages the lifecycle of a debug session and provides high-level methods for interacting with the debug adapter.\n\nKey responsibilities:\n- Initializing the debug adapter\n- Launching or attaching to the target program\n- Managing breakpoints\n- Handling debug events\n- Terminating the debug session\n\nSources: [src/vs/workbench/contrib/debug/browser/debugSession.ts:50-400]()\n\n### RawDebugSession\n\nThe `RawDebugSession` class handles the direct communication with the debug adapter. It encapsulates the Debug Adapter Protocol implementation and provides methods for sending requests and handling responses and events.\n\nKey responsibilities:\n- Sending protocol messages to the debug adapter\n- Processing responses and events from the debug adapter\n- Managing the debug adapter lifecycle\n- Handling protocol-specific details\n\nSources: [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:40-200]()\n\n## Protocol Initialization Flow\n\nWhen a debug session is started, VS Code follows a specific sequence to initialize the debug adapter and begin debugging:\n\n```mermaid\nsequenceDiagram\n    participant VS as VS Code\n    participant DS as DebugSession\n    participant RDS as RawDebugSession\n    participant DA as Debug Adapter\n    participant Target as Debug Target\n    \n    VS-\u003e\u003eDS: startDebugging()\n    DS-\u003e\u003eRDS: initialize()\n    RDS-\u003e\u003eDA: initialize request\n    DA--\u003e\u003eRDS: initialized event\n    RDS--\u003e\u003eDS: onDidInitialize\n    DS-\u003e\u003eRDS: launchOrAttach(config)\n    RDS-\u003e\u003eDA: launch/attach request\n    DA-\u003e\u003eTarget: Start debugging\n    DA--\u003e\u003eRDS: success response\n    RDS--\u003e\u003eDS: success\n    DS--\u003e\u003eVS: Debug session started\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/debugService.ts:350-450](), [src/vs/workbench/contrib/debug/browser/debugSession.ts:330-400](), [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:150-200]()\n\n## Breakpoint Management\n\nBreakpoints are a fundamental part of debugging. VS Code manages breakpoints through the Debug Adapter Protocol:\n\n```mermaid\nsequenceDiagram\n    participant Editor as Editor\n    participant DS as DebugService\n    participant Session as DebugSession\n    participant DA as Debug Adapter\n    \n    Editor-\u003e\u003eDS: setBreakpoint(uri, line, column)\n    DS-\u003e\u003eDS: addBreakpoints to model\n    DS-\u003e\u003eSession: sendBreakpoints(uri, breakpoints)\n    Session-\u003e\u003eDA: setBreakpointsRequest\n    DA--\u003e\u003eSession: setBreakpointsResponse\n    Session-\u003e\u003eDS: Update breakpoint status\n    DS-\u003e\u003eEditor: Show breakpoint in editor\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/debugSession.ts:480-550](), [src/vs/workbench/contrib/debug/browser/breakpointEditorContribution.ts:1-100]()\n\n## Execution Control\n\nThe Debug Adapter Protocol provides commands for controlling the execution of the debugged program:\n\n| Command | Purpose | Implementation |\n|---------|---------|----------------|\n| continue | Resume execution | `DebugSession.continue()` |\n| next | Step over | `DebugSession.next()` |\n| stepIn | Step into | `DebugSession.stepIn()` |\n| stepOut | Step out | `DebugSession.stepOut()` |\n| pause | Pause execution | `DebugSession.pause()` |\n| terminate | End debugging | `DebugSession.terminate()` |\n\nSources: [src/vs/workbench/contrib/debug/browser/debugSession.ts:440-480](), [src/vs/workbench/contrib/debug/browser/debugCommands.ts:50-70]()\n\n## Variable and Expression Evaluation\n\nThe Debug Adapter Protocol allows VS Code to inspect variables and evaluate expressions in the context of the debugged program:\n\n```mermaid\nflowchart TD\n    subgraph \"VS Code UI\"\n        Variables[\"Variables View\"]\n        Watch[\"Watch View\"]\n        REPL[\"Debug Console\"]\n        Hover[\"Debug Hover\"]\n    end\n    \n    subgraph \"Debug Protocol\"\n        Scopes[\"scopes request\"]\n        GetVars[\"variables request\"]\n        Evaluate[\"evaluate request\"]\n        SetVar[\"setVariable request\"]\n    end\n    \n    Variables --\u003e Scopes\n    Variables --\u003e GetVars\n    Watch --\u003e Evaluate\n    REPL --\u003e Evaluate\n    Hover --\u003e Evaluate\n    \n    Variables --\u003e SetVar\n    Watch --\u003e SetVar\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/variablesView.ts:1-100](), [src/vs/workbench/contrib/debug/browser/watchExpressionsView.ts:1-50](), [src/vs/workbench/contrib/debug/browser/repl.ts:1-100]()\n\n## Debug Adapter Capabilities\n\nDebug adapters can advertise their capabilities to VS Code, which allows VS Code to enable or disable certain features based on what the adapter supports:\n\n```typescript\ninterface Capabilities {\n    supportsConfigurationDoneRequest?: boolean;\n    supportsFunctionBreakpoints?: boolean;\n    supportsConditionalBreakpoints?: boolean;\n    supportsHitConditionalBreakpoints?: boolean;\n    supportsEvaluateForHovers?: boolean;\n    supportsStepBack?: boolean;\n    supportsSetVariable?: boolean;\n    supportsRestartFrame?: boolean;\n    supportsGotoTargetsRequest?: boolean;\n    supportsStepInTargetsRequest?: boolean;\n    supportsCompletionsRequest?: boolean;\n    // ... and many more\n}\n```\n\nVS Code uses these capabilities to dynamically adjust its UI and behavior. For example, the \"Step Back\" button is only enabled if the debug adapter supports stepping backwards.\n\nSources: [src/vs/workbench/contrib/debug/common/debug.ts:400-450](), [src/vs/workbench/contrib/debug/browser/debugSession.ts:280-300]()\n\n## Debug Adapter Implementation\n\nDebug adapters can be implemented in various ways:\n\n1. **In-process**: The adapter runs within VS Code's process\n2. **Server**: The adapter runs as a separate process that VS Code communicates with\n3. **Executable**: VS Code launches the adapter as a separate executable\n4. **Named Pipe**: VS Code connects to the adapter via a named pipe\n\n```mermaid\nflowchart LR\n    subgraph \"VS Code\"\n        DebugService\n    end\n    \n    subgraph \"Adapter Types\"\n        InProcess[\"In-process Adapter\"]\n        Server[\"Server Adapter\"]\n        Executable[\"Executable Adapter\"]\n        NamedPipe[\"Named Pipe Adapter\"]\n    end\n    \n    DebugService --\u003e InProcess\n    DebugService --\u003e Server\n    DebugService --\u003e Executable\n    DebugService --\u003e NamedPipe\n```\n\nSources: [src/vs/workbench/contrib/debug/common/debug.ts:180-220](), [src/vs/workbench/contrib/debug/browser/debugAdapterManager.ts:1-50]()\n\n## Extension Integration\n\nVS Code extensions can contribute debug adapters through the extension API. This allows extensions to provide debugging support for specific languages or runtimes.\n\n```mermaid\nflowchart TD\n    subgraph \"VS Code\"\n        DebugService\n        AdapterManager[\"AdapterManager\"]\n    end\n    \n    subgraph \"Extensions\"\n        NodeExt[\"Node.js Extension\"]\n        PythonExt[\"Python Extension\"]\n        JavaExt[\"Java Extension\"]\n    end\n    \n    subgraph \"Debug Adapters\"\n        NodeAdapter[\"Node.js Adapter\"]\n        PythonAdapter[\"Python Adapter\"]\n        JavaAdapter[\"Java Adapter\"]\n    end\n    \n    NodeExt --\u003e NodeAdapter\n    PythonExt --\u003e PythonAdapter\n    JavaExt --\u003e JavaAdapter\n    \n    AdapterManager --\u003e NodeAdapter\n    AdapterManager --\u003e PythonAdapter\n    AdapterManager --\u003e JavaAdapter\n    \n    DebugService --\u003e AdapterManager\n```\n\nSources: [src/vs/workbench/api/browser/mainThreadDebugService.ts:1-50](), [src/vs/workbench/api/common/extHostDebugService.ts:1-50]()\n\n## Debug Configuration\n\nDebug configurations are defined in `launch.json` files and specify how to launch or attach to a program for debugging. The Debug Adapter Protocol uses these configurations to start debugging sessions.\n\n```json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"name\": \"Launch Program\",\n            \"program\": \"${workspaceFolder}/app.js\"\n        }\n    ]\n}\n```\n\nVS Code provides a configuration manager that handles loading, resolving, and managing debug configurations.\n\nSources: [src/vs/workbench/contrib/debug/browser/debugConfigurationManager.ts:1-100]()\n\n## Error Handling\n\nThe Debug Adapter Protocol includes mechanisms for error handling:\n\n1. **Response errors**: Debug adapters can return error responses to requests\n2. **Event notifications**: Debug adapters can send events to notify VS Code of errors\n3. **Termination events**: Debug adapters can notify VS Code when they terminate unexpectedly\n\nVS Code handles these errors and presents appropriate UI feedback to the user.\n\nSources: [src/vs/workbench/contrib/debug/browser/rawDebugSession.ts:200-250](), [src/vs/workbench/contrib/debug/browser/debugSession.ts:400-450]()\n\n## UI Integration\n\nVS Code's UI integrates with the Debug Adapter Protocol through various components:\n\n```mermaid\nflowchart TD\n    subgraph \"Debug Views\"\n        Variables[\"Variables View\"]\n        Watch[\"Watch View\"]\n        CallStack[\"Call Stack View\"]\n        Breakpoints[\"Breakpoints View\"]\n        REPL[\"Debug Console\"]\n    end\n    \n    subgraph \"Editor Integration\"\n        Hover[\"Debug Hover\"]\n        InlineValues[\"Inline Values\"]\n        BreakpointGutter[\"Breakpoint Gutter\"]\n        ExceptionWidget[\"Exception Widget\"]\n    end\n    \n    subgraph \"Debug Protocol\"\n        DAP[\"Debug Adapter Protocol\"]\n    end\n    \n    Variables --\u003e DAP\n    Watch --\u003e DAP\n    CallStack --\u003e DAP\n    Breakpoints --\u003e DAP\n    REPL --\u003e DAP\n    \n    Hover --\u003e DAP\n    InlineValues --\u003e DAP\n    BreakpointGutter --\u003e DAP\n    ExceptionWidget --\u003e DAP\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/variablesView.ts:1-50](), [src/vs/workbench/contrib/debug/browser/callStackView.ts:1-50](), [src/vs/workbench/contrib/debug/browser/breakpointsView.ts:1-50](), [src/vs/workbench/contrib/debug/browser/repl.ts:1-50](), [src/vs/workbench/contrib/debug/browser/debugHover.ts:1-50](), [src/vs/workbench/contrib/debug/browser/debugEditorContribution.ts:1-50]()\n\n## Multi-Session Debugging\n\nVS Code supports debugging multiple programs simultaneously through multiple debug sessions. Each session communicates with its own debug adapter using the Debug Adapter Protocol.\n\n```mermaid\nflowchart TD\n    subgraph \"VS Code\"\n        DebugService\n        Session1[\"Debug Session 1\"]\n        Session2[\"Debug Session 2\"]\n        Session3[\"Debug Session 3\"]\n    end\n    \n    subgraph \"Debug Adapters\"\n        Adapter1[\"Debug Adapter 1\"]\n        Adapter2[\"Debug Adapter 2\"]\n        Adapter3[\"Debug Adapter 3\"]\n    end\n    \n    DebugService --\u003e Session1\n    DebugService --\u003e Session2\n    DebugService --\u003e Session3\n    \n    Session1 \u003c--\u003e |\"DAP\"| Adapter1\n    Session2 \u003c--\u003e |\"DAP\"| Adapter2\n    Session3 \u003c--\u003e |\"DAP\"| Adapter3\n```\n\nSources: [src/vs/workbench/contrib/debug/browser/debugService.ts:150-200](), [src/vs/workbench/contrib/debug/browser/debugToolBar.ts:1-50]()\n\n## Conclusion\n\nThe Debug Adapter Protocol is a powerful abstraction that enables VS Code to support debugging for a wide range of programming languages and runtimes. By standardizing the communication between the editor and debug adapters, it allows VS Code to provide a consistent debugging experience regardless of the underlying debugger implementation.\n\nThe protocol's design allows for extensibility, enabling new debugging features to be added while maintaining backward compatibility. This has allowed VS Code's debugging capabilities to evolve over time, supporting advanced features like conditional breakpoints, data breakpoints, and debug visualizations."])</script>
    <script>self.__next_f.push([1, "2b:T5bf8,"])</script>
    <script>self.__next_f.push([1, "# Task System\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/src/singlefolder-tests/terminal.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/terminal.test.ts)\n- [extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts)\n- [src/vs/workbench/api/browser/mainThreadTask.ts](src/vs/workbench/api/browser/mainThreadTask.ts)\n- [src/vs/workbench/api/common/extHostTask.ts](src/vs/workbench/api/common/extHostTask.ts)\n- [src/vs/workbench/api/common/shared/tasks.ts](src/vs/workbench/api/common/shared/tasks.ts)\n- [src/vs/workbench/api/node/extHostTask.ts](src/vs/workbench/api/node/extHostTask.ts)\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts)\n- [src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts](src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts)\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts](src/vs/workbench/contrib/tasks/browser/task.contribution.ts)\n- [src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts](src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts)\n- [src/vs/workbench/contrib/tasks/browser/taskService.ts](src/vs/workbench/contrib/tasks/browser/taskService.ts)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts)\n- [src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts](src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts)\n- [src/vs/workbench/contrib/tasks/common/taskConfiguration.ts](src/vs/workbench/contrib/tasks/common/taskConfiguration.ts)\n- [src/vs/workbench/contrib/tasks/common/taskService.ts](src/vs/workbench/contrib/tasks/common/taskService.ts)\n- [src/vs/workbench/contrib/tasks/common/tasks.ts](src/vs/workbench/contrib/tasks/common/tasks.ts)\n- [src/vs/workbench/contrib/tasks/electron-sandbox/taskService.ts](src/vs/workbench/contrib/tasks/electron-sandbox/taskService.ts)\n\n\u003c/details\u003e\n\n\n\nThe VS Code Task System provides a framework for executing build, test, and other automation tasks within the editor. It allows users to define, configure, and run tasks from various sources including workspace configuration files, extensions, and user settings.\n\nThis document covers the core architecture of the Task System, how tasks are defined, resolved, and executed, and how the system integrates with other VS Code components like the terminal service.\n\n## Overview\n\nThe Task System enables users to automate common development workflows by defining tasks that can be executed within VS Code. Tasks can be configured to run shell commands, external processes, or custom execution logic provided by extensions.\n\n```mermaid\nflowchart TD\n    subgraph \"Task System Core\"\n        TaskService[\"TaskService\"]\n        TaskSystem[\"TaskSystem\"]\n        TaskExecution[\"TaskExecution\"]\n        TaskTerminal[\"TerminalTaskSystem\"]\n    end\n    \n    subgraph \"Task Definition\"\n        TaskConfig[\"Task Configuration\"]\n        TaskDefinition[\"TaskDefinition\"]\n        ProblemMatcher[\"ProblemMatcher\"]\n    end\n    \n    subgraph \"Task Sources\"\n        TasksJson[\"tasks.json\"]\n        Extensions[\"Extension Providers\"]\n        UserTasks[\"User Tasks\"]\n    end\n    \n    subgraph \"Execution\"\n        Terminal[\"Terminal Service\"]\n        ProcessExec[\"Process Execution\"]\n        ShellExec[\"Shell Execution\"]\n        CustomExec[\"Custom Execution\"]\n    end\n    \n    TasksJson --\u003e TaskConfig\n    Extensions --\u003e TaskConfig\n    UserTasks --\u003e TaskConfig\n    \n    TaskConfig --\u003e TaskService\n    TaskService --\u003e TaskSystem\n    TaskSystem --\u003e TaskExecution\n    TaskExecution --\u003e TaskTerminal\n    \n    TaskTerminal --\u003e Terminal\n    TaskTerminal --\u003e ProcessExec\n    TaskTerminal --\u003e ShellExec\n    TaskTerminal --\u003e CustomExec\n    \n    TaskDefinition --\u003e TaskConfig\n    ProblemMatcher --\u003e TaskExecution\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:189-195](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:189-195)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:143-146](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:143-146)\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:50-85](src/vs/workbench/contrib/tasks/common/tasks.ts:50-85)\n\n## Task Service Architecture\n\nThe Task Service is the central component of the Task System, responsible for managing task definitions, resolving tasks, and executing them. It implements the `ITaskService` interface and serves as the entry point for other VS Code components to interact with tasks.\n\n```mermaid\nclassDiagram\n    class ITaskService {\n        +onDidStateChange: Event\u003cITaskEvent\u003e\n        +onDidReconnectToTasks: Event\u003cvoid\u003e\n        +run(task: Task, options?: IProblemMatcherRunOptions): Promise\u003cITaskSummary\u003e\n        +terminate(task: Task): Promise\u003cITaskTerminateResponse\u003e\n        +tasks(filter?: ITaskFilter): Promise\u003cTask[]\u003e\n        +getTask(workspaceFolder, alias, compareId?): Promise\u003cTask\u003e\n        +registerTaskProvider(provider: ITaskProvider, type: string): IDisposable\n    }\n    \n    class AbstractTaskService {\n        -_taskSystem: ITaskSystem\n        -_providers: Map\u003cnumber, ITaskProvider\u003e\n        -_workspaceTasks: Promise\u003cMap\u003cstring, IWorkspaceFolderTaskResult\u003e\u003e\n        +run(task: Task): ITaskExecuteResult\n        +terminate(task: Task): Promise\u003cITaskTerminateResponse\u003e\n        #_getTaskSystem(): ITaskSystem\n    }\n    \n    class TaskService {\n        #_getTaskSystem(): ITaskSystem\n        #_versionAndEngineCompatible(filter?: ITaskFilter): boolean\n    }\n    \n    class ITaskSystem {\n        +run(task: Task): ITaskExecuteResult\n        +terminate(task: Task): Promise\u003cITaskTerminateResponse\u003e\n        +isActive(): Promise\u003cboolean\u003e\n        +onDidStateChange: Event\u003cITaskEvent\u003e\n    }\n    \n    class TerminalTaskSystem {\n        -_activeTasks: IStringDictionary\u003cIActiveTerminalData\u003e\n        -_terminals: IStringDictionary\u003cITerminalData\u003e\n        +run(task: Task, resolver: ITaskResolver): ITaskExecuteResult\n        +terminate(task: Task): Promise\u003cITaskTerminateResponse\u003e\n    }\n    \n    ITaskService \u003c|.. AbstractTaskService\n    AbstractTaskService \u003c|-- TaskService\n    AbstractTaskService --\u003e ITaskSystem\n    ITaskSystem \u003c|.. TerminalTaskSystem\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/taskService.ts:64-107](src/vs/workbench/contrib/tasks/common/taskService.ts:64-107)\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:189-195](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:189-195)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:143-146](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:143-146)\n\n### Task Service Implementation\n\nThe `AbstractTaskService` class provides the core implementation of the Task Service, with platform-specific implementations extending it:\n\n1. `TaskService` (browser) - For web-based VS Code, supporting only terminal-based tasks\n2. `TaskService` (electron-sandbox) - For desktop VS Code, supporting both terminal and process-based tasks\n\nThe Task Service maintains:\n- A registry of task providers from extensions\n- A cache of workspace tasks\n- The current task system implementation\n- State for running tasks\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/taskService.ts:14-44](src/vs/workbench/contrib/tasks/browser/taskService.ts:14-44)\n- [src/vs/workbench/contrib/tasks/electron-sandbox/taskService.ts:58-132](src/vs/workbench/contrib/tasks/electron-sandbox/taskService.ts:58-132)\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:244-384](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:244-384)\n\n## Task Definitions\n\nTasks are defined by their type, properties, and execution details. The Task System supports several types of tasks:\n\n1. **Contributed Tasks** - Tasks provided by extensions\n2. **Custom Tasks** - User-defined tasks in tasks.json\n3. **Configuring Tasks** - Tasks that need to be resolved before execution\n\n```mermaid\nclassDiagram\n    class Task {\n        +_id: string\n        +_source: TaskSource\n        +_label: string\n        +_identifier: KeyedTaskIdentifier\n        +configurationProperties: IConfigurationProperties\n        +runOptions: IRunOptions\n        +getDefinition(): KeyedTaskIdentifier\n        +getMapKey(): string\n    }\n    \n    class ContributedTask {\n        +_source: IExtensionTaskSource\n        +defines: KeyedTaskIdentifier\n    }\n    \n    class CustomTask {\n        +_source: IWorkspaceTaskSource\n        +configures: KeyedTaskIdentifier\n    }\n    \n    class ConfiguringTask {\n        +_source: TaskSource\n        +configures: KeyedTaskIdentifier\n    }\n    \n    class KeyedTaskIdentifier {\n        +type: string\n        +_key: string\n    }\n    \n    Task \u003c|-- ContributedTask\n    Task \u003c|-- CustomTask\n    Task \u003c|-- ConfiguringTask\n    Task --\u003e KeyedTaskIdentifier\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:476-489](src/vs/workbench/contrib/tasks/common/tasks.ts:476-489)\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:1000-1100](src/vs/workbench/contrib/tasks/common/tasks.ts:1000-1100)\n- [src/vs/workbench/contrib/tasks/common/taskConfiguration.ts:1000-1100](src/vs/workbench/contrib/tasks/common/taskConfiguration.ts:1000-1100)\n\n### Task Properties\n\nTasks have various properties that define their behavior:\n\n| Property | Description |\n|----------|-------------|\n| `type` | The task type (e.g., \"shell\", \"process\", \"npm\") |\n| `label` | Display name for the task |\n| `command` | The command to execute |\n| `args` | Arguments for the command |\n| `group` | Task group (e.g., \"build\", \"test\") |\n| `presentation` | Terminal presentation options |\n| `problemMatchers` | Problem matchers to detect errors |\n| `dependsOn` | Other tasks this task depends on |\n| `isBackground` | Whether the task runs in the background |\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:495-561](src/vs/workbench/contrib/tasks/common/tasks.ts:495-561)\n- [src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts:100-130](src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts:100-130)\n\n## Task Execution\n\nThe Task System supports three types of task execution:\n\n1. **Shell Execution** - Runs commands in a shell (e.g., bash, PowerShell)\n2. **Process Execution** - Runs external processes directly\n3. **Custom Execution** - Allows extensions to provide custom execution logic\n\n```mermaid\nflowchart TD\n    TaskService[\"TaskService.run()\"]\n    TaskSystem[\"TaskSystem.run()\"]\n    TerminalTaskSystem[\"TerminalTaskSystem.run()\"]\n    ExecuteTask[\"_executeTask()\"]\n    ExecuteCommand[\"_executeCommand()\"]\n    \n    subgraph \"Execution Types\"\n        ShellExecution[\"Shell Execution\"]\n        ProcessExecution[\"Process Execution\"]\n        CustomExecution[\"Custom Execution\"]\n    end\n    \n    TaskService --\u003e TaskSystem\n    TaskSystem --\u003e TerminalTaskSystem\n    TerminalTaskSystem --\u003e ExecuteTask\n    ExecuteTask --\u003e ExecuteCommand\n    \n    ExecuteCommand --\u003e ShellExecution\n    ExecuteCommand --\u003e ProcessExecution\n    ExecuteCommand --\u003e CustomExecution\n    \n    ShellExecution --\u003e Terminal[\"Terminal Instance\"]\n    ProcessExecution --\u003e Terminal\n    CustomExecution --\u003e Terminal\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:504-580](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:504-580)\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:288-315](src/vs/workbench/contrib/tasks/common/tasks.ts:288-315)\n- [src/vs/workbench/api/common/extHostTask.ts:58-93](src/vs/workbench/api/common/extHostTask.ts:58-93)\n\n### Task Execution Flow\n\nWhen a task is executed, the following steps occur:\n\n1. The task is resolved if it's a configuring task\n2. Dependencies are executed if the task has any\n3. The task execution is created and tracked\n4. The appropriate execution method is called based on the task type\n5. A terminal is created or reused for the task\n6. The command is executed in the terminal\n7. Problem matchers are attached to detect errors\n8. Task events are fired as the task progresses\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:753-884](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:753-884)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:273-305](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:273-305)\n\n## Terminal Integration\n\nThe Task System integrates closely with VS Code's Terminal Service to execute tasks in terminal instances. The `TerminalTaskSystem` class manages the creation and reuse of terminals for tasks.\n\n```mermaid\nflowchart TD\n    TerminalTaskSystem[\"TerminalTaskSystem\"]\n    TerminalService[\"ITerminalService\"]\n    TerminalInstance[\"ITerminalInstance\"]\n    \n    TerminalTaskSystem --\u003e|\"creates/reuses\"| TerminalInstance\n    TerminalService --\u003e|\"manages\"| TerminalInstance\n    \n    subgraph \"Terminal Data\"\n        ActiveTasks[\"_activeTasks: Map\"]\n        Terminals[\"_terminals: Map\"]\n        IdleTerminals[\"_idleTaskTerminals: Map\"]\n    end\n    \n    TerminalTaskSystem --\u003e|\"tracks\"| ActiveTasks\n    TerminalTaskSystem --\u003e|\"tracks\"| Terminals\n    TerminalTaskSystem --\u003e|\"tracks\"| IdleTerminals\n    \n    TerminalInstance --\u003e|\"executes\"| Command[\"Task Command\"]\n    TerminalInstance --\u003e|\"captures\"| Output[\"Task Output\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:185-254](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:185-254)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:347-377](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:347-377)\n\n### Terminal Task System\n\nThe `TerminalTaskSystem` class is responsible for:\n\n1. Creating and managing terminal instances for tasks\n2. Executing tasks in terminals\n3. Tracking active and idle task terminals\n4. Handling task termination\n5. Managing problem matchers for tasks\n\nIt maintains several data structures:\n- `_activeTasks`: Map of currently running tasks\n- `_terminals`: Map of terminals used for tasks\n- `_idleTaskTerminals`: Map of terminals that can be reused for tasks\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:185-254](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:185-254)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:443-468](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:443-468)\n\n## Problem Matchers\n\nProblem matchers are used to detect errors, warnings, and other issues in task output. They use regular expressions to parse the output and create diagnostic markers in the editor.\n\n```mermaid\nflowchart TD\n    TaskExecution[\"Task Execution\"]\n    ProblemMatcher[\"Problem Matcher\"]\n    ProblemCollector[\"Problem Collector\"]\n    MarkerService[\"Marker Service\"]\n    \n    TaskExecution --\u003e|\"attaches\"| ProblemMatcher\n    ProblemMatcher --\u003e|\"creates\"| ProblemCollector\n    ProblemCollector --\u003e|\"parses output\"| TaskOutput[\"Task Output\"]\n    ProblemCollector --\u003e|\"creates markers\"| MarkerService\n    MarkerService --\u003e|\"displays\"| Problems[\"Problems Panel\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/problemMatcher.js](src/vs/workbench/contrib/tasks/common/problemMatcher.js)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:40-41](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:40-41)\n\n## Task Providers\n\nExtensions can contribute task providers to VS Code, which are used to discover and resolve tasks. Task providers implement the `ITaskProvider` interface:\n\n```typescript\ninterface ITaskProvider {\n    provideTasks(validTypes: IStringDictionary\u003cboolean\u003e): Promise\u003cITaskSet\u003e;\n    resolveTask(task: ConfiguringTask): Promise\u003cContributedTask | undefined\u003e;\n}\n```\n\nThe Task Service registers and manages task providers, and uses them to discover tasks when needed.\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/taskService.ts:29-32](src/vs/workbench/contrib/tasks/common/taskService.ts:29-32)\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:686-703](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:686-703)\n- [src/vs/workbench/api/common/extHostTask.ts:95-122](src/vs/workbench/api/common/extHostTask.ts:95-122)\n\n## Task Configuration\n\nTasks can be configured in several ways:\n\n1. **tasks.json** - Workspace-specific task configuration\n2. **Extension Contributed Tasks** - Tasks provided by extensions\n3. **User Tasks** - User-specific task configuration\n\nThe Task System loads and merges tasks from these sources to create the complete set of available tasks.\n\n```mermaid\nflowchart TD\n    TaskService[\"TaskService\"]\n    WorkspaceTasks[\"getWorkspaceTasks()\"]\n    \n    TaskService --\u003e WorkspaceTasks\n    \n    subgraph \"Task Sources\"\n        TasksJson[\"tasks.json\"]\n        Extensions[\"Extension Providers\"]\n        UserTasks[\"User Tasks\"]\n    end\n    \n    WorkspaceTasks --\u003e TasksJson\n    WorkspaceTasks --\u003e Extensions\n    WorkspaceTasks --\u003e UserTasks\n    \n    TasksJson --\u003e TaskParser[\"Task Parser\"]\n    Extensions --\u003e TaskProviders[\"Task Providers\"]\n    UserTasks --\u003e TaskParser\n    \n    TaskParser --\u003e Tasks[\"Task Definitions\"]\n    TaskProviders --\u003e Tasks\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/taskConfiguration.ts:1000-1100](src/vs/workbench/contrib/tasks/common/taskConfiguration.ts:1000-1100)\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:1000-1100](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:1000-1100)\n\n### Task Schema\n\nThe Task System defines a JSON schema for task configuration, which is used to validate and provide IntelliSense for tasks.json files. The schema includes definitions for:\n\n1. Task properties\n2. Execution options\n3. Problem matcher configuration\n4. Presentation options\n5. Task groups\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts:35-130](src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts:35-130)\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts:407-429](src/vs/workbench/contrib/tasks/browser/task.contribution.ts:407-429)\n\n## Task Events\n\nThe Task System fires events as tasks are executed, which are used to update the UI and notify extensions. The main events are:\n\n| Event | Description |\n|-------|-------------|\n| `TaskEventKind.Start` | Task has started |\n| `TaskEventKind.Active` | Task is actively running |\n| `TaskEventKind.Inactive` | Task is paused/waiting |\n| `TaskEventKind.End` | Task has completed |\n| `TaskEventKind.Terminated` | Task was terminated |\n| `TaskEventKind.ProcessStarted` | Task process has started |\n| `TaskEventKind.ProcessEnded` | Task process has ended |\n\nSources:\n- [src/vs/workbench/api/common/shared/tasks.ts:54-93](src/vs/workbench/api/common/shared/tasks.ts:54-93)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:433-441](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:433-441)\n\n## Task Commands and UI Integration\n\nThe Task System integrates with VS Code's command system and UI to provide task-related commands and UI elements.\n\n```mermaid\nflowchart TD\n    Commands[\"Task Commands\"]\n    QuickPick[\"Task Quick Pick\"]\n    StatusBar[\"Task Status Bar\"]\n    TerminalUI[\"Terminal UI\"]\n    \n    Commands --\u003e|\"run task\"| TaskService[\"Task Service\"]\n    Commands --\u003e|\"terminate task\"| TaskService\n    Commands --\u003e|\"configure tasks\"| TaskService\n    \n    QuickPick --\u003e|\"select task\"| TaskService\n    TaskService --\u003e|\"update status\"| StatusBar\n    TaskService --\u003e|\"create/update\"| TerminalUI\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts:63-76](src/vs/workbench/contrib/tasks/browser/task.contribution.ts:63-76)\n- [src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts:49-62](src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts:49-62)\n\n### Task Commands\n\nThe Task System registers several commands for interacting with tasks:\n\n| Command | Description |\n|---------|-------------|\n| `workbench.action.tasks.runTask` | Run a task |\n| `workbench.action.tasks.reRunTask` | Re-run the last task |\n| `workbench.action.tasks.terminate` | Terminate a running task |\n| `workbench.action.tasks.showTasks` | Show running tasks |\n| `workbench.action.tasks.build` | Run the build task |\n| `workbench.action.tasks.test` | Run the test task |\n| `workbench.action.tasks.configureTaskRunner` | Configure tasks |\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:457-567](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:457-567)\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts:167-240](src/vs/workbench/contrib/tasks/browser/task.contribution.ts:167-240)\n\n## Automatic Tasks\n\nThe Task System supports automatically running tasks when a workspace is opened. This is controlled by the `runOn` property in task configuration.\n\n```mermaid\nflowchart TD\n    WorkspaceOpen[\"Workspace Opened\"]\n    RunAutomaticTasks[\"RunAutomaticTasks\"]\n    GetWorkspaceTasks[\"getWorkspaceTasks()\"]\n    FindAutoTasks[\"_findAutoTasks()\"]\n    RunWithPermission[\"_runWithPermission()\"]\n    \n    WorkspaceOpen --\u003e RunAutomaticTasks\n    RunAutomaticTasks --\u003e GetWorkspaceTasks\n    GetWorkspaceTasks --\u003e FindAutoTasks\n    FindAutoTasks --\u003e RunWithPermission\n    RunWithPermission --\u003e|\"if allowed\"| TaskService[\"TaskService.run()\"]\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts:23-47](src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts:23-47)\n- [src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts:56-81](src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts:56-81)\n\n## Extension API\n\nVS Code provides an API for extensions to interact with the Task System. The API allows extensions to:\n\n1. Define task types\n2. Provide task providers\n3. Execute tasks\n4. Listen for task events\n5. Implement custom task execution\n\n```mermaid\nflowchart TD\n    Extension[\"Extension\"]\n    ExtHostTask[\"ExtHostTask\"]\n    MainThreadTask[\"MainThreadTask\"]\n    TaskService[\"TaskService\"]\n    \n    Extension --\u003e|\"registerTaskProvider\"| ExtHostTask\n    Extension --\u003e|\"executeTask\"| ExtHostTask\n    \n    ExtHostTask \u003c--\u003e|\"RPC\"| MainThreadTask\n    MainThreadTask \u003c--\u003e|\"API\"| TaskService\n    \n    subgraph \"Extension Host\"\n        Extension\n        ExtHostTask\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadTask\n        TaskService\n    end\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostTask.ts:29-56](src/vs/workbench/api/common/extHostTask.ts:29-56)\n- [src/vs/workbench/api/browser/mainThreadTask.ts:43-102](src/vs/workbench/api/browser/mainThreadTask.ts:43-102)\n- [extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts:26-45](extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts:26-45)\n\n## Conclusion\n\nThe VS Code Task System provides a flexible and extensible framework for executing tasks within the editor. It supports various task types, execution methods, and configuration options, and integrates closely with other VS Code components like the Terminal Service and Problem Matcher system.\n\nThe core components of the Task System are:\n\n1. **Task Service** - Manages task definitions, providers, and execution\n2. **Terminal Task System** - Executes tasks in terminals\n3. **Task Configuration** - Parses and validates task configuration\n4. **Problem Matchers** - Detects errors and warnings in task output\n\nExtensions can extend the Task System by providing task types and task providers, and users can configure tasks in tasks.json files or through the UI."])</script>
    <script>self.__next_f.push([1, "2c:T5893,"])</script>
    <script>self.__next_f.push([1, "# Task Configuration and Execution\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/src/singlefolder-tests/terminal.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/terminal.test.ts)\n- [extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts)\n- [src/vs/workbench/api/browser/mainThreadTask.ts](src/vs/workbench/api/browser/mainThreadTask.ts)\n- [src/vs/workbench/api/common/extHostTask.ts](src/vs/workbench/api/common/extHostTask.ts)\n- [src/vs/workbench/api/common/shared/tasks.ts](src/vs/workbench/api/common/shared/tasks.ts)\n- [src/vs/workbench/api/node/extHostTask.ts](src/vs/workbench/api/node/extHostTask.ts)\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts](src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts)\n- [src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts](src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts)\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts](src/vs/workbench/contrib/tasks/browser/task.contribution.ts)\n- [src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts](src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts)\n- [src/vs/workbench/contrib/tasks/browser/taskService.ts](src/vs/workbench/contrib/tasks/browser/taskService.ts)\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts](src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts)\n- [src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts](src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts)\n- [src/vs/workbench/contrib/tasks/common/taskConfiguration.ts](src/vs/workbench/contrib/tasks/common/taskConfiguration.ts)\n- [src/vs/workbench/contrib/tasks/common/taskService.ts](src/vs/workbench/contrib/tasks/common/taskService.ts)\n- [src/vs/workbench/contrib/tasks/common/tasks.ts](src/vs/workbench/contrib/tasks/common/tasks.ts)\n- [src/vs/workbench/contrib/tasks/electron-sandbox/taskService.ts](src/vs/workbench/contrib/tasks/electron-sandbox/taskService.ts)\n\n\u003c/details\u003e\n\n\n\nThis document explains how tasks are configured and executed in VS Code. Tasks allow users to automate external operations like building, testing, packaging, or deploying applications. This page covers the task configuration format, how tasks are discovered, resolved, and executed by the task system.\n\nFor information about the task system architecture, see [Core Services and Components](#2).\n\n## Overview\n\nVS Code's task system provides a way to integrate external build tools and processes into the editor. Tasks are defined in configuration files (`tasks.json`), contributed by extensions, or created programmatically through the API. The task system handles parsing these configurations, resolving variables, and executing the commands in terminals or processes.\n\nThe task system supports different execution types:\n- Shell execution (commands run in a shell like bash, PowerShell, cmd)\n- Process execution (direct process spawning)\n- Custom execution (extension-provided task execution)\n\n```mermaid\ngraph TD\n    subgraph \"Task Configuration\"\n        TasksJSON[\"tasks.json\"]\n        ExtensionContributed[\"Extension-contributed tasks\"]\n        API[\"API-created tasks\"]\n    end\n\n    subgraph \"Task Service\"\n        TaskService[\"TaskService\"]\n        TaskResolver[\"Task Resolution\"]\n        TaskExecution[\"Task Execution\"]\n    end\n\n    subgraph \"Task Execution\"\n        TerminalTaskSystem[\"TerminalTaskSystem\"]\n        ShellExecution[\"Shell Execution\"]\n        ProcessExecution[\"Process Execution\"]\n        CustomExecution[\"Custom Execution\"]\n    end\n\n    TasksJSON --\u003e TaskService\n    ExtensionContributed --\u003e TaskService\n    API --\u003e TaskService\n    \n    TaskService --\u003e TaskResolver\n    TaskResolver --\u003e TaskExecution\n    \n    TaskExecution --\u003e TerminalTaskSystem\n    TerminalTaskSystem --\u003e ShellExecution\n    TerminalTaskSystem --\u003e ProcessExecution\n    TerminalTaskSystem --\u003e CustomExecution\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:50-56]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:143-147]()\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:288-315]()\n\n## Task Configuration\n\nTasks are primarily configured in `tasks.json` files, which can exist at the workspace or user level. The configuration format follows a specific schema that defines task properties like command, arguments, problem matchers, and presentation options.\n\n### Task Configuration Format\n\nA basic task configuration in `tasks.json` looks like this:\n\n```json\n{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"My Task\",\n      \"type\": \"shell\",\n      \"command\": \"echo\",\n      \"args\": [\"hello world\"],\n      \"problemMatcher\": [\"$tsc\"],\n      \"group\": {\n        \"kind\": \"build\",\n        \"isDefault\": true\n      },\n      \"presentation\": {\n        \"reveal\": \"always\",\n        \"panel\": \"shared\"\n      }\n    }\n  ]\n}\n```\n\nKey properties in task configuration:\n\n| Property | Description |\n|----------|-------------|\n| `label` | The display name of the task |\n| `type` | The task type (shell, process, or custom type) |\n| `command` | The command to execute |\n| `args` | Arguments to pass to the command |\n| `group` | Task group (build, test, etc.) and whether it's the default |\n| `problemMatcher` | Patterns to detect problems in task output |\n| `presentation` | How the task's terminal should be presented |\n| `dependsOn` | Other tasks this task depends on |\n| `options` | Command options like working directory and environment variables |\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts:132-146]()\n- [src/vs/workbench/contrib/tasks/common/taskConfiguration.ts:91-139]()\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:230-286]()\n\n### Task Types and Execution\n\nVS Code supports three main types of task execution:\n\n```mermaid\ngraph TD\n    Task[\"Task\"]\n    ShellExecution[\"ShellExecution\"]\n    ProcessExecution[\"ProcessExecution\"]\n    CustomExecution[\"CustomExecution\"]\n    \n    Task --\u003e|type: shell| ShellExecution\n    Task --\u003e|type: process| ProcessExecution\n    Task --\u003e|type: custom| CustomExecution\n    \n    ShellExecution --\u003e|\"shell (bash, cmd, powershell)\"| Command\n    ProcessExecution --\u003e|\"direct process\"| Command\n    CustomExecution --\u003e|\"extension-provided\"| ExtensionCallback\n    \n    Command --\u003e|\"executes in\"| Terminal\n    ExtensionCallback --\u003e|\"custom handling\"| Extension\n```\n\n1. **Shell Execution**: Commands run in a shell like bash, PowerShell, or cmd\n   - Supports shell-specific features like piping, redirection\n   - Configurable shell options and quoting behavior\n\n2. **Process Execution**: Direct process spawning without a shell\n   - More efficient for simple commands\n   - No shell-specific features available\n\n3. **Custom Execution**: Extension-provided task execution\n   - Allows extensions to implement custom task execution logic\n   - Used for specialized build systems or language-specific tasks\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:288-315]()\n- [src/vs/workbench/api/common/extHostTask.ts:107-200]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:173-183]()\n\n### Task Groups\n\nTasks can be organized into groups that represent common operations:\n\n| Group | Description |\n|-------|-------------|\n| `build` | Building the project |\n| `test` | Running tests |\n| `clean` | Cleaning build artifacts |\n| `rebuild` | Rebuilding the project |\n\nA task can be marked as the default for a group, which allows it to be executed using keyboard shortcuts or commands specific to that group.\n\n```json\n\"group\": {\n  \"kind\": \"build\",\n  \"isDefault\": true\n}\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:373-398]()\n\n### Problem Matchers\n\nProblem matchers are patterns that extract problem information (errors, warnings) from task output. VS Code includes several built-in problem matchers:\n\n| Matcher | Description |\n|---------|-------------|\n| `$tsc` | TypeScript compiler |\n| `$eslint-stylish` | ESLint (stylish format) |\n| `$msCompile` | Microsoft C/C++ compiler |\n| `$gcc` | GCC compiler |\n| `$jshint` | JSHint |\n| `$go` | Go compiler |\n\nCustom problem matchers can be defined with regular expressions to match output patterns.\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/problemMatcher.js]()\n\n## Task Resolution and Execution\n\nWhen a task is run, VS Code goes through several steps to resolve and execute it.\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant TaskService\n    participant TaskResolver\n    participant TerminalTaskSystem\n    participant Terminal\n    \n    User-\u003e\u003eTaskService: Run task\n    TaskService-\u003e\u003eTaskResolver: Resolve task\n    TaskResolver-\u003e\u003eTaskResolver: Resolve variables\n    TaskResolver-\u003e\u003eTaskResolver: Resolve dependencies\n    TaskResolver-\u003e\u003eTerminalTaskSystem: Execute task\n    TerminalTaskSystem-\u003e\u003eTerminal: Create terminal\n    TerminalTaskSystem-\u003e\u003eTerminal: Execute command\n    Terminal-\u003e\u003eTaskService: Report task events\n    TaskService-\u003e\u003eUser: Show task output\n```\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:273-352]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:504-580]()\n\n### Task Resolution\n\nTask resolution involves several steps:\n\n1. **Task Identification**: Finding the task by label, type, or identifier\n2. **Variable Resolution**: Resolving variables in the task configuration\n3. **Dependency Resolution**: Resolving and executing task dependencies\n4. **Command Construction**: Building the final command to execute\n\nThe task service maintains a registry of tasks from various sources (workspace, user settings, extensions) and resolves them when needed.\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:787-834]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:626-746]()\n\n### Variable Resolution\n\nTasks support variable substitution in their configurations. Variables are enclosed in `${...}` and can reference:\n\n- Predefined variables like `${workspaceFolder}`, `${file}`, `${fileBasename}`\n- Environment variables\n- Configuration settings\n- Input variables that prompt the user\n\nThe variable resolution process:\n\n1. Identify variables in the task configuration\n2. Resolve predefined variables based on workspace context\n3. Prompt for user input if needed\n4. Replace variables with their resolved values\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:83-109]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:662-745]()\n\n### Task Dependencies\n\nTasks can depend on other tasks using the `dependsOn` property. Dependencies can be specified by:\n\n- Task label\n- Task identifier object\n\nDependencies can run in parallel or sequence:\n\n```json\n{\n  \"label\": \"Build Project\",\n  \"dependsOn\": [\"Clean\", \"Compile\"],\n  \"dependsOrder\": \"sequence\"\n}\n```\n\nWhen a task with dependencies is executed:\n\n1. The task system identifies all dependencies\n2. Dependencies are executed according to the specified order\n3. The main task is executed after dependencies complete\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/jsonSchema_v2.ts:66-98]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:504-624]()\n\n## Terminal Task System\n\nThe primary task execution system in VS Code is the Terminal Task System, which executes tasks in the integrated terminal.\n\n```mermaid\ngraph TD\n    TaskService[\"TaskService\"]\n    TerminalTaskSystem[\"TerminalTaskSystem\"]\n    TerminalService[\"TerminalService\"]\n    \n    TaskService --\u003e|creates| TerminalTaskSystem\n    TerminalTaskSystem --\u003e|uses| TerminalService\n    \n    subgraph \"Terminal Task Execution\"\n        PrepareExecution[\"Prepare Execution\"]\n        CreateTerminal[\"Create Terminal\"]\n        ExecuteCommand[\"Execute Command\"]\n        MonitorExecution[\"Monitor Execution\"]\n        HandleOutput[\"Handle Output\"]\n    end\n    \n    TerminalTaskSystem --\u003e PrepareExecution\n    PrepareExecution --\u003e CreateTerminal\n    CreateTerminal --\u003e ExecuteCommand\n    ExecuteCommand --\u003e MonitorExecution\n    MonitorExecution --\u003e HandleOutput\n```\n\nThe Terminal Task System:\n\n1. Creates and manages terminals for task execution\n2. Handles different execution types (shell, process, custom)\n3. Manages task lifecycle events\n4. Processes task output for problem matching\n5. Handles task termination and cleanup\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:143-219]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:273-307]()\n\n### Terminal Creation and Management\n\nWhen executing a task, the Terminal Task System:\n\n1. Creates a new terminal or reuses an existing one based on configuration\n2. Configures the terminal with the appropriate shell and options\n3. Sets up event listeners for terminal output and exit\n4. Executes the command in the terminal\n\nThe system manages terminal reuse based on task configuration:\n\n| Panel Option | Behavior |\n|--------------|----------|\n| `shared` | Reuse terminals between tasks |\n| `dedicated` | Use a dedicated terminal for the task |\n| `new` | Create a new terminal each time |\n\nSources:\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:196-228]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:1000-1100]()\n\n### Task Events and Lifecycle\n\nThe task system emits events throughout the task lifecycle:\n\n| Event | Description |\n|-------|-------------|\n| `start` | Task has started |\n| `active` | Task is actively running |\n| `processStarted` | Task process has started |\n| `processEnded` | Task process has ended |\n| `inactive` | Task is inactive but not complete |\n| `end` | Task has completed |\n| `terminated` | Task was terminated |\n\nThese events are used to update the UI, track task status, and trigger dependent actions.\n\nSources:\n- [src/vs/workbench/api/common/shared/tasks.ts:54-93]()\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:433-441]()\n\n### Problem Matching\n\nThe Terminal Task System includes problem matchers that analyze task output to detect errors and warnings:\n\n1. Task output is captured from the terminal\n2. Problem matchers analyze the output using regular expressions\n3. Detected problems are reported to the Problems panel\n4. Problems are linked to source files for navigation\n\nProblem matchers can be:\n- Watching (continuously monitor output)\n- Start/End (active between specific patterns)\n- Background (run in the background)\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/terminalTaskSystem.ts:40-41]()\n- [src/vs/workbench/contrib/tasks/common/problemCollectors.js]()\n\n## Task API\n\nVS Code provides an API for extensions to work with tasks:\n\n```mermaid\ngraph TD\n    subgraph \"Extension API\"\n        TaskProvider[\"TaskProvider\"]\n        TaskDefinition[\"TaskDefinition\"]\n        ShellExecution[\"ShellExecution\"]\n        ProcessExecution[\"ProcessExecution\"]\n        CustomExecution[\"CustomExecution\"]\n    end\n    \n    subgraph \"VS Code Task System\"\n        ExtHostTask[\"ExtHostTask\"]\n        MainThreadTask[\"MainThreadTask\"]\n        TaskService[\"TaskService\"]\n    end\n    \n    TaskProvider --\u003e|registers| ExtHostTask\n    ExtHostTask --\u003e|communicates| MainThreadTask\n    MainThreadTask --\u003e|uses| TaskService\n    \n    TaskDefinition --\u003e|defines| TaskProvider\n    ShellExecution --\u003e|used by| TaskProvider\n    ProcessExecution --\u003e|used by| TaskProvider\n    CustomExecution --\u003e|used by| TaskProvider\n```\n\nExtensions can:\n\n1. **Register Task Providers**: Contribute tasks to VS Code\n2. **Define Task Types**: Create custom task types with specific properties\n3. **Execute Tasks**: Run tasks programmatically\n4. **Listen to Task Events**: React to task lifecycle events\n\nSources:\n- [src/vs/workbench/api/common/extHostTask.ts:29-56]()\n- [src/vs/workbench/api/browser/mainThreadTask.ts:43-102]()\n- [extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts:26-451]()\n\n### Task Provider API\n\nExtensions can register task providers to contribute tasks:\n\n```typescript\nvscode.tasks.registerTaskProvider('mytasktype', {\n  provideTasks: () =\u003e {\n    // Return array of tasks\n    return [new vscode.Task(...)];\n  },\n  resolveTask: (task) =\u003e {\n    // Resolve a specific task\n    return task;\n  }\n});\n```\n\nTask providers are activated when:\n- The user runs a task command\n- VS Code needs to populate the task list\n- A specific task type is requested\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:686-703]()\n- [src/vs/workbench/api/common/extHostTask.ts:95-126]()\n- [extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts:339-346]()\n\n### Custom Execution API\n\nExtensions can provide custom task execution through the `CustomExecution` API:\n\n```typescript\nconst execution = new vscode.CustomExecution(async () =\u003e {\n  // Return a Pseudoterminal implementation\n  return {\n    onDidWrite: writeEmitter.event,\n    onDidClose: closeEmitter.event,\n    open: () =\u003e { /* Terminal opened */ },\n    close: () =\u003e { /* Terminal closed */ }\n  };\n});\n\nconst task = new vscode.Task(\n  { type: 'custom' },\n  vscode.TaskScope.Workspace,\n  'Custom Task',\n  'custom',\n  execution\n);\n```\n\nThis allows extensions to implement specialized task execution logic while still integrating with VS Code's task system.\n\nSources:\n- [src/vs/workbench/api/common/extHostTask.ts:181-200]()\n- [extensions/vscode-api-tests/src/singlefolder-tests/workspace.tasks.test.ts:146-234]()\n- [extensions/vscode-api-tests/src/singlefolder-tests/terminal.test.ts:501-518]()\n\n## Automatic Task Execution\n\nVS Code supports running tasks automatically in certain scenarios:\n\n```mermaid\ngraph TD\n    subgraph \"Automatic Task Triggers\"\n        FolderOpen[\"Folder Open\"]\n        TaskCommand[\"Task Command\"]\n        API[\"API Call\"]\n    end\n    \n    subgraph \"Task Configuration\"\n        RunOn[\"runOn property\"]\n        DependsOn[\"dependsOn property\"]\n    end\n    \n    subgraph \"Task Execution\"\n        RunAutomaticTasks[\"RunAutomaticTasks\"]\n        TaskService[\"TaskService\"]\n        TerminalTaskSystem[\"TerminalTaskSystem\"]\n    end\n    \n    FolderOpen --\u003e|triggers| RunAutomaticTasks\n    RunAutomaticTasks --\u003e|finds tasks with| RunOn\n    RunAutomaticTasks --\u003e|executes via| TaskService\n    \n    TaskCommand --\u003e|executes task with| DependsOn\n    DependsOn --\u003e|triggers dependent tasks via| TaskService\n    \n    API --\u003e|programmatic execution| TaskService\n    \n    TaskService --\u003e|executes tasks in| TerminalTaskSystem\n```\n\nTasks can be configured to run automatically:\n\n1. **On Folder Open**: Using the `runOn: folderOpen` property\n2. **As Dependencies**: When specified in another task's `dependsOn` property\n3. **Programmatically**: Through the VS Code API\n\nThe `RunAutomaticTasks` component handles detecting and running tasks that should execute automatically when a folder is opened.\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts:23-47]()\n- [src/vs/workbench/contrib/tasks/browser/runAutomaticTasks.ts:56-81]()\n- [src/vs/workbench/contrib/tasks/common/tasks.ts:563-566]()\n\n## Task UI Integration\n\nVS Code provides several UI elements for working with tasks:\n\n```mermaid\ngraph TD\n    subgraph \"Task Commands\"\n        RunTask[\"Run Task\"]\n        RunBuildTask[\"Run Build Task\"]\n        RunTestTask[\"Run Test Task\"]\n        ConfigureTask[\"Configure Task\"]\n    end\n    \n    subgraph \"Task UI Components\"\n        TaskQuickPick[\"Task Quick Pick\"]\n        TaskTerminal[\"Task Terminal\"]\n        ProblemsPanel[\"Problems Panel\"]\n        TaskStatusBar[\"Task Status Bar\"]\n    end\n    \n    RunTask --\u003e|shows| TaskQuickPick\n    RunBuildTask --\u003e|runs default or shows| TaskQuickPick\n    RunTestTask --\u003e|runs default or shows| TaskQuickPick\n    ConfigureTask --\u003e|opens| TasksJSON[\"tasks.json\"]\n    \n    TaskQuickPick --\u003e|executes task in| TaskTerminal\n    TaskTerminal --\u003e|output analyzed by| ProblemMatcher[\"Problem Matcher\"]\n    ProblemMatcher --\u003e|reports to| ProblemsPanel\n    TaskTerminal --\u003e|status shown in| TaskStatusBar\n```\n\nKey UI components:\n\n1. **Task Quick Pick**: Dialog for selecting tasks to run\n2. **Task Terminal**: Terminal where tasks are executed\n3. **Problems Panel**: Shows errors and warnings from task output\n4. **Task Status Bar**: Displays running task count and status\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts:167-240]()\n- [src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts:49-62]()\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts:63-126]()\n\n### Task Commands\n\nVS Code provides several commands for working with tasks:\n\n| Command | Description | Keyboard Shortcut |\n|---------|-------------|------------------|\n| `workbench.action.tasks.runTask` | Run Task | - |\n| `workbench.action.tasks.build` | Run Build Task | Ctrl+Shift+B |\n| `workbench.action.tasks.test` | Run Test Task | - |\n| `workbench.action.tasks.configureTaskRunner` | Configure Task | - |\n| `workbench.action.tasks.showTasks` | Show Running Tasks | - |\n| `workbench.action.tasks.terminate` | Terminate Task | - |\n| `workbench.action.tasks.restartTask` | Restart Task | - |\n| `workbench.action.tasks.reRunTask` | Rerun Last Task | - |\n\nThese commands are available in the Command Palette and some have default keyboard shortcuts.\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/task.contribution.ts:383-456]()\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:457-567]()\n\n### Task Quick Pick\n\nThe Task Quick Pick dialog allows users to select tasks to run:\n\n1. Shows recently used tasks\n2. Shows configured tasks from `tasks.json`\n3. Shows tasks contributed by extensions\n4. Allows filtering by task type or name\n5. Provides options to configure tasks\n\nThe quick pick is customizable through settings like:\n- `task.quickOpen.detail`: Show task details\n- `task.quickOpen.skip`: Skip the quick pick for the default task\n- `task.quickOpen.history`: Number of recent tasks to show\n\nSources:\n- [src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts:49-62]()\n- [src/vs/workbench/contrib/tasks/browser/taskQuickPick.ts:180-214]()\n- [src/vs/workbench/contrib/tasks/browser/abstractTaskService.ts:1000-1100]()\n\n## Conclusion\n\nVS Code's task system provides a flexible and powerful way to integrate external tools and processes into the editor. Through task configuration, users can define how commands are executed, how output is presented, and how problems are detected. The task system supports different execution types and provides APIs for extensions to contribute custom task functionality.\n\nUnderstanding the task configuration and execution model helps users effectively automate their development workflows and integrate external tools into VS Code."])</script>
    <script>self.__next_f.push([1, "2d:T6f5d,"])</script>
    <script>self.__next_f.push([1, "# Notebook Editor\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/workbench/api/browser/mainThreadNotebook.ts](src/vs/workbench/api/browser/mainThreadNotebook.ts)\n- [src/vs/workbench/api/common/extHostNotebook.ts](src/vs/workbench/api/common/extHostNotebook.ts)\n- [src/vs/workbench/contrib/notebook/browser/media/notebook.css](src/vs/workbench/contrib/notebook/browser/media/notebook.css)\n- [src/vs/workbench/contrib/notebook/browser/notebook.contribution.ts](src/vs/workbench/contrib/notebook/browser/notebook.contribution.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts](src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookEditor.ts](src/vs/workbench/contrib/notebook/browser/notebookEditor.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts](src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts](src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts](src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts](src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts](src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts)\n- [src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts](src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts)\n- [src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts](src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts)\n- [src/vs/workbench/contrib/notebook/common/notebookCommon.ts](src/vs/workbench/contrib/notebook/common/notebookCommon.ts)\n- [src/vs/workbench/contrib/notebook/common/notebookEditorModel.ts](src/vs/workbench/contrib/notebook/common/notebookEditorModel.ts)\n- [src/vs/workbench/contrib/notebook/common/notebookService.ts](src/vs/workbench/contrib/notebook/common/notebookService.ts)\n\n\u003c/details\u003e\n\n\n\nThis document provides a comprehensive overview of the VS Code Notebook Editor implementation. The Notebook Editor is a specialized editor for interactive computing documents that contain a mix of code cells, markdown cells, and their outputs. It is the core component that renders and manages notebook documents in VS Code.\n\nFor information about the notebook document model, see [Notebook Common](#3).\nFor information about notebook execution, see [Notebook Execution System](#6).\n\n## Overview\n\nThe Notebook Editor is a complex component that integrates various parts of VS Code to provide a rich interactive experience for working with notebook documents. It supports features like:\n\n- Rendering and editing code and markdown cells\n- Executing code cells and displaying outputs\n- Cell operations (add, delete, move)\n- Cell folding and collapsing\n- Rich output rendering through renderers\n- Cell status indicators\n\nThe notebook editor is implemented as an editor pane in VS Code's workbench and uses a specialized DOM structure with a virtualized list view for efficient rendering of cells.\n\n### Architecture Overview\n\n```mermaid\ngraph TD\n    subgraph \"Notebook Editor Components\"\n        NotebookEditor[\"NotebookEditor\"]\n        NotebookEditorWidget[\"NotebookEditorWidget\"]\n        CellList[\"NotebookCellList\"]\n        BackLayerWebView[\"BackLayerWebView\"]\n        CellRenderers[\"Cell Renderers\"]\n        ViewModels[\"Cell ViewModels\"]\n    end\n\n    subgraph \"Document Model\"\n        NotebookTextModel[\"NotebookTextModel\"]\n        NotebookViewModel[\"NotebookViewModel\"]\n        CellTextModels[\"Cell TextModels\"]\n    end\n\n    subgraph \"Services\"\n        NotebookService[\"NotebookService\"]\n        NotebookEditorService[\"NotebookEditorService\"]\n        NotebookKernelService[\"NotebookKernelService\"]\n        NotebookRendererService[\"NotebookRendererService\"]\n    end\n\n    NotebookEditor --\u003e NotebookEditorWidget\n    NotebookEditorWidget --\u003e CellList\n    NotebookEditorWidget --\u003e BackLayerWebView\n    NotebookEditorWidget --\u003e NotebookViewModel\n    CellList --\u003e CellRenderers\n    CellRenderers --\u003e ViewModels\n    ViewModels --\u003e CellTextModels\n    NotebookViewModel --\u003e NotebookTextModel\n    NotebookViewModel --\u003e ViewModels\n    NotebookEditorWidget --\u003e Services\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookEditor.ts:54-566](src/vs/workbench/contrib/notebook/browser/notebookEditor.ts:54-566)\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts:138-566](src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts:138-566)\n- [src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts:80-566](src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts:80-566)\n\n## Core Components\n\n### NotebookEditor\n\nThe `NotebookEditor` class extends `EditorPane` and serves as the main entry point for the notebook editor in VS Code's workbench. It manages the lifecycle of the notebook editor widget and handles editor-specific operations like opening, saving, and closing notebook documents.\n\nKey responsibilities:\n- Creating and managing the `NotebookEditorWidget`\n- Handling editor input changes\n- Managing editor view state persistence\n- Exposing notebook-specific commands and actions\n\n```mermaid\nclassDiagram\n    class NotebookEditor {\n        -_widget: IBorrowValue~NotebookEditorWidget~\n        -_editorMemento: IEditorMemento\n        +getControl(): NotebookEditorWidget\n        +setInput(input: NotebookEditorInput)\n        +saveEditorViewState()\n        +restoreEditorViewState()\n    }\n    \n    EditorPane \u003c|-- NotebookEditor\n    NotebookEditor --\u003e NotebookEditorWidget\n    NotebookEditor --\u003e NotebookEditorInput\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookEditor.ts:54-566](src/vs/workbench/contrib/notebook/browser/notebookEditor.ts:54-566)\n- [src/vs/workbench/contrib/notebook/browser/notebook.contribution.ts:138-169](src/vs/workbench/contrib/notebook/browser/notebook.contribution.ts:138-169)\n\n### NotebookEditorWidget\n\nThe `NotebookEditorWidget` is the core component that renders and manages the notebook UI. It implements the `INotebookEditor` interface and coordinates between the notebook model, view model, and various UI components.\n\nKey responsibilities:\n- Creating and managing the cell list\n- Handling cell operations (add, delete, move)\n- Managing the webview for rendering outputs\n- Coordinating between the model and view\n- Handling user interactions\n\n```mermaid\nclassDiagram\n    class NotebookEditorWidget {\n        -_list: INotebookCellList\n        -_webview: BackLayerWebView\n        -_notebookViewModel: NotebookViewModel\n        +viewModel: NotebookViewModel\n        +textModel: NotebookTextModel\n        +onDidChangeModel: Event\n        +onDidChangeActiveCell: Event\n        +executeNotebookCells()\n        +focusNotebookCell()\n    }\n    \n    INotebookEditor \u003c|-- NotebookEditorWidget\n    NotebookEditorWidget --\u003e NotebookCellList\n    NotebookEditorWidget --\u003e BackLayerWebView\n    NotebookEditorWidget --\u003e NotebookViewModel\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts:138-566](src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts:138-566)\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:512-636](src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:512-636)\n\n### NotebookCellList\n\nThe `NotebookCellList` extends `WorkbenchList` and provides a virtualized list view for efficiently rendering notebook cells. It handles cell rendering, selection, and scrolling.\n\nKey responsibilities:\n- Virtualized rendering of cells\n- Cell selection and focus management\n- Handling cell visibility and scrolling\n- Managing cell decorations and view zones\n\n```mermaid\nclassDiagram\n    class NotebookCellList {\n        -_viewModel: NotebookViewModel\n        -view: NotebookCellListView\n        -viewZones: NotebookViewZones\n        -cellOverlays: NotebookCellOverlays\n        +visibleRanges: ICellRange[]\n        +getFocusedElements(): ICellViewModel[]\n        +getSelectedElements(): ICellViewModel[]\n        +revealCell()\n    }\n    \n    WorkbenchList \u003c|-- NotebookCellList\n    INotebookCellList \u003c|-- NotebookCellList\n    NotebookCellList --\u003e NotebookCellListView\n    NotebookCellList --\u003e NotebookViewZones\n    NotebookCellList --\u003e NotebookCellOverlays\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts:80-566](src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts:80-566)\n\n### BackLayerWebView\n\nThe `BackLayerWebView` is responsible for rendering cell outputs and markdown cells. It creates a webview that hosts the rendered content and communicates with the notebook editor.\n\nKey responsibilities:\n- Rendering markdown cells\n- Rendering cell outputs\n- Managing output height and visibility\n- Handling webview messages and events\n\n```mermaid\nclassDiagram\n    class BackLayerWebView {\n        -webview: IWebviewElement\n        -insetMapping: Map~IDisplayOutputViewModel, ICachedInset~\n        -markupPreviewMapping: Map~string, IMarkupCellInitialization~\n        +onDidReceiveMessage: Event\n        +createWebview()\n        +updateOptions()\n        +renderMarkupCell()\n        +renderOutputCell()\n    }\n    \n    Themable \u003c|-- BackLayerWebView\n    BackLayerWebView --\u003e IWebviewElement\n    BackLayerWebView --\u003e INotebookDelegateForWebview\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-566](src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-566)\n\n## Cell Rendering\n\nThe notebook editor uses a specialized rendering system to efficiently display and manage cells. This system includes cell renderers, view models, and DOM structures.\n\n### Cell Renderers\n\nThere are two main cell renderers:\n- `MarkupCellRenderer`: Renders markdown cells\n- `CodeCellRenderer`: Renders code cells\n\nThese renderers create the DOM structure for cells and manage their lifecycle.\n\n```mermaid\nclassDiagram\n    class AbstractCellRenderer {\n        #editorOptions: CellEditorOptions\n        #instantiationService: IInstantiationService\n        #notebookEditor: INotebookEditorDelegate\n    }\n    \n    class MarkupCellRenderer {\n        +templateId: string\n        +renderTemplate(): MarkdownCellRenderTemplate\n        +renderElement(element: MarkupCellViewModel)\n    }\n    \n    class CodeCellRenderer {\n        +templateId: string\n        +renderTemplate(): CodeCellRenderTemplate\n        +renderElement(element: CodeCellViewModel)\n    }\n    \n    AbstractCellRenderer \u003c|-- MarkupCellRenderer\n    AbstractCellRenderer \u003c|-- CodeCellRenderer\n    IListRenderer \u003c|-- MarkupCellRenderer\n    IListRenderer \u003c|-- CodeCellRenderer\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:87-566](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:87-566)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:112-235](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:112-235)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:237-566](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:237-566)\n\n### Cell ViewModels\n\nCell view models manage the state and behavior of individual cells in the notebook editor. There are two main types:\n- `MarkupCellViewModel`: For markdown cells\n- `CodeCellViewModel`: For code cells\n\nBoth extend the `BaseCellViewModel` class.\n\n```mermaid\nclassDiagram\n    class BaseCellViewModel {\n        +model: NotebookCellTextModel\n        +id: string\n        +handle: number\n        +uri: URI\n        +cellKind: CellKind\n        +editState: CellEditState\n        +focusMode: CellFocusMode\n        +language: string\n        +metadata: NotebookCellMetadata\n        +internalMetadata: NotebookCellInternalMetadata\n        +getText(): string\n        +getTextLength(): number\n    }\n    \n    class MarkupCellViewModel {\n        +cellKind: CellKind.Markup\n        +layoutInfo: MarkupCellLayoutInfo\n        +renderedHtml: string\n        +renderedMarkdownHeight: number\n        +editorHeight: number\n        +foldingState: CellFoldingState\n    }\n    \n    class CodeCellViewModel {\n        +cellKind: CellKind.Code\n        +layoutInfo: CodeCellLayoutInfo\n        +outputsViewModels: ICellOutputViewModel[]\n        +outputsTop: PrefixSumComputer\n        +onDidChangeOutputs: Event\n        +onDidRemoveOutputs: Event\n    }\n    \n    BaseCellViewModel \u003c|-- MarkupCellViewModel\n    BaseCellViewModel \u003c|-- CodeCellViewModel\n    ICellViewModel \u003c|-- MarkupCellViewModel\n    ICellViewModel \u003c|-- CodeCellViewModel\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts:30-566](src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts:30-566)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts:22-566](src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts:22-566)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts:30-566](src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts:30-566)\n\n### Cell DOM Structure\n\nEach cell in the notebook editor has a complex DOM structure that includes various parts like the editor, output area, toolbar, and focus indicators.\n\n```mermaid\ngraph TD\n    CellRow[\"Cell Row (.monaco-list-row)\"]\n    CellContainer[\"Cell Container (.cell-inner-container)\"]\n    FocusIndicators[\"Focus Indicators (.cell-focus-indicator)\"]\n    TitleToolbar[\"Title Toolbar (.cell-title-toolbar)\"]\n    EditorPart[\"Editor Part (.cell-editor-part)\"]\n    EditorContainer[\"Editor Container (.cell-editor-container)\"]\n    OutputContainer[\"Output Container (.output-container)\"]\n    BottomToolbar[\"Bottom Toolbar (.cell-bottom-toolbar-container)\"]\n    \n    CellRow --\u003e CellContainer\n    CellContainer --\u003e FocusIndicators\n    CellContainer --\u003e TitleToolbar\n    CellContainer --\u003e EditorPart\n    EditorPart --\u003e EditorContainer\n    CellContainer --\u003e OutputContainer\n    CellContainer --\u003e BottomToolbar\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/media/notebook.css:1-566](src/vs/workbench/contrib/notebook/browser/media/notebook.css:1-566)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:112-235](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:112-235)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:237-566](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:237-566)\n\n## Output Rendering\n\nNotebook outputs are rendered in a webview to provide isolation and support for rich content types. The output rendering system includes:\n\n### Output ViewModels\n\nOutput view models manage the state and behavior of cell outputs. The main class is `CellOutputViewModel`, which wraps an `ICellOutput` and provides methods for resolving MIME types and managing output visibility.\n\n```mermaid\nclassDiagram\n    class ICellOutputViewModel {\n        +cellViewModel: IGenericCellViewModel\n        +model: ICellOutput\n        +pickedMimeType: IOrderedMimeType\n        +resolveMimeTypes(): IOrderedMimeType[]\n        +hasMultiMimeType(): boolean\n        +onDidResetRenderer: Event\n        +visible: IObservable~boolean~\n        +setVisible(visible: boolean)\n    }\n    \n    class CellOutputViewModel {\n        -_pickedMimeType: IOrderedMimeType\n        -_visible: IObservable~boolean~\n        +resolveMimeTypes(): IOrderedMimeType[]\n        +resetRenderer()\n        +toRawJSON()\n    }\n    \n    ICellOutputViewModel \u003c|-- CellOutputViewModel\n    IDisposable \u003c|-- ICellOutputViewModel\n    CellOutputViewModel --\u003e ICellOutput\n```\n\n### BackLayerWebView Output Rendering\n\nThe `BackLayerWebView` handles the rendering of outputs in the webview. It creates and manages output elements, communicates with renderers, and handles output resizing.\n\n```mermaid\ngraph TD\n    subgraph \"Output Rendering Flow\"\n        OutputVM[\"CellOutputViewModel\"]\n        BackLayer[\"BackLayerWebView\"]\n        WebviewPreloads[\"Webview Preloads\"]\n        Renderers[\"Notebook Renderers\"]\n        \n        OutputVM --\u003e|\"Create inset\"| BackLayer\n        BackLayer --\u003e|\"Send creation message\"| WebviewPreloads\n        WebviewPreloads --\u003e|\"Create DOM\"| WebviewPreloads\n        WebviewPreloads --\u003e|\"Request renderer\"| Renderers\n        Renderers --\u003e|\"Render content\"| WebviewPreloads\n        WebviewPreloads --\u003e|\"Report dimensions\"| BackLayer\n        BackLayer --\u003e|\"Update height\"| OutputVM\n    end\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-566](src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-566)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts:92-566](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts:92-566)\n\n### Webview Preloads\n\nThe webview preloads script runs in the webview context and handles the actual rendering of outputs. It communicates with the notebook editor through messages and manages the DOM structure of outputs.\n\nKey responsibilities:\n- Creating and updating output DOM elements\n- Loading and executing renderers\n- Handling user interactions with outputs\n- Reporting output dimensions to the notebook editor\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts:92-566](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts:92-566)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts:1-566](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts:1-566)\n\n## Notebook Model and ViewModel\n\nThe notebook editor uses a model-view-viewmodel architecture to separate concerns and manage state.\n\n### NotebookTextModel\n\nThe `NotebookTextModel` represents the data model of a notebook document. It manages the cells, metadata, and transient state of the notebook.\n\nKey responsibilities:\n- Managing cell data models\n- Handling cell operations (add, delete, move)\n- Managing notebook metadata\n- Serializing and deserializing notebook data\n\n```mermaid\nclassDiagram\n    class NotebookTextModel {\n        +uri: URI\n        +viewType: string\n        +metadata: NotebookDocumentMetadata\n        +cells: readonly ICell[]\n        +transientOptions: TransientOptions\n        +onDidChangeContent: Event\n        +applyEdits(edits: ICellEditOperation[])\n        +createSnapshot(): NotebookData\n        +restoreSnapshot(snapshot: NotebookData)\n    }\n    \n    class NotebookCellTextModel {\n        +uri: URI\n        +handle: number\n        +language: string\n        +cellKind: CellKind\n        +metadata: NotebookCellMetadata\n        +internalMetadata: NotebookCellInternalMetadata\n        +outputs: ICellOutput[]\n        +textBuffer: IReadonlyTextBuffer\n        +onDidChangeContent: Event\n    }\n    \n    INotebookTextModel \u003c|-- NotebookTextModel\n    NotebookTextModel --\u003e \"0..*\" NotebookCellTextModel\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts:32-566](src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts:32-566)\n- [src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts:25-566](src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts:25-566)\n\n### NotebookViewModel\n\nThe `NotebookViewModel` serves as an intermediary between the `NotebookTextModel` and the UI. It manages the view state of the notebook, including cell view models, selection, and folding.\n\nKey responsibilities:\n- Creating and managing cell view models\n- Handling selection and focus\n- Managing folding state\n- Coordinating between the model and the UI\n\n```mermaid\nclassDiagram\n    class NotebookViewModel {\n        +notebookDocument: NotebookTextModel\n        +viewCells: ICellViewModel[]\n        +layoutInfo: NotebookLayoutInfo\n        +onDidChangeViewCells: Event\n        +onDidChangeSelection: Event\n        +getSelections(): ICellRange[]\n        +getFocus(): ICellRange\n        +getCellIndex(cell: ICellViewModel): number\n        +deltaCellStatusBarItems()\n        +getFoldedLength(index: number): number\n    }\n    \n    class CellViewModel {\n        +model: NotebookCellTextModel\n        +id: string\n        +handle: number\n        +uri: URI\n        +cellKind: CellKind\n        +editState: CellEditState\n        +focusMode: CellFocusMode\n    }\n    \n    INotebookViewModel \u003c|-- NotebookViewModel\n    NotebookViewModel --\u003e NotebookTextModel\n    NotebookViewModel --\u003e \"0..*\" CellViewModel\n    CellViewModel \u003c|-- MarkupCellViewModel\n    CellViewModel \u003c|-- CodeCellViewModel\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl.ts](src/vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:421-510](src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:421-510)\n\n## Notebook Services\n\nThe notebook editor relies on several services to provide its functionality. These services are registered in the VS Code dependency injection system and can be accessed by various components.\n\n### NotebookService\n\nThe `NotebookService` is the central service for managing notebook providers, serializers, and renderers. It coordinates between the notebook editor and extension-provided functionality.\n\nKey responsibilities:\n- Registering and managing notebook content providers\n- Registering and managing notebook serializers\n- Registering and managing notebook renderers\n- Providing access to notebook capabilities\n\n```mermaid\nclassDiagram\n    class INotebookService {\n        +onDidChangeOutputRenderers: Event\n        +onDidChangeKernels: Event\n        +registerNotebookSerializer()\n        +registerNotebookRenderer()\n        +getContributedNotebookProviders()\n        +getContributedNotebookRenderers()\n        +getRendererInfo(id: string)\n    }\n    \n    class NotebookService {\n        -_notebookProviders: Map\n        -_notebookSerializer: Map\n        -_notebookRenderers: Map\n        +registerNotebookSerializer()\n        +registerNotebookRenderer()\n        +getRenderers()\n    }\n    \n    INotebookService \u003c|-- NotebookService\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/common/notebookService.ts:24-95](src/vs/workbench/contrib/notebook/common/notebookService.ts:24-95)\n- [src/vs/workbench/contrib/notebook/browser/services/notebookServiceImpl.ts](src/vs/workbench/contrib/notebook/browser/services/notebookServiceImpl.ts)\n\n### NotebookEditorService\n\nThe `NotebookEditorService` manages notebook editor instances and provides access to them. It allows components to find and interact with notebook editors.\n\nKey responsibilities:\n- Tracking notebook editor instances\n- Providing access to notebook editors\n- Managing notebook editor widgets\n\n```mermaid\nclassDiagram\n    class INotebookEditorService {\n        +onDidAddNotebookEditor: Event\n        +onDidRemoveNotebookEditor: Event\n        +addNotebookEditor()\n        +removeNotebookEditor()\n        +getNotebookEditor(id: string)\n        +listNotebookEditors()\n    }\n    \n    class NotebookEditorWidgetService {\n        -_notebookEditors: Map\n        +addNotebookEditor()\n        +removeNotebookEditor()\n        +getNotebookEditor()\n        +listNotebookEditors()\n    }\n    \n    INotebookEditorService \u003c|-- NotebookEditorWidgetService\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/services/notebookEditorService.ts](src/vs/workbench/contrib/notebook/browser/services/notebookEditorService.ts)\n- [src/vs/workbench/contrib/notebook/browser/services/notebookEditorServiceImpl.ts](src/vs/workbench/contrib/notebook/browser/services/notebookEditorServiceImpl.ts)\n\n## Extension Integration\n\nThe notebook editor integrates with VS Code's extension system to provide extensibility. Extensions can contribute notebook providers, renderers, and kernels.\n\n### Extension Host Integration\n\nThe notebook editor communicates with extensions through the extension host. This allows extensions to provide notebook functionality while maintaining isolation.\n\n```mermaid\ngraph TD\n    subgraph \"Main Thread\"\n        MainThreadNotebook[\"MainThreadNotebooks\"]\n        MainThreadNotebookDocuments[\"MainThreadNotebookDocuments\"]\n        MainThreadNotebookEditors[\"MainThreadNotebookEditors\"]\n        NotebookService[\"NotebookService\"]\n    end\n    \n    subgraph \"Extension Host\"\n        ExtHostNotebook[\"ExtHostNotebookController\"]\n        ExtHostNotebookDocument[\"ExtHostNotebookDocument\"]\n        ExtHostNotebookEditor[\"ExtHostNotebookEditor\"]\n        ExtensionAPI[\"Extension API\"]\n    end\n    \n    MainThreadNotebook \u003c--\u003e|\"RPC\"| ExtHostNotebook\n    MainThreadNotebookDocuments \u003c--\u003e|\"RPC\"| ExtHostNotebook\n    MainThreadNotebookEditors \u003c--\u003e|\"RPC\"| ExtHostNotebook\n    \n    MainThreadNotebook --\u003e NotebookService\n    \n    ExtHostNotebook --\u003e ExtHostNotebookDocument\n    ExtHostNotebook --\u003e ExtHostNotebookEditor\n    ExtensionAPI --\u003e ExtHostNotebook\n```\n\nSources:\n- [src/vs/workbench/api/browser/mainThreadNotebook.ts:28-95](src/vs/workbench/api/browser/mainThreadNotebook.ts:28-95)\n- [src/vs/workbench/api/common/extHostNotebook.ts:42-566](src/vs/workbench/api/common/extHostNotebook.ts:42-566)\n\n### Notebook Renderers\n\nNotebook renderers are provided by extensions and allow for custom rendering of cell outputs. The notebook editor loads and executes these renderers in the webview context.\n\nKey concepts:\n- Renderer registration and discovery\n- MIME type handling and prioritization\n- Renderer messaging and communication\n- Renderer security and isolation\n\n```mermaid\ngraph TD\n    subgraph \"Renderer Registration\"\n        Extension[\"Extension\"]\n        ExtHostNotebook[\"ExtHostNotebookController\"]\n        MainThreadNotebook[\"MainThreadNotebooks\"]\n        NotebookService[\"NotebookService\"]\n    end\n    \n    subgraph \"Renderer Usage\"\n        BackLayerWebView[\"BackLayerWebView\"]\n        WebviewPreloads[\"Webview Preloads\"]\n        RendererScript[\"Renderer Script\"]\n        Output[\"Output DOM\"]\n    end\n    \n    Extension --\u003e|\"registerNotebookRenderer\"| ExtHostNotebook\n    ExtHostNotebook --\u003e|\"$registerNotebookRenderer\"| MainThreadNotebook\n    MainThreadNotebook --\u003e|\"registerNotebookRenderer\"| NotebookService\n    \n    BackLayerWebView --\u003e|\"Load renderer info\"| NotebookService\n    BackLayerWebView --\u003e|\"Send renderer data\"| WebviewPreloads\n    WebviewPreloads --\u003e|\"Load renderer script\"| RendererScript\n    RendererScript --\u003e|\"Render output\"| Output\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-566](src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-566)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts:92-566](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts:92-566)\n\n## Conclusion\n\nThe VS Code Notebook Editor is a sophisticated component that provides a rich interactive experience for working with notebook documents. It integrates various parts of VS Code and leverages the extension system to provide extensibility.\n\nKey takeaways:\n- The notebook editor uses a model-view-viewmodel architecture\n- Cell rendering is handled by specialized renderers and view models\n- Output rendering is done in a webview for isolation and rich content support\n- The notebook editor integrates with VS Code's extension system for extensibility\n- Various services coordinate between the notebook editor and extensions\n\nThis document provides an overview of the notebook editor implementation. For more details on specific aspects, refer to the linked wiki pages and the source code."])</script>
    <script>self.__next_f.push([1, "2e:T56ac,"])</script>
    <script>self.__next_f.push([1, "# Notebook Model and View Model\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [src/vs/workbench/api/browser/mainThreadNotebook.ts](src/vs/workbench/api/browser/mainThreadNotebook.ts)\n- [src/vs/workbench/api/common/extHostNotebook.ts](src/vs/workbench/api/common/extHostNotebook.ts)\n- [src/vs/workbench/contrib/notebook/browser/media/notebook.css](src/vs/workbench/contrib/notebook/browser/media/notebook.css)\n- [src/vs/workbench/contrib/notebook/browser/notebook.contribution.ts](src/vs/workbench/contrib/notebook/browser/notebook.contribution.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts](src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookEditor.ts](src/vs/workbench/contrib/notebook/browser/notebookEditor.ts)\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts](src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts](src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts)\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts](src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts](src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts](src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts)\n- [src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts](src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts)\n- [src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts](src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts)\n- [src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts](src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts)\n- [src/vs/workbench/contrib/notebook/common/notebookCommon.ts](src/vs/workbench/contrib/notebook/common/notebookCommon.ts)\n- [src/vs/workbench/contrib/notebook/common/notebookEditorModel.ts](src/vs/workbench/contrib/notebook/common/notebookEditorModel.ts)\n- [src/vs/workbench/contrib/notebook/common/notebookService.ts](src/vs/workbench/contrib/notebook/common/notebookService.ts)\n\n\u003c/details\u003e\n\n\n\nThis document describes the architecture of VS Code's notebook model and view model system. It explains how notebook data is represented, how it's translated into viewable UI elements, and the relationships between the core models, view models, and rendering components.\n\nFor information about notebook editors and UI, see [Notebook Editor](#2.2). For information about notebook execution, see [Task System](#7).\n\n## Overview\n\nThe VS Code notebook system follows a Model-View-ViewModel (MVVM) architecture. The model layer represents raw notebook data and content. The view model layer adds UI-specific information and properties needed for rendering. The view layer handles the actual rendering of cells, outputs, and interactions.\n\n```mermaid\nflowchart TB\n    subgraph \"Model Layer\"\n        NTM[\"NotebookTextModel\"]\n        NCTM[\"NotebookCellTextModel\"]\n        TM[\"TextModel (Cell content)\"]\n        NCO[\"NotebookCellOutput\"]\n    end\n\n    subgraph \"View Model Layer\"\n        NVM[\"NotebookViewModel\"]\n        CVM[\"CellViewModel (abstract)\"]\n        MCVM[\"MarkupCellViewModel\"]\n        CCVM[\"CodeCellViewModel\"]\n        COVM[\"CellOutputViewModel\"]\n    end\n\n    subgraph \"View Layer\"\n        NEW[\"NotebookEditorWidget\"]\n        NCL[\"NotebookCellList\"]\n        CR[\"CellRenderer\"]\n        BLW[\"BackLayerWebView\"]\n    end\n\n    NTM --\u003e NCTM\n    NCTM --\u003e TM\n    NCTM --\u003e NCO\n\n    NTM --\u003e NVM\n    NVM --\u003e CVM\n    CVM --\u003e MCVM\n    CVM --\u003e CCVM\n    NCO --\u003e COVM\n\n    NVM --\u003e NEW\n    NEW --\u003e NCL\n    NCL --\u003e CR\n    NEW --\u003e BLW\n    COVM --\u003e BLW\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl.ts]()\n- [src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts]()\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts]()\n\n## Notebook Model Architecture\n\n### NotebookTextModel\n\nThe `NotebookTextModel` is the core model representing a notebook document. It contains:\n\n- The notebook's cells as an array of `NotebookCellTextModel` instances\n- Notebook metadata\n- View type (which determines rendering behavior)\n- Methods for manipulating cells and handling undo/redo operations\n\nThe model is responsible for:\n- Managing the lifecycle of cells\n- Handling notebook-level edits\n- Emitting events when notebook content changes\n- Creating and applying notebook snapshots for saving/loading\n\n```mermaid\nclassDiagram\n    class NotebookTextModel {\n        +uri: URI\n        +cells: NotebookCellTextModel[]\n        +metadata: NotebookDocumentMetadata\n        +viewType: string\n        +versionId: number\n        +onDidChangeContent: Event\n        +applyEdits(edits: ICellEditOperation[]): boolean\n        +reset(cells: ICellDto2[], metadata): void\n        +createSnapshot(): NotebookData\n    }\n\n    class ICellEditOperation {\n        \u003c\u003cinterface\u003e\u003e\n        +editType: CellEditType\n    }\n\n    class NotebookCellTextModel {\n        +uri: URI\n        +handle: number\n        +language: string\n        +cellKind: CellKind\n        +outputs: NotebookCellOutputTextModel[]\n        +metadata: NotebookCellMetadata\n        +internalMetadata: NotebookCellInternalMetadata\n        +textBuffer: IReadonlyTextBuffer\n        +onDidChangeOutputs: Event\n        +onDidChangeLanguage: Event\n        +onDidChangeMetadata: Event\n    }\n\n    NotebookTextModel \"1\" --\u003e \"*\" NotebookCellTextModel: contains\n    NotebookTextModel --\u003e ICellEditOperation: applies\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts:78-1142]()\n- [src/vs/workbench/contrib/notebook/common/notebookCommon.ts:294-307]()\n\n### Cell Outputs\n\nCell outputs are represented by the `NotebookCellOutputTextModel` class:\n\n- Each output has a unique ID and a set of output items\n- Output items are pairs of MIME types and content (as `VSBuffer`)\n- Outputs can be appended, replaced, or cleared\n- The model maintains a version ID to track changes\n\n```mermaid\nclassDiagram\n    class NotebookCellOutputTextModel {\n        +outputId: string\n        +alternativeOutputId: string\n        +outputs: IOutputItemDto[]\n        +metadata: Record~string, any~\n        +versionId: number\n        +appendData(items: IOutputItemDto[]): void\n        +replaceData(items: IOutputDto): void\n    }\n\n    class IOutputItemDto {\n        \u003c\u003cinterface\u003e\u003e\n        +mime: string\n        +data: VSBuffer\n    }\n\n    NotebookCellOutputTextModel \"1\" --\u003e \"*\" IOutputItemDto: contains\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/common/model/notebookCellTextModel.ts]()\n- [src/vs/workbench/contrib/notebook/common/notebookCommon.ts:218-244]()\n\n## Notebook View Model Architecture\n\n### NotebookViewModel\n\nThe `NotebookViewModel` wraps a `NotebookTextModel` and creates view-specific representations of cells:\n\n- Creates and manages cell view models (`CellViewModel`)\n- Manages selection state and folding\n- Tracks visible ranges and provides filtering\n- Handles view-specific events and state changes\n\n```mermaid\nclassDiagram\n    class NotebookViewModel {\n        +notebookDocument: NotebookTextModel\n        +viewCells: ICellViewModel[]\n        +layoutInfo: NotebookLayoutInfo\n        +viewType: string\n        +onDidChangeViewCells: Event\n        +onDidChangeSelection: Event\n        +getSelections(): ICellRange[]\n        +getFoldedLength(index): number\n    }\n\n    class ISelectionState {\n        \u003c\u003cinterface\u003e\u003e\n        +kind: SelectionStateType\n        +focus: ICellRange | number\n        +selections: ICellRange[] | number[]\n    }\n\n    class CellViewModel {\n        +model: NotebookCellTextModel\n        +id: string\n        +handle: number\n        +uri: URI\n        +cellKind: CellKind\n        +dragging: boolean\n        +editState: CellEditState\n        +focusMode: CellFocusMode\n        +layoutInfo: CellLayoutInfo\n    }\n\n    NotebookViewModel \"1\" --\u003e \"1\" NotebookTextModel: wraps\n    NotebookViewModel \"1\" --\u003e \"*\" CellViewModel: contains\n    NotebookViewModel --\u003e ISelectionState: manages\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/viewModel/notebookViewModelImpl.ts]()\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:489-509]()\n\n### Cell View Models\n\nCell view models extend the `BaseCellViewModel` class and provide specific implementations for markup and code cells:\n\n- `MarkupCellViewModel`: Handles rendering of markdown content\n- `CodeCellViewModel`: Manages code cells, their execution, and outputs\n\nThese view models track UI-specific state:\n- Layout information (height, width, etc.)\n- Edit state (editing, pending, etc.)\n- Focus state and selection\n- In-memory editor and UI elements\n- Folding state\n\n```mermaid\nclassDiagram\n    class BaseCellViewModel {\n        +model: NotebookCellTextModel\n        +id: string\n        +handle: number\n        +uri: URI\n        +editState: CellEditState\n        +focusMode: CellFocusMode\n        +getText(): string\n        +getHeight(): number\n    }\n\n    class MarkupCellViewModel {\n        +cellKind: CellKind.Markup\n        +layoutInfo: MarkupCellLayoutInfo\n        +renderedHtml: string\n        +editorHeight: number\n        +renderedMarkdownHeight: number\n    }\n\n    class CodeCellViewModel {\n        +cellKind: CellKind.Code\n        +layoutInfo: CodeCellLayoutInfo\n        +outputsViewModels: ICellOutputViewModel[]\n        +isOutputCollapsed: boolean\n        +isInputCollapsed: boolean\n    }\n\n    class CellOutputViewModel {\n        +model: ICellOutput\n        +resolveMimeTypes(): IOrderedMimeType[]\n        +pickedMimeType: IOrderedMimeType\n    }\n\n    BaseCellViewModel \u003c|-- MarkupCellViewModel\n    BaseCellViewModel \u003c|-- CodeCellViewModel\n    CodeCellViewModel \"1\" --\u003e \"*\" CellOutputViewModel: contains\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts]()\n- [src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts]()\n- [src/vs/workbench/contrib/notebook/browser/viewModel/markupCellViewModel.ts]()\n\n## Notebook Editor Components\n\n### NotebookEditorWidget\n\nThe `NotebookEditorWidget` is the main component that renders a notebook:\n\n- Manages notebook lifecycle (creation, updates, disposal)\n- Creates and manages the cell list\n- Handles user interactions with cells\n- Coordinates with the webview for output rendering\n- Manages focus, selection, and layout\n\n```mermaid\nclassDiagram\n    class NotebookEditorWidget {\n        +viewModel: NotebookViewModel\n        +onDidChangeCellState: Event\n        +onDidChangeViewCells: Event\n        +onDidChangeModel: Event\n        +notebookOptions: NotebookOptions\n        +getViewModel(): NotebookViewModel\n        +getCellById(id): ICellViewModel\n        +focusNotebookCell(cell, focus): Promise\n        +executeNotebookCells(cells): Promise\n    }\n\n    class IActiveNotebookEditorDelegate {\n        \u003c\u003cinterface\u003e\u003e\n        +textModel: NotebookTextModel\n        +notebookOptions: NotebookOptions\n        +onDidChangeSelection: Event\n        +getSelections(): ICellRange[]\n    }\n\n    class NotebookCellList {\n        +viewModel: NotebookViewModel\n        +visibleRanges: ICellRange[]\n        +getFocusedElements(): ICellViewModel[]\n        +revealCellRange(range, type): void\n    }\n\n    class BackLayerWebView {\n        +notebookEditor: INotebookDelegateForWebview\n        +insetMapping: Map~IDisplayOutputViewModel, ICachedInset~\n        +createWebview(window): Promise\n        +updateOutputHeight(info, output, height): void\n    }\n\n    NotebookEditorWidget ..|\u003e IActiveNotebookEditorDelegate\n    NotebookEditorWidget \"1\" --\u003e \"1\" NotebookViewModel: uses\n    NotebookEditorWidget \"1\" --\u003e \"1\" NotebookCellList: contains\n    NotebookEditorWidget \"1\" --\u003e \"1\" BackLayerWebView: contains\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts:138-5643]()\n- [src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts]()\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts]()\n\n### Cell Rendering\n\nCells are rendered using a virtualized list approach:\n\n- `NotebookCellList` extends VS Code's `WorkbenchList` for virtualization\n- `NotebookCellListDelegate` manages cell heights and templates\n- `MarkupCellRenderer` and `CodeCellRenderer` handle the actual cell rendering\n- Cell rendering is composed of multiple cell parts (editor, toolbars, outputs, etc.)\n\n```mermaid\nclassDiagram\n    class NotebookCellList {\n        +viewModel: NotebookViewModel\n        +visibleRanges: ICellRange[]\n        +rowsContainer: HTMLElement\n        +element: CellViewModel\n        +revealCell(cell, type): void\n    }\n\n    class NotebookCellListDelegate {\n        +getHeight(element): number\n        +getTemplateId(element): string\n    }\n\n    class MarkupCellRenderer {\n        +templateId: string\n        +renderTemplate(container): MarkdownCellRenderTemplate\n        +renderElement(element, index, template): void\n    }\n\n    class CodeCellRenderer {\n        +templateId: string\n        +renderTemplate(container): CodeCellRenderTemplate\n        +renderElement(element, index, template): void\n    }\n\n    class CellPartsCollection {\n        +cellParts: ICellPart[]\n        +templateData: BaseCellRenderTemplate\n    }\n\n    NotebookCellList --\u003e NotebookCellListDelegate: uses\n    NotebookCellList --\u003e MarkupCellRenderer: uses\n    NotebookCellList --\u003e CodeCellRenderer: uses\n    MarkupCellRenderer --\u003e CellPartsCollection: creates\n    CodeCellRenderer --\u003e CellPartsCollection: creates\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/notebookCellList.ts:80-710]()\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer.ts:57-519]()\n\n### BackLayerWebView\n\nThe `BackLayerWebView` handles rendering of markdown and rich outputs:\n\n- Manages a webview for rendering complex outputs\n- Handles communication between the notebook and rendered content\n- Manages output heights and layout\n- Processes markdown rendering and output MIME type selection\n- Handles interactions with rendered contents (clicks, focus, etc.)\n\n```mermaid\nflowchart TB\n    subgraph \"Main UI Thread\"\n        NEW[\"NotebookEditorWidget\"]\n        BLW[\"BackLayerWebView\"]\n        CVM[\"CellViewModel\"]\n        COVM[\"CellOutputViewModel\"]\n    end\n\n    subgraph \"Webview Thread\"\n        WVP[\"WebviewPreloads\"]\n        RM[\"RenderingManager\"]\n        OR[\"OutputRenderer\"]\n        MR[\"MarkdownRenderer\"]\n    end\n\n    NEW --\u003e BLW\n    CVM --\u003e COVM\n    COVM --\u003e BLW\n    \n    BLW \u003c--\u003e|\"INotebookWebviewMessage\"| WVP\n    WVP --\u003e RM\n    RM --\u003e OR\n    RM --\u003e MR\n    \n    OR --\u003e|\"dimension updates\"| BLW\n    MR --\u003e|\"dimension updates\"| BLW\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/backLayerWebView.ts:128-812]()\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewPreloads.ts]()\n- [src/vs/workbench/contrib/notebook/browser/view/renderers/webviewMessages.ts]()\n\n## Cell Layout and Dimensions\n\n### Cell Layout Information\n\nCell dimensions and layout are calculated and tracked using different layout models:\n\n1. For all cells: `CellLayoutInfo` tracks common properties like font info, editor dimensions, and total height\n2. For code cells: `CodeCellLayoutInfo` adds output-specific dimensions\n3. For markup cells: `MarkupCellLayoutInfo` includes preview height\n\n```\nTable: Cell Layout Properties\n\n| Property              | Description                                    | Applies To      |\n|-----------------------|------------------------------------------------|-----------------|\n| layoutState           | State of layout calculation                    | All cells       |\n| fontInfo              | Editor font information                        | All cells       |\n| editorWidth           | Width of code editor                           | All cells       |\n| editorHeight          | Height of code editor                          | All cells       |\n| statusBarHeight       | Height of cell status bar                      | All cells       |\n| totalHeight           | Total cell height                              | All cells       |\n| outputContainerOffset | Offset to output container                     | Code cells      |\n| outputTotalHeight     | Total height of all outputs                    | Code cells      |\n| previewHeight         | Height of markdown preview                     | Markup cells    |\n| foldHintHeight        | Height of fold indicator                       | Markup cells    |\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:180-232]()\n\n### Layout Change Events\n\nThe notebook system defines specific event types for layout changes:\n\n- `CellLayoutChangeEvent`: Base type for all cell layout changes\n- `CodeCellLayoutChangeEvent`: Adds code cell specific properties (output height, etc.)\n- `MarkupCellLayoutChangeEvent`: Adds markup cell properties (preview height)\n\nThese events help optimize rendering by identifying what parts of a cell need to be updated.\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookBrowser.ts:194-232]()\n\n## Data Flow and State Management\n\n### Edit Operations\n\nNotebook content is modified through edit operations:\n\n- `ICellEditOperation`: Base interface for all cell edits\n- `ICellReplaceEdit`: Replace cells in a range\n- `ICellOutputEdit`: Modify cell outputs\n- `ICellMetadataEdit`: Change cell metadata\n- `ICellMoveEdit`: Move cells to a new position\n\nThese operations are applied to the `NotebookTextModel`, which then updates the cells and emits appropriate events.\n\n```mermaid\nsequenceDiagram\n    participant Editor as NotebookEditor\n    participant Widget as NotebookEditorWidget\n    participant ViewModel as NotebookViewModel\n    participant Model as NotebookTextModel\n    \n    Editor-\u003e\u003eWidget: executeNotebookCells(cells)\n    Widget-\u003e\u003eViewModel: executeCellRange(range)\n    ViewModel-\u003e\u003eModel: applyEdits([cellOutputEdit])\n    Model--\u003e\u003eViewModel: onDidChangeContent event\n    ViewModel--\u003e\u003eWidget: onDidChangeViewCells event\n    Widget--\u003e\u003eEditor: update UI\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/common/notebookCommon.ts:461-571]()\n- [src/vs/workbench/contrib/notebook/common/model/notebookTextModel.ts:307-439]()\n\n### Cell State Management\n\nCell state is managed through several key properties:\n\n- `CellEditState`: Tracks whether a cell is editing or not\n- `CellFocusMode`: Tracks focus state (editor, container, output)\n- Cell visibility state (input collapsed, output collapsed)\n- Execution state (executing, pending, etc.)\n\nCell view models emit events when these states change, allowing the UI to update accordingly.\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/viewModel/baseCellViewModel.ts:30-179]()\n- [src/vs/workbench/contrib/notebook/browser/viewModel/codeCellViewModel.ts:30-128]()\n\n## Putting It All Together\n\n### Model to View Pipeline\n\nWhen a notebook is opened:\n\n1. The `NotebookTextModel` is created or loaded from disk\n2. A `NotebookViewModel` is created to wrap the text model\n3. Cell view models are created for each cell in the model\n4. The `NotebookEditorWidget` is created and initialized with the view model\n5. Cell renderers create DOM elements for each visible cell\n6. The `BackLayerWebView` initializes for rendering markdown and outputs\n\nChanges to the notebook follow a similar path:\n\n1. Edit operations are applied to the `NotebookTextModel`\n2. The model emits content change events\n3. The view model updates its cell view models accordingly\n4. The notebook editor widget updates the rendered view\n\n```mermaid\nflowchart LR\n    subgraph File\n        NBFile[\"Notebook File (.ipynb)\"]\n    end\n    \n    subgraph Services\n        NbService[\"NotebookService\"]\n        EditorService[\"EditorService\"]\n        NBSerializer[\"INotebookSerializer\"]\n    end\n    \n    subgraph Model\n        NTM[\"NotebookTextModel\"]\n        NCTM[\"NotebookCellTextModel\"]\n    end\n    \n    subgraph ViewModel\n        NVM[\"NotebookViewModel\"]\n        CVM[\"CellViewModel\"]\n    end\n    \n    subgraph View\n        NEW[\"NotebookEditorWidget\"]\n        NCL[\"NotebookCellList\"]\n        CR[\"CellRenderer\"]\n        BLW[\"BackLayerWebView\"]\n    end\n    \n    NBFile --\u003e NbService\n    NbService --\u003e NBSerializer\n    NBSerializer --\u003e NTM\n    \n    EditorService --\u003e NEW\n    \n    NTM --\u003e NVM\n    NCTM --\u003e CVM\n    NVM --\u003e NEW\n    CVM --\u003e CR\n    \n    NEW --\u003e NCL\n    NEW --\u003e BLW\n    NCL --\u003e CR\n```\n\nSources:\n- [src/vs/workbench/contrib/notebook/browser/notebookEditor.ts:196-298]()\n- [src/vs/workbench/contrib/notebook/common/notebookEditorModel.ts]()\n- [src/vs/workbench/contrib/notebook/browser/notebookEditorWidget.ts:196-500]()\n\n## Conclusion\n\nThe VS Code notebook system uses a clear separation between model, view model, and view:\n\n1. **Model Layer**: Focused on data representation and persistence\n   - `NotebookTextModel` manages notebook content and metadata\n   - `NotebookCellTextModel` manages individual cell content and outputs\n\n2. **View Model Layer**: Adds UI-specific properties and state\n   - `NotebookViewModel` adds selection, folding, and other UI state\n   - `CellViewModel` adds layout, rendering, and interaction state\n\n3. **View Layer**: Handles rendering and user interaction\n   - `NotebookEditorWidget` orchestrates the overall rendering\n   - `NotebookCellList` handles virtualized cell rendering\n   - `BackLayerWebView` renders markdown and rich outputs\n\nThis architecture provides a clear separation of concerns, allowing each layer to focus on specific aspects of notebook functionality."])</script>
    <script>self.__next_f.push([1, "2f:T69b7,"])</script>
    <script>self.__next_f.push([1, "# Chat and AI Integration\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/src/singlefolder-tests/chat.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/chat.test.ts)\n- [src/vs/base/browser/ui/hover/hoverWidget.css](src/vs/base/browser/ui/hover/hoverWidget.css)\n- [src/vs/editor/browser/services/hoverService/hover.css](src/vs/editor/browser/services/hoverService/hover.css)\n- [src/vs/workbench/api/browser/mainThreadChatAgents2.ts](src/vs/workbench/api/browser/mainThreadChatAgents2.ts)\n- [src/vs/workbench/api/browser/mainThreadChatStatus.ts](src/vs/workbench/api/browser/mainThreadChatStatus.ts)\n- [src/vs/workbench/api/common/extHostChatAgents2.ts](src/vs/workbench/api/common/extHostChatAgents2.ts)\n- [src/vs/workbench/api/common/extHostChatStatus.ts](src/vs/workbench/api/common/extHostChatStatus.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatGettingStarted.ts](src/vs/workbench/contrib/chat/browser/actions/chatGettingStarted.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts)\n- [src/vs/workbench/contrib/chat/browser/chat.contribution.ts](src/vs/workbench/contrib/chat/browser/chat.contribution.ts)\n- [src/vs/workbench/contrib/chat/browser/chat.ts](src/vs/workbench/contrib/chat/browser/chat.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts](src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditor.ts](src/vs/workbench/contrib/chat/browser/chatEditor.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditorInput.ts](src/vs/workbench/contrib/chat/browser/chatEditorInput.ts)\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts](src/vs/workbench/contrib/chat/browser/chatInputPart.ts)\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts](src/vs/workbench/contrib/chat/browser/chatListRenderer.ts)\n- [src/vs/workbench/contrib/chat/browser/chatQuick.ts](src/vs/workbench/contrib/chat/browser/chatQuick.ts)\n- [src/vs/workbench/contrib/chat/browser/chatSetup.ts](src/vs/workbench/contrib/chat/browser/chatSetup.ts)\n- [src/vs/workbench/contrib/chat/browser/chatStatus.ts](src/vs/workbench/contrib/chat/browser/chatStatus.ts)\n- [src/vs/workbench/contrib/chat/browser/chatStatusItemService.ts](src/vs/workbench/contrib/chat/browser/chatStatusItemService.ts)\n- [src/vs/workbench/contrib/chat/browser/chatViewPane.ts](src/vs/workbench/contrib/chat/browser/chatViewPane.ts)\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts](src/vs/workbench/contrib/chat/browser/chatWidget.ts)\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.css](src/vs/workbench/contrib/chat/browser/codeBlockPart.css)\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts](src/vs/workbench/contrib/chat/browser/codeBlockPart.ts)\n- [src/vs/workbench/contrib/chat/browser/media/chat.css](src/vs/workbench/contrib/chat/browser/media/chat.css)\n- [src/vs/workbench/contrib/chat/browser/media/chatSetup.css](src/vs/workbench/contrib/chat/browser/media/chatSetup.css)\n- [src/vs/workbench/contrib/chat/browser/media/chatStatus.css](src/vs/workbench/contrib/chat/browser/media/chatStatus.css)\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts](src/vs/workbench/contrib/chat/common/chatAgents.ts)\n- [src/vs/workbench/contrib/chat/common/chatContextKeys.ts](src/vs/workbench/contrib/chat/common/chatContextKeys.ts)\n- [src/vs/workbench/contrib/chat/common/chatEntitlementService.ts](src/vs/workbench/contrib/chat/common/chatEntitlementService.ts)\n- [src/vs/workbench/contrib/chat/common/chatModel.ts](src/vs/workbench/contrib/chat/common/chatModel.ts)\n- [src/vs/workbench/contrib/chat/common/chatService.ts](src/vs/workbench/contrib/chat/common/chatService.ts)\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts](src/vs/workbench/contrib/chat/common/chatServiceImpl.ts)\n- [src/vs/workbench/contrib/chat/common/chatViewModel.ts](src/vs/workbench/contrib/chat/common/chatViewModel.ts)\n- [src/vs/workbench/contrib/chat/test/common/chatService.test.ts](src/vs/workbench/contrib/chat/test/common/chatService.test.ts)\n- [src/vs/workbench/services/editor/common/editorGroupFinder.ts](src/vs/workbench/services/editor/common/editorGroupFinder.ts)\n- [src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts](src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts)\n- [src/vscode-dts/vscode.proposed.chatStatusItem.d.ts](src/vscode-dts/vscode.proposed.chatStatusItem.d.ts)\n\n\u003c/details\u003e\n\n\n\nThis page provides an overview of VS Code's chat and AI integration system, which enables features like Copilot Chat, inline chat, and AI-assisted editing. The system manages conversations between users and AI models, handling everything from UI rendering to processing requests and responses.\n\nFor information about language models and their configuration, see [Language Models](#3). For information about extension contributions to the chat system, see [Extension System](#4).\n\n## Architecture Overview\n\nThe chat system consists of multiple interconnected components that work together to provide a seamless chat experience. At a high level, the architecture includes UI components, services for handling requests and responses, and integration with language models.\n\n**Chat System Architecture**\n\n```mermaid\ngraph TD\n    subgraph \"User Interface\"\n        ChatWidget[\"ChatWidget\\n(Main chat UI container)\"]\n        ChatInputPart[\"ChatInputPart\\n(Input and attachments)\"]\n        ChatListRenderer[\"ChatListRenderer\\n(Renders messages)\"]\n    end\n    \n    subgraph \"Core Services\"\n        ChatService[\"ChatService\\n(Session management)\"]\n        ChatAgentService[\"ChatAgentService\\n(Manages AI agents)\"]\n        ChatSlashCommandService[\"ChatSlashCommandService\\n(Slash commands)\"]\n        ChatEditingService[\"ChatEditingService\\n(File edit operations)\"]\n    end\n    \n    subgraph \"AI Integration\"\n        LanguageModelsService[\"LanguageModelsService\\n(Model management)\"]\n        ChatAgentImplementation[\"ChatAgentImplementation\\n(Agent API impl)\"]\n        ExtHostChatAgents[\"ExtHostChatAgents\\n(Extension-contributed agents)\"]\n    end\n    \n    subgraph \"Data Models\"\n        ChatModel[\"ChatModel\\n(Chat data structure)\"]\n        ChatViewModel[\"ChatViewModel\\n(View state)\"]\n        ChatRequestModel[\"ChatRequestModel\\n(User requests)\"]\n        ChatResponseModel[\"ChatResponseModel\\n(AI responses)\"]\n    end\n    \n    ChatWidget --\u003e ChatInputPart\n    ChatWidget --\u003e ChatListRenderer\n    ChatWidget --\u003e ChatViewModel\n    \n    ChatViewModel --\u003e ChatModel\n    ChatModel --\u003e ChatRequestModel\n    ChatModel --\u003e ChatResponseModel\n    \n    ChatWidget --\u003e ChatService\n    ChatService --\u003e ChatAgentService\n    ChatAgentService --\u003e ChatAgentImplementation\n    ChatAgentService --\u003e ExtHostChatAgents\n    ChatAgentImplementation --\u003e LanguageModelsService\n    \n    ChatService --\u003e ChatSlashCommandService\n    ChatService --\u003e ChatEditingService\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:98-650]()\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts:106-236]()\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts:178-315]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:136-200]()\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:118-168]()\n\n## Chat Request-Response Flow\n\nThe chat system processes user inputs and generates responses through a series of interactions between components. This flow starts with user input and ends with a rendered response.\n\n**Chat Request-Response Flow**\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant ChatInputPart as ChatInputPart\n    participant ChatWidget as ChatWidget\n    participant ChatService as ChatService\n    participant ChatAgent as Agent (IChatAgentImplementation)\n    participant LanguageModel as Language Model\n\n    User-\u003e\u003eChatInputPart: Enter message\n    ChatInputPart-\u003e\u003eChatWidget: acceptInput()\n    ChatWidget-\u003e\u003eChatService: sendRequest(sessionId, request)\n    \n    ChatService-\u003e\u003eChatService: Create ChatRequestModel\n    ChatService-\u003e\u003eChatAgent: provideResponse(request)\n    \n    ChatAgent-\u003e\u003eLanguageModel: Send prompt\n    \n    LanguageModel--\u003e\u003eChatAgent: Stream response\n    \n    loop For each response chunk\n        ChatAgent--\u003e\u003eChatService: Progress update\n        ChatService--\u003e\u003eChatWidget: Update response\n        ChatWidget--\u003e\u003eUser: Display progress\n    end\n    \n    LanguageModel--\u003e\u003eChatAgent: Complete response\n    ChatAgent--\u003e\u003eChatService: Complete response\n    ChatService--\u003e\u003eChatWidget: Final response\n    ChatWidget--\u003e\u003eUser: Display complete response\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:1250-1350]()\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts:450-550]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:760-780]()\n\n## Key Components\n\n### Chat Widget\n\nThe `ChatWidget` is the central UI component that orchestrates the chat experience. It manages the chat view model, handles rendering of chat items, and coordinates input and response interactions.\n\nKey features:\n- Manages the chat view model and session\n- Renders chat messages through the list renderer\n- Handles user inputs and requests\n- Manages focus and visibility states\n- Coordinates with extensions via a contribution system\n\n```mermaid\nclassDiagram\n    class ChatWidget {\n        -ChatViewModel viewModel\n        -ChatInputPart inputPart\n        -WorkbenchObjectTree tree\n        -ChatListItemRenderer renderer\n        +render(container)\n        +setInput(value)\n        +acceptInput()\n        +reveal(item)\n        +focusInput()\n    }\n    \n    class IChatWidget {\n        \u003c\u003cinterface\u003e\u003e\n        +onDidSubmitAgent\n        +input: ChatInputPart\n        +viewModel: ChatViewModel\n        +lastSelectedAgent: IChatAgentData\n        +supportsFileReferences: boolean\n    }\n    \n    IChatWidget \u003c|.. ChatWidget\n    ChatWidget *-- ChatViewModel\n    ChatWidget *-- ChatInputPart\n    ChatWidget *-- ChatListItemRenderer\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:98-200]()\n- [src/vs/workbench/contrib/chat/browser/chat.ts:98-150]()\n\n### Chat Input Part\n\nThe `ChatInputPart` manages the input area of the chat interface, including:\n- Input editor for typing queries\n- Attachment management for files and variables\n- History navigation\n- Command detection and processing\n- Chat mode switching (Ask/Agent/Edit)\n\nNotable features:\n- Supports file and context attachments\n- Manages input history\n- Handles context variables like code snippets, files, and commands\n- Integrates with different chat modes (Ask/Edit/Agent)\n\n```mermaid\nclassDiagram\n    class ChatInputPart {\n        -ChatAttachmentModel attachmentModel\n        -CodeEditorWidget inputEditor\n        -HistoryNavigator2 history\n        -ChatMode currentMode\n        +acceptInput()\n        +setValue(value)\n        +focus()\n        +getAttachedAndImplicitContext(sessionId)\n        +setChatMode(mode)\n    }\n    \n    class ChatAttachmentModel {\n        -attachments: IChatRequestVariableEntry[]\n        +addContext(entry)\n        +clear()\n    }\n    \n    ChatInputPart *-- ChatAttachmentModel\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:136-450]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:451-646]()\n\n### Chat Service\n\nThe `ChatService` is the central service that manages chat sessions, processes requests, and coordinates with agents. It:\n- Manages chat sessions and their persistence\n- Processes chat requests and routes them to appropriate agents\n- Handles responses and progress updates\n- Provides session management APIs\n\n```mermaid\nclassDiagram\n    class ChatService {\n        -Map~string, ChatModel~ _sessionModels\n        -ISerializableChatsData _persistedSessions\n        +getHistory()\n        +startSession(location)\n        +sendRequest(sessionId, request)\n        +clearSession(sessionId)\n        +addCompleteRequest(sessionId, message, variables)\n    }\n    \n    class IChatService {\n        \u003c\u003cinterface\u003e\u003e\n        +onDidSubmitRequest\n        +onDidDisposeSession\n        +transferSession(sessionId, toWorkspace)\n        +isEnabled(location)\n        +getSession(sessionId)\n    }\n    \n    IChatService \u003c|.. ChatService\n    ChatService *-- ChatSessionStore\n    ChatService o-- ChatModel\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts:106-260]()\n- [src/vs/workbench/contrib/chat/common/chatService.ts:277-330]()\n\n### Chat Agents\n\nChat agents are the AI backends that process user queries and generate responses. The system supports:\n- Multiple agent types (default, extension-contributed)\n- Agent commands (slash commands)\n- Agent disambiguation for determining which agent should handle a request\n\nKey components:\n- `ChatAgentService` - Manages agent registration and selection\n- `IChatAgentImplementation` - Interface for agent implementations\n- `SetupChatAgent` - Special agent for handling setup flow\n\n```mermaid\nclassDiagram\n    class ChatAgentService {\n        -Map~string, IChatAgentData~ _agents\n        -Map~string, IChatAgentImplementation~ _implementations\n        +registerAgent(id, data)\n        +registerAgentImplementation(id, implementation)\n        +getAgent(id)\n        +getAgentsByName(agentNameFragment)\n    }\n    \n    class IChatAgentImplementation {\n        \u003c\u003cinterface\u003e\u003e\n        +provideResponse(request, progress, token)\n        +provideWelcomeMessage?(token)\n        +provideFollowups?(sessionId, response)\n    }\n    \n    class IChatAgentData {\n        \u003c\u003cinterface\u003e\u003e\n        +id: string\n        +name: string\n        +description: string\n        +metadata: IChatAgentMetadata\n        +slashCommands: IChatAgentCommand[]\n    }\n    \n    ChatAgentService o-- IChatAgentImplementation\n    ChatAgentService o-- IChatAgentData\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts:178-315]()\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts:600-730]()\n- [src/vs/workbench/contrib/chat/browser/chatSetup.ts:97-156]()\n\n### Chat List Renderer\n\nThe `ChatListItemRenderer` is responsible for rendering chat messages in the UI. It renders:\n- User requests\n- AI responses with markdown, code blocks, and other content\n- Progress indicators\n- Interactive elements like feedback buttons and followups\n\n```mermaid\nclassDiagram\n    class ChatListItemRenderer {\n        -MarkdownRenderer renderer\n        -EditorPool _editorPool\n        -DiffEditorPool _diffEditorPool\n        -TreePool _treePool\n        +renderElement(node, index, templateData)\n        +renderChatTreeItem(element, index, templateData)\n        +getCodeBlockInfosForResponse(response)\n        +editorsInUse()\n    }\n    \n    class IChatRendererDelegate {\n        \u003c\u003cinterface\u003e\u003e\n        +container: HTMLElement\n        +getListLength()\n        +onDidScroll?\n    }\n    \n    class IChatListItemTemplate {\n        \u003c\u003cinterface\u003e\u003e\n        +currentElement?: ChatTreeItem\n        +renderedParts?: IChatContentPart[]\n        +rowContainer: HTMLElement\n        +avatarContainer: HTMLElement\n        +value: HTMLElement\n    }\n    \n    ChatListItemRenderer --\u003e IChatRendererDelegate\n    ChatListItemRenderer ..\u003e IChatListItemTemplate\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:118-168]()\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:264-371]()\n\n### Content Parts System\n\nChat responses are rendered using a modular content part system that supports various content types:\n\n| Content Part Type | Description |\n|------------------|-------------|\n| `ChatMarkdownContentPart` | Renders markdown content including text and simple formatting |\n| `ChatCodeBlockPart` | Renders code with syntax highlighting and actions |\n| `ChatTextEditContentPart` | Shows text edits with diff viewer |\n| `ChatTreeContentPart` | Displays file trees and hierarchical data |\n| `ChatAttachmentsContentPart` | Shows attached files and resources |\n| `ChatToolInvocationPart` | Shows tool execution and results |\n| `ChatProgressContentPart` | Shows loading and progress indicators |\n| `ChatFollowups` | Displays suggested follow-up questions |\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatContentParts/chatMarkdownContentPart.ts]()\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts:1-100]()\n- [src/vs/workbench/contrib/chat/browser/chatFollowups.ts]()\n\n## Chat Modes and Agent Locations\n\nThe chat system supports different modes and locations within VS Code:\n\n### Chat Modes\n\nVS Code's chat system supports three primary modes:\n\n1. **Ask Mode (`ChatMode.Ask`)**: Standard chat interaction for asking questions and getting information.\n2. **Edit Mode (`ChatMode.Edit`)**: Focuses on making edits to code files based on natural language instructions.\n3. **Agent Mode (`ChatMode.Agent`)**: Advanced mode where the AI can use tools and perform complex tasks.\n\n```mermaid\ngraph TD\n    subgraph \"Chat Modes\"\n        AskMode[\"Ask Mode\\n(Default Q\u0026A)\"]\n        EditMode[\"Edit Mode\\n(Code modifications)\"]\n        AgentMode[\"Agent Mode\\n(Tool-enabled)\"]\n    end\n    \n    User --\u003e AskMode\n    User --\u003e EditMode\n    User --\u003e AgentMode\n    \n    AskMode --\u003e Response[\"Information responses\"]\n    EditMode --\u003e CodeEdits[\"Code edits \u0026 suggestions\"]\n    AgentMode --\u003e ToolInvocation[\"Tool invocation \u0026 execution\"]\n```\n\n### Chat Locations\n\nChat can be used in multiple locations within VS Code:\n\n| Location | Description | Use Cases |\n|----------|-------------|-----------|\n| `ChatAgentLocation.Panel` | Main chat panel view | General Q\u0026A, workspace-wide tasks |\n| `ChatAgentLocation.Editor` | Inline editor chat | Context-specific code help |\n| `ChatAgentLocation.Terminal` | Terminal integration | Command assistance |\n| `ChatAgentLocation.Notebook` | Notebook integration | Data analysis and explanation |\n\nSources:\n- [src/vs/workbench/contrib/chat/common/constants.ts:8-38]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts:50-150]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:480-490]()\n\n## Chat Request Variables and Context\n\nThe chat system supports various types of context that can be attached to chat requests for better results:\n\n### Variable Types\n\n| Variable Type | Description | Usage |\n|---------------|-------------|-------|\n| File Entry | A file from the workspace | Providing context from code files |\n| Directory Entry | A folder from the workspace | Including multiple related files |\n| Paste Variable | Copied code snippet | Sharing code without saving to a file |\n| Symbol Variable | Code symbol reference | Referencing specific functions/classes |\n| Image Variable | Image data or reference | Sharing screenshots or images |\n| Implicit Variable | Automatically attached context | Current file or selection |\n| Tool Variable | Reference to a tool | Allowing AI to use specific tools |\n| Diagnostic Variable | Code problems | Asking about errors or warnings |\n\nVariables can be referenced in prompts using the `#` prefix, and the system manages their serialization and attachment to requests.\n\n```mermaid\ngraph TD\n    subgraph \"Context Collection\"\n        FileContext[\"File Context\\n(#file)\"]\n        SymbolContext[\"Symbol Context\\n(#symbol)\"]\n        SelectionContext[\"Selection Context\\n(Implicit)\"]\n        DiagnosticContext[\"Diagnostic Context\\n(#problem)\"]\n        ToolContext[\"Tool Reference\\n(#tool)\"]\n        ImageContext[\"Image Context\\n(#image)\"]\n    end\n    \n    subgraph \"Chat Request Processing\"\n        ContextCollection[\"ChatAttachmentModel\"]\n        Request[\"ChatRequestModel\"]\n        AgentProcessing[\"Agent Processing\"]\n    end\n    \n    FileContext --\u003e ContextCollection\n    SymbolContext --\u003e ContextCollection\n    SelectionContext --\u003e ContextCollection\n    DiagnosticContext --\u003e ContextCollection\n    ToolContext --\u003e ContextCollection\n    ImageContext --\u003e ContextCollection\n    \n    ContextCollection --\u003e Request\n    Request --\u003e AgentProcessing\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatModel.ts:34-190]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:165-191]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts:68-113]()\n\n## Chat UI Components\n\n### Core UI Structure\n\nThe chat UI is composed of several key components:\n\n```mermaid\ngraph TD\n    subgraph \"Chat Widget Structure\"\n        ChatWidget[\"ChatWidget (Main container)\"]\n        \n        subgraph \"Message List\"\n            MessageList[\"WorkbenchObjectTree\"]\n            UserRequests[\"Request Items\"]\n            AIResponses[\"Response Items\"]\n        end\n        \n        subgraph \"Input Area\"\n            InputPart[\"ChatInputPart\"]\n            AttachmentsArea[\"Attachments Container\"]\n            InputEditor[\"Input Editor\"]\n            ActionButtons[\"Action Buttons\"]\n        end\n    end\n    \n    ChatWidget --\u003e MessageList\n    ChatWidget --\u003e InputPart\n    \n    MessageList --\u003e UserRequests\n    MessageList --\u003e AIResponses\n    \n    InputPart --\u003e AttachmentsArea\n    InputPart --\u003e InputEditor\n    InputPart --\u003e ActionButtons\n```\n\n### Message Rendering Structure\n\nChat messages are rendered using a component-based approach:\n\n```mermaid\ngraph TD\n    subgraph \"Chat Message Rendering\"\n        ListItem[\"Chat List Item\"]\n        \n        subgraph \"Header\"\n            Avatar[\"Avatar\"]\n            Username[\"Username\"]\n            Actions[\"Actions Toolbar\"]\n        end\n        \n        subgraph \"Content\"\n            ContentContainer[\"Message Content\"]\n            MarkdownParts[\"Markdown Content\"]\n            CodeBlocks[\"Code Blocks\"]\n            References[\"References\"]\n            Followups[\"Followup Suggestions\"]\n        end\n        \n        subgraph \"Footer\"\n            FooterActions[\"Feedback Buttons\"]\n        end\n    end\n    \n    ListItem --\u003e Header\n    ListItem --\u003e Content\n    ListItem --\u003e Footer\n    \n    Header --\u003e Avatar\n    Header --\u003e Username\n    Header --\u003e Actions\n    \n    Content --\u003e ContentContainer\n    ContentContainer --\u003e MarkdownParts\n    ContentContainer --\u003e CodeBlocks\n    ContentContainer --\u003e References\n    ContentContainer --\u003e Followups\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/media/chat.css:17-100]()\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:119-185]()\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:140-200]()\n\n## Chat Actions and Commands\n\nThe chat system provides numerous actions and commands for interacting with chat:\n\n| Action Category | Examples | Purpose |\n|----------------|----------|---------|\n| Chat Execution | Submit, Cancel, Retry | Control chat requests |\n| Chat Navigation | New Chat, History, Clear | Manage chat sessions |\n| Context Actions | Attach File, Attach Selection | Add context to chats |\n| Code Actions | Insert, Copy, Apply | Work with code from responses |\n| Editing Actions | Accept Changes, Show Changes | Manage AI-suggested edits |\n| Feedback Actions | Helpful, Not Helpful | Provide feedback on responses |\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/actions/chatActions.ts:104-188]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts:50-97]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts:68-95]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts:68-95]()\n\n## Chat Editing Integration\n\nThe chat system includes powerful capabilities for code editing:\n\n### Edit Flow\n\n```mermaid\nsequenceDiagram\n    participant User\n    participant ChatWidget\n    participant ChatEditingService\n    participant Editor\n    participant LanguageModel\n    \n    User-\u003e\u003eChatWidget: Request edit in Edit mode\n    ChatWidget-\u003e\u003eChatEditingService: Create editing session\n    ChatWidget-\u003e\u003eLanguageModel: Send edit request\n    LanguageModel--\u003e\u003eChatWidget: Return edit suggestions\n    ChatWidget-\u003e\u003eChatEditingService: Add edits to session\n    ChatEditingService-\u003e\u003eEditor: Show edits as preview\n    User-\u003e\u003eChatEditingService: Accept/Reject edits\n    ChatEditingService-\u003e\u003eEditor: Apply accepted edits\n```\n\n### Editing Features\n\n- Preview changes before applying\n- Accept/reject individual edits\n- View diffs of proposed changes\n- Apply edits to multiple files\n- Track edit history for undo/redo\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts:1-40]()\n- [src/vs/workbench/contrib/chat/common/chatEditingService.ts]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts:248-310]()\n\n## Extension Integration\n\nThe chat system provides extension points for third-party extensions to integrate with the AI capabilities:\n\n- Chat agent contributions\n- Tool integration for agent mode\n- Custom slash commands\n- Response rendering customization\n- Variable type extensions\n\nFor example, extensions can register custom agents:\n\n```mermaid\ngraph TD\n    subgraph \"Extension Host\"\n        ExtensionContribution[\"Extension Contribution\"]\n        ExtHostChatAgents[\"ExtHostChatAgents\"]\n        ChatParticipant[\"ChatParticipant API\"]\n    end\n    \n    subgraph \"Main Thread\"\n        MainThreadChatAgents[\"MainThreadChatAgents\"]\n        ChatAgentService[\"ChatAgentService\"]\n    end\n    \n    ExtensionContribution --\u003e ExtHostChatAgents\n    ExtHostChatAgents --\u003e ChatParticipant\n    ExtHostChatAgents \u003c--\u003e|\"RPC\"| MainThreadChatAgents\n    MainThreadChatAgents --\u003e ChatAgentService\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostChatAgents2.ts:1-50]()\n- [src/vs/workbench/contrib/chat/browser/chat.contribution.ts:54-107]()\n- [src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts:8-20]()\n\n## Conclusion\n\nVS Code's Chat and AI Integration system provides a comprehensive framework for AI-assisted development. The modular architecture separates concerns between UI, services, and AI interactions, enabling a flexible and extensible chat experience. The system supports various usage modes from simple Q\u0026A to complex agent-based interactions with tools, and integrates with multiple parts of the VS Code UI.\n\nThe combination of rich context capabilities, detailed response rendering, and editing integration makes this system powerful for developers seeking AI assistance throughout their development workflow."])</script>
    <script>self.__next_f.push([1, "30:T58f5,"])</script>
    <script>self.__next_f.push([1, "# Chat UI Components\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/src/singlefolder-tests/chat.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/chat.test.ts)\n- [src/vs/base/browser/ui/hover/hoverWidget.css](src/vs/base/browser/ui/hover/hoverWidget.css)\n- [src/vs/editor/browser/services/hoverService/hover.css](src/vs/editor/browser/services/hoverService/hover.css)\n- [src/vs/workbench/api/browser/mainThreadChatAgents2.ts](src/vs/workbench/api/browser/mainThreadChatAgents2.ts)\n- [src/vs/workbench/api/browser/mainThreadChatStatus.ts](src/vs/workbench/api/browser/mainThreadChatStatus.ts)\n- [src/vs/workbench/api/common/extHostChatAgents2.ts](src/vs/workbench/api/common/extHostChatAgents2.ts)\n- [src/vs/workbench/api/common/extHostChatStatus.ts](src/vs/workbench/api/common/extHostChatStatus.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatGettingStarted.ts](src/vs/workbench/contrib/chat/browser/actions/chatGettingStarted.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts)\n- [src/vs/workbench/contrib/chat/browser/chat.contribution.ts](src/vs/workbench/contrib/chat/browser/chat.contribution.ts)\n- [src/vs/workbench/contrib/chat/browser/chat.ts](src/vs/workbench/contrib/chat/browser/chat.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts](src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditor.ts](src/vs/workbench/contrib/chat/browser/chatEditor.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditorInput.ts](src/vs/workbench/contrib/chat/browser/chatEditorInput.ts)\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts](src/vs/workbench/contrib/chat/browser/chatInputPart.ts)\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts](src/vs/workbench/contrib/chat/browser/chatListRenderer.ts)\n- [src/vs/workbench/contrib/chat/browser/chatQuick.ts](src/vs/workbench/contrib/chat/browser/chatQuick.ts)\n- [src/vs/workbench/contrib/chat/browser/chatSetup.ts](src/vs/workbench/contrib/chat/browser/chatSetup.ts)\n- [src/vs/workbench/contrib/chat/browser/chatStatus.ts](src/vs/workbench/contrib/chat/browser/chatStatus.ts)\n- [src/vs/workbench/contrib/chat/browser/chatStatusItemService.ts](src/vs/workbench/contrib/chat/browser/chatStatusItemService.ts)\n- [src/vs/workbench/contrib/chat/browser/chatViewPane.ts](src/vs/workbench/contrib/chat/browser/chatViewPane.ts)\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts](src/vs/workbench/contrib/chat/browser/chatWidget.ts)\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.css](src/vs/workbench/contrib/chat/browser/codeBlockPart.css)\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts](src/vs/workbench/contrib/chat/browser/codeBlockPart.ts)\n- [src/vs/workbench/contrib/chat/browser/media/chat.css](src/vs/workbench/contrib/chat/browser/media/chat.css)\n- [src/vs/workbench/contrib/chat/browser/media/chatSetup.css](src/vs/workbench/contrib/chat/browser/media/chatSetup.css)\n- [src/vs/workbench/contrib/chat/browser/media/chatStatus.css](src/vs/workbench/contrib/chat/browser/media/chatStatus.css)\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts](src/vs/workbench/contrib/chat/common/chatAgents.ts)\n- [src/vs/workbench/contrib/chat/common/chatContextKeys.ts](src/vs/workbench/contrib/chat/common/chatContextKeys.ts)\n- [src/vs/workbench/contrib/chat/common/chatEntitlementService.ts](src/vs/workbench/contrib/chat/common/chatEntitlementService.ts)\n- [src/vs/workbench/contrib/chat/common/chatModel.ts](src/vs/workbench/contrib/chat/common/chatModel.ts)\n- [src/vs/workbench/contrib/chat/common/chatService.ts](src/vs/workbench/contrib/chat/common/chatService.ts)\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts](src/vs/workbench/contrib/chat/common/chatServiceImpl.ts)\n- [src/vs/workbench/contrib/chat/common/chatViewModel.ts](src/vs/workbench/contrib/chat/common/chatViewModel.ts)\n- [src/vs/workbench/contrib/chat/test/common/chatService.test.ts](src/vs/workbench/contrib/chat/test/common/chatService.test.ts)\n- [src/vs/workbench/services/editor/common/editorGroupFinder.ts](src/vs/workbench/services/editor/common/editorGroupFinder.ts)\n- [src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts](src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts)\n- [src/vscode-dts/vscode.proposed.chatStatusItem.d.ts](src/vscode-dts/vscode.proposed.chatStatusItem.d.ts)\n\n\u003c/details\u003e\n\n\n\nThis document covers the user interface components of the VS Code Chat feature, explaining the layout and interactions of the chat widget, input area, message rendering, and related UI elements. For information about the chat service backend, see [Chat Service](#9.2).\n\n## Overview\n\nVS Code's Chat UI provides a conversational interface for interacting with AI assistants like GitHub Copilot. The UI components create a chat experience supporting text input, context attachments, rich message rendering (including Markdown and code blocks), and various user interactions like voting, code insertion, and more.\n\nThe primary UI components are:\n- Chat widget: The container that hosts the entire chat experience\n- Input part: Handles text input, attachments, and submission\n- Message list renderer: Displays chat requests and responses\n- Code block parts: Renders and manages code blocks in responses\n\n```mermaid\nflowchart TD\n    subgraph VS_Code_UI\n        ChatWidget[\"ChatWidget\\n(Primary container)\"]\n        ChatInputPart[\"ChatInputPart\\n(User input handling)\"]\n        ChatListRenderer[\"ChatListItemRenderer\\n(Message display)\"] \n        CodeBlockPart[\"CodeBlockPart\\n(Code snippets)\"]\n        \n        ChatWidget --\u003e ChatInputPart\n        ChatWidget --\u003e ChatListRenderer\n        ChatListRenderer --\u003e CodeBlockPart\n    end\n    \n    subgraph Services\n        IChatService[\"IChatService\\n(Message handling)\"]\n        ChatAgentService[\"IChatAgentService\\n(AI providers)\"]\n        WidgetService[\"IChatWidgetService\\n(Widget registration)\"]\n    end\n    \n    User --\u003e ChatInputPart\n    ChatInputPart --\u003e IChatService\n    IChatService --\u003e ChatAgentService\n    ChatWidget --\u003e WidgetService\n    IChatService --\u003e ChatListRenderer\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:96-592]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:6-136]()\n- [src/vs/workbench/contrib/chat/browser/chat.ts:28-101]()\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:118-365]()\n\n## Chat Widget Architecture\n\nThe `ChatWidget` serves as the main container component that orchestrates the chat experience. It manages:\n- The chat view model\n- A message list for displaying requests and responses\n- An input part for accepting user input\n- Handling of events like scrolling, focus, and content height changes\n\n```mermaid\nclassDiagram\n    class ChatWidget {\n        +viewModel: ChatViewModel\n        +input: ChatInputPart\n        +tree: WorkbenchObjectTree~ChatTreeItem~\n        +renderer: ChatListItemRenderer\n        +codeBlockModelCollection: CodeBlockModelCollection\n        +attachmentModel: ChatAttachmentModel\n        +render(parent: HTMLElement)\n        +focusInput()\n        +acceptInput(query: string)\n        +clear()\n    }\n    \n    class ChatViewState {\n        +inputValue: string\n        +inputState: IChatInputState\n    }\n    \n    class ChatTreeItem {\n        \u003c\u003cinterface\u003e\u003e\n    }\n    \n    class IChatRequestViewModel {\n        +id: string\n        +message: string\n        +username: string\n    }\n    \n    class IChatResponseViewModel {\n        +id: string\n        +response: IChatResponseModel\n        +isComplete: boolean\n        +username: string\n    }\n    \n    ChatWidget --\u003e ChatInputPart\n    ChatWidget --\u003e ChatListItemRenderer\n    ChatWidget --\u003e ChatViewModel\n    ChatTreeItem \u003c|-- IChatRequestViewModel\n    ChatTreeItem \u003c|-- IChatResponseViewModel\n    ChatWidget ..\u003e ChatViewState\n```\n\nThe `ChatWidget` implements the `IChatWidget` interface, which defines the core functionality needed for a chat experience. This allows different chat implementations (like the standard chat view and quick chat) to provide consistent functionality.\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:98-592]()\n- [src/vs/workbench/contrib/chat/browser/chat.ts:74-100]()\n- [src/vs/workbench/contrib/chat/common/chatViewModel.ts:1-25]()\n\n## Chat Input Part\n\nThe `ChatInputPart` is a sophisticated component that handles user input. It includes:\n- An input editor for text entry\n- Support for variable attachments (files, code snippets, etc.)\n- UI for showing which mode is active (Ask, Edit, Agent)\n- Toolbar with actions (send, switch model, etc.)\n- History navigation\n\n### Input Part Structure\n\n```mermaid\nflowchart TD\n    InputPart[\"ChatInputPart\"]\n    Editor[\"Input Editor\\n(Monaco Editor)\"]\n    AttachmentModel[\"ChatAttachmentModel\\n(File/variable attachments)\"]\n    SelectedTools[\"ChatSelectedTools\\n(Selected AI tools)\"]\n    Toolbar[\"Chat Execute Toolbar\\n(Submit, Mode Toggle)\"]\n    InputSideToolbar[\"Input Side Toolbar\\n(Attach files)\"]\n    \n    InputPart --\u003e Editor\n    InputPart --\u003e AttachmentModel\n    InputPart --\u003e SelectedTools\n    InputPart --\u003e Toolbar\n    InputPart --\u003e InputSideToolbar\n    \n    subgraph InputListeners\n        HistoryNavigation[\"Input History Navigation\"]\n        FocusHandling[\"Focus Handling\"]\n        HeightChanges[\"Height Changes\"]\n    end\n    \n    Editor -.-\u003e InputListeners\n    \n    subgraph ExtensibleComponents\n        FollowupsContainer[\"Followups Container\"]\n        EditingSessionWidget[\"Chat Editing Session Widget\"]\n        AttachmentsContainer[\"Attachments Container\"]\n    end\n    \n    InputPart --\u003e ExtensibleComponents\n```\n\nThe `ChatInputPart` input section has a modular design to support different features:\n- Input editor for text entry with Monaco editor features\n- Support for attaching context (files, code snippets, images)\n- Followups for suggested responses\n- Editing session for showing files being modified\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:134-1815]()\n- [src/vs/workbench/contrib/chat/browser/media/chat.css:583-1092]()\n\n### Input Modes\n\nThe chat input supports several modes:\n\n| Mode | Description | UI Components | Primary Action |\n|------|-------------|--------------|----------------|\n| Ask | Standard chat queries | Text input, context attachments | ChatSubmitAction |\n| Edit | Modify workspace files | Text input, working set files | ChatEditingSessionSubmitAction |\n| Agent | Tool-augmented responses | Text input, tools selection | ChatAgentSubmitAction |\n\nThe input part adapts its UI based on the active mode:\n\n```mermaid\nflowchart TD\n    InputMode[\"Chat Mode\"]\n    AskMode[\"Ask Mode\\n(Simple queries)\"]\n    EditMode[\"Edit Mode\\n(File modification)\"]\n    AgentMode[\"Agent Mode\\n(Tool usage)\"]\n    \n    InputMode --\u003e|\"ChatMode.Ask\"| AskMode\n    InputMode --\u003e|\"ChatMode.Edit\"| EditMode\n    InputMode --\u003e|\"ChatMode.Agent\"| AgentMode\n    \n    AskMode --\u003e|\"Renders\"| SimpleInput[\"Text Input + Submit\"]\n    EditMode --\u003e|\"Renders\"| EditInput[\"Text Input + File List\"]\n    AgentMode --\u003e|\"Renders\"| AgentInput[\"Text Input + Tool Selection\"]\n    \n    class AskMode,SimpleInput askMode\n    class EditMode,EditInput editMode\n    class AgentMode,AgentInput agentMode\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts:50-229]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:475-497]()\n- [src/vs/workbench/contrib/chat/common/constants.ts]()\n\n### Attachments\n\nThe input part includes robust support for attachments through the `ChatAttachmentModel`:\n\n| Attachment Type | Description | Icon | Implementation |\n|-----------------|-------------|------|----------------|\n| File | Workspace file | File icon | IChatRequestFileEntry |\n| Directory | Workspace folder | Folder icon | IChatRequestDirectoryEntry |\n| Code Paste | Code snippet | Code icon | IChatRequestPasteVariableEntry |\n| Image | Image data | Image icon | IImageVariableEntry |\n| Tool | AI tool reference | Tool icon | IChatRequestToolEntry |\n| Implicit Context | Active editor content | File icon | IChatRequestImplicitVariableEntry |\n| Diagnostic | Error information | Error icon | IDiagnosticVariableEntry |\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatModel.ts:34-211]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:158-218]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts:68-113]()\n\n## Chat List Renderer\n\nThe `ChatListItemRenderer` is responsible for displaying chat messages in a tree view. It handles:\n- Rendering chat requests (user input)\n- Rendering chat responses (AI generated content)\n- Progressive rendering of incoming responses\n- Interactive elements like code blocks, followups, and vote buttons\n\n### Rendering Architecture\n\n```mermaid\nflowchart TD\n    ChatListItemRenderer[\"ChatListItemRenderer\\n(Renders chat items)\"]\n    \n    subgraph ContentRenderers[\"Content Part Renderers\"]\n        MarkdownRenderer[\"ChatMarkdownContentPart\\n(Text content)\"]\n        CodeBlockRenderer[\"CodeBlockPart\\n(Code snippets)\"]\n        ExtensionsRenderer[\"ChatExtensionsContentPart\\n(Extension actions)\"]\n        ProgressRenderer[\"ChatProgressContentPart\\n(Loading indicators)\"]\n        ReferencesRenderer[\"ChatReferencesContentPart\\n(File references)\"]\n        ToolRenderer[\"ChatToolInvocationPart\\n(Tool usage)\"]\n    end\n    \n    ChatResponse[\"Chat Response Data\"] --\u003e ChatListItemRenderer\n    ChatListItemRenderer --\u003e ContentRenderers\n    \n    subgraph Interactions\n        VoteActions[\"Vote Actions\\n(Helpful/Unhelpful)\"]\n        CopyActions[\"Copy Actions\"]\n        CodeBlockActions[\"Code Block Actions\\n(Insert/Apply)\"]\n    end\n    \n    ContentRenderers --\u003e Interactions\n```\n\nThe renderer uses a template-based approach to create the UI for each chat item:\n\n```\nRequest Template:\n- Avatar\n- Username\n- Request message (with formatting for variables)\n\nResponse Template:\n- Avatar\n- Username\n- Response content (progressive markdown rendering)\n- Title toolbar (with actions)\n- Footer toolbar (with vote actions)\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:118-371]()\n- [src/vs/workbench/contrib/chat/browser/media/chat.css:6-134]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts:30-43]()\n\n### Content Parts\n\nChat responses are rendered using specialized content part renderers for different types of content:\n\n| Content Part | Purpose | Implementation |\n|--------------|---------|----------------|\n| ChatMarkdownContentPart | Renders markdown text | Uses VS Code's MarkdownRenderer |\n| CodeBlockPart | Renders code with syntax highlighting | Uses Monaco editor instances |\n| ChatProgressContentPart | Shows loading animation | Uses animated ellipsis |\n| ChatReferencesContentPart | Displays referenced files | Uses list component |\n| ChatToolInvocationPart | Shows tool usage | Uses collapsible sections |\n| ChatWarningContentPart | Displays warnings | Uses warning styling |\n| ChatTaskContentPart | Shows progress on tasks | Uses progress indicators |\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatContentParts/chatContentParts.js]()\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:372-458]()\n- [src/vs/workbench/contrib/chat/browser/media/chat.css:134-450]()\n\n## Code Block Components\n\nCode blocks are an essential part of the chat UI, providing syntax-highlighted code snippets with interactive features.\n\n### Code Block Architecture\n\n```mermaid\nflowchart TD\n    CodeBlockPart[\"CodeBlockPart\"]\n    \n    subgraph Presentation\n        Editor[\"Monaco Editor Instance\"]\n        SyntaxHighlighting[\"Syntax Highlighting\"]\n        LineNumbers[\"Line Numbers\"]\n    end\n    \n    subgraph Actions\n        CopyAction[\"Copy Action\"]\n        InsertAction[\"Insert into Editor\"]\n        ApplyAction[\"Apply to Workspace\"]\n        CompareAction[\"Show Diff\"]\n    end\n    \n    CodeBlockPart --\u003e Presentation\n    CodeBlockPart --\u003e Actions\n    \n    CodeBlockModelCollection[\"CodeBlockModelCollection\"] --\u003e CodeBlockPart\n    \n    CodeBlockActionContext[\"ICodeBlockActionContext\"] -.-\u003e Actions\n```\n\nThe code block system uses a pool of editor instances to efficiently render code snippets:\n\n1. `EditorPool` manages a collection of reusable Monaco editor instances\n2. `CodeBlockPart` represents an individual code block in a response\n3. `CodeBlockModelCollection` manages the text models for all code blocks\n4. Actions provide functionality like copying, inserting, and applying code\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts:1-320]()\n- [src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts:40-370]()\n- [src/vs/workbench/contrib/chat/common/codeBlockModelCollection.ts]()\n\n### Code Block Actions\n\nCode blocks support several actions:\n\n| Action | Key Binding | Description | Implementation |\n|--------|-------------|-------------|----------------|\n| Copy | Ctrl+C | Copy code to clipboard | CopyAction |\n| Insert | Alt+Insert | Insert at cursor in editor | InsertCodeBlockOperation |\n| Apply | Alt+A | Apply changes to workspace | ApplyCodeBlockOperation |\n| Compare | Alt+C | Show diff with current file | CompareCodeBlockWithFileAction |\n| View as File | Alt+V | Open as temporary file | OpenCodeBlockAsFileAction |\n| Terminal | Alt+T | Run in terminal | RunInTerminalAction |\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts:67-230]()\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts:240-340]()\n\n## Chat Styling\n\nThe chat UI uses a consistent styling system defined in CSS:\n\n### Message Containers\n\n```\n.interactive-session                     (Main container)\n├── .interactive-list                    (Message list)\n│   └── .monaco-list-row                 (List row)\n│       └── .interactive-item-container  (Message container)\n│           ├── .header                  (Contains user info)\n│           │   ├── .user                (User section)\n│           │   │   ├── .avatar-container (Avatar)\n│           │   │   └── .username        (Username)\n│           │   └── .monaco-toolbar      (Message toolbar)\n│           ├── .value                   (Message content)\n│           │   └── .rendered-markdown   (Markdown content)\n│           └── .chat-footer-toolbar     (Vote buttons, etc.)\n└── .interactive-input-part             (Input container)\n    └── .chat-input-container           (Input editor)\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/media/chat.css:6-800]()\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:265-307]()\n\n### Input Part Styling\n\nThe input part has its own styling structure:\n\n```\n.interactive-input-part\n├── .chat-input-container               (Main input container)\n│   ├── .chat-editor-container          (Editor container)\n│   └── .chat-input-toolbars            (Input toolbars container)\n│       ├── .chat-execute-toolbar       (Submit button, model picker)\n│       └── [other toolbars]\n├── .chat-attachments-container         (Attachments area)\n│   ├── .chat-attachment-toolbar        (Attachment actions)\n│   ├── .chat-attached-context          (Attached files/variables)\n│   └── .chat-related-files             (Related files section)\n└── .interactive-input-followups        (Followups section)\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/media/chat.css:583-948]()\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:825-867]()\n\n## Widget Registration and Service Integration\n\nThe chat UI components integrate with VS Code's service architecture through several services:\n\n```mermaid\nflowchart TD\n    ChatWidget[\"ChatWidget\"]\n    ChatInputPart[\"ChatInputPart\"]\n    \n    subgraph Services\n        IChatService[\"IChatService\\n(Message handling)\"]\n        IChatWidgetService[\"IChatWidgetService\\n(Widget registry)\"]\n        IChatAgentService[\"IChatAgentService\\n(Agent registry)\"]\n        ILanguageModelsService[\"ILanguageModelsService\\n(Model registry)\"]\n        IChatVariablesService[\"IChatVariablesService\\n(Variable handling)\"]\n    end\n    \n    ChatWidget --\u003e|\"register\"| IChatWidgetService\n    ChatWidget --\u003e|\"submit request\"| IChatService\n    ChatWidget --\u003e|\"get current agent\"| IChatAgentService\n    \n    ChatInputPart --\u003e|\"get available models\"| ILanguageModelsService\n    ChatInputPart --\u003e|\"resolve variables\"| IChatVariablesService\n    \n    ChatWidget --\u003e ChatInputPart\n```\n\nThe `ChatWidgetService` serves as a registry for all chat widgets, allowing coordination between them and providing access to the most recently focused widget.\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chat.ts:28-62]()\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts:482-499]()\n- [src/vs/workbench/contrib/chat/browser/chat.contribution.ts:350-443]()\n\n## Conclusion\n\nThe VS Code Chat UI Components form a comprehensive and extensible system for conversational interfaces. The architecture employs a modular approach with specialized components for input handling, message rendering, and code block interactions. The system integrates with VS Code services for chat agent management, language model access, and widget registration.\n\nThis modular design allows for:\n1. Multiple chat implementations (panel, editor, quick chat)\n2. Extensibility through custom content parts\n3. Rich interactions with code blocks and other content\n4. Efficient rendering of large chat histories\n\nUnderstanding these components provides a foundation for extending VS Code's chat capabilities or implementing similar conversational interfaces."])</script>
    <script>self.__next_f.push([1, "31:T5748,"])</script>
    <script>self.__next_f.push([1, "# Chat Service and Agent Integration\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/vscode-api-tests/src/singlefolder-tests/chat.test.ts](extensions/vscode-api-tests/src/singlefolder-tests/chat.test.ts)\n- [src/vs/base/browser/ui/hover/hoverWidget.css](src/vs/base/browser/ui/hover/hoverWidget.css)\n- [src/vs/editor/browser/services/hoverService/hover.css](src/vs/editor/browser/services/hoverService/hover.css)\n- [src/vs/workbench/api/browser/mainThreadChatAgents2.ts](src/vs/workbench/api/browser/mainThreadChatAgents2.ts)\n- [src/vs/workbench/api/browser/mainThreadChatStatus.ts](src/vs/workbench/api/browser/mainThreadChatStatus.ts)\n- [src/vs/workbench/api/common/extHostChatAgents2.ts](src/vs/workbench/api/common/extHostChatAgents2.ts)\n- [src/vs/workbench/api/common/extHostChatStatus.ts](src/vs/workbench/api/common/extHostChatStatus.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatCodeblockActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatContextActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatGettingStarted.ts](src/vs/workbench/contrib/chat/browser/actions/chatGettingStarted.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatQuickInputActions.ts)\n- [src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts](src/vs/workbench/contrib/chat/browser/actions/chatTitleActions.ts)\n- [src/vs/workbench/contrib/chat/browser/chat.contribution.ts](src/vs/workbench/contrib/chat/browser/chat.contribution.ts)\n- [src/vs/workbench/contrib/chat/browser/chat.ts](src/vs/workbench/contrib/chat/browser/chat.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts](src/vs/workbench/contrib/chat/browser/chatEditing/chatEditingActions.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditor.ts](src/vs/workbench/contrib/chat/browser/chatEditor.ts)\n- [src/vs/workbench/contrib/chat/browser/chatEditorInput.ts](src/vs/workbench/contrib/chat/browser/chatEditorInput.ts)\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts](src/vs/workbench/contrib/chat/browser/chatInputPart.ts)\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts](src/vs/workbench/contrib/chat/browser/chatListRenderer.ts)\n- [src/vs/workbench/contrib/chat/browser/chatQuick.ts](src/vs/workbench/contrib/chat/browser/chatQuick.ts)\n- [src/vs/workbench/contrib/chat/browser/chatSetup.ts](src/vs/workbench/contrib/chat/browser/chatSetup.ts)\n- [src/vs/workbench/contrib/chat/browser/chatStatus.ts](src/vs/workbench/contrib/chat/browser/chatStatus.ts)\n- [src/vs/workbench/contrib/chat/browser/chatStatusItemService.ts](src/vs/workbench/contrib/chat/browser/chatStatusItemService.ts)\n- [src/vs/workbench/contrib/chat/browser/chatViewPane.ts](src/vs/workbench/contrib/chat/browser/chatViewPane.ts)\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts](src/vs/workbench/contrib/chat/browser/chatWidget.ts)\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.css](src/vs/workbench/contrib/chat/browser/codeBlockPart.css)\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts](src/vs/workbench/contrib/chat/browser/codeBlockPart.ts)\n- [src/vs/workbench/contrib/chat/browser/media/chat.css](src/vs/workbench/contrib/chat/browser/media/chat.css)\n- [src/vs/workbench/contrib/chat/browser/media/chatSetup.css](src/vs/workbench/contrib/chat/browser/media/chatSetup.css)\n- [src/vs/workbench/contrib/chat/browser/media/chatStatus.css](src/vs/workbench/contrib/chat/browser/media/chatStatus.css)\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts](src/vs/workbench/contrib/chat/common/chatAgents.ts)\n- [src/vs/workbench/contrib/chat/common/chatContextKeys.ts](src/vs/workbench/contrib/chat/common/chatContextKeys.ts)\n- [src/vs/workbench/contrib/chat/common/chatEntitlementService.ts](src/vs/workbench/contrib/chat/common/chatEntitlementService.ts)\n- [src/vs/workbench/contrib/chat/common/chatModel.ts](src/vs/workbench/contrib/chat/common/chatModel.ts)\n- [src/vs/workbench/contrib/chat/common/chatService.ts](src/vs/workbench/contrib/chat/common/chatService.ts)\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts](src/vs/workbench/contrib/chat/common/chatServiceImpl.ts)\n- [src/vs/workbench/contrib/chat/common/chatViewModel.ts](src/vs/workbench/contrib/chat/common/chatViewModel.ts)\n- [src/vs/workbench/contrib/chat/test/common/chatService.test.ts](src/vs/workbench/contrib/chat/test/common/chatService.test.ts)\n- [src/vs/workbench/services/editor/common/editorGroupFinder.ts](src/vs/workbench/services/editor/common/editorGroupFinder.ts)\n- [src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts](src/vscode-dts/vscode.proposed.chatParticipantAdditions.d.ts)\n- [src/vscode-dts/vscode.proposed.chatStatusItem.d.ts](src/vscode-dts/vscode.proposed.chatStatusItem.d.ts)\n\n\u003c/details\u003e\n\n\n\nThis document provides a technical overview of VS Code's chat service architecture and agent integration system. It explains how the chat service manages sessions, processes requests, and integrates with AI agents to provide intelligent chat capabilities within VS Code. For information about the chat UI components, see [Chat UI Components](#9.1).\n\n## Core Architecture\n\nThe chat system in VS Code is built around a service-oriented architecture with clear separation between the service layer, agent integration, and UI components. The system is designed to support multiple chat providers (agents) while maintaining a consistent user experience.\n\n```mermaid\ngraph TD\n    subgraph \"Service Layer\"\n        ChatService[\"ChatService\\nMain implementation\"]\n        IChatService[\"IChatService\\nInterface\"]\n        ChatSessionStore[\"ChatSessionStore\\nPersistence\"]\n        ChatModel[\"ChatModel\\nData model\"]\n    end\n\n    subgraph \"Agent Integration\"\n        ChatAgentService[\"ChatAgentService\\nAgent registration/management\"]\n        IChatAgentService[\"IChatAgentService\\nInterface\"]\n        ExtHostChatAgents[\"ExtHostChatAgents\\nExtension host integration\"]\n        MainThreadChatAgents[\"MainThreadChatAgents\\nMain thread agent handling\"]\n    end\n\n    subgraph \"Chat UI\"\n        ChatWidget[\"ChatWidget\\nMain UI container\"]\n        ChatInputPart[\"ChatInputPart\\nInput handling\"]\n        ChatListRenderer[\"ChatListRenderer\\nResponse rendering\"]\n    end\n\n    User[User] --\u003e|types request| ChatInputPart\n    ChatInputPart --\u003e|submits| ChatWidget\n    ChatWidget --\u003e|calls| IChatService\n    IChatService --\u003e|implemented by| ChatService\n    ChatService --\u003e|uses| ChatSessionStore\n    ChatService --\u003e|creates/updates| ChatModel\n    ChatService --\u003e|requests responses from| IChatAgentService\n    IChatAgentService --\u003e|implemented by| ChatAgentService\n    ChatAgentService --\u003e|communicates with| ExtHostChatAgents\n    ExtHostChatAgents --\u003e|sends/receives via| MainThreadChatAgents\n    ChatService --\u003e|updates| ChatWidget\n    ChatWidget --\u003e|renders with| ChatListRenderer\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatService.ts]\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts]\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts]\n- [src/vs/workbench/contrib/chat/browser/chatWidget.ts]\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts]\n\n## Chat Service\n\nThe `ChatService` is the core component that manages chat sessions, processes requests, and handles responses. It implements the `IChatService` interface and is responsible for:\n\n1. Creating and managing chat sessions\n2. Processing chat requests\n3. Retrieving responses from the appropriate agents\n4. Handling chat history and persistence\n5. Managing variable substitution and session transfers\n\n```mermaid\nclassDiagram\n    class IChatService {\n        \u003c\u003cinterface\u003e\u003e\n        +createChatSession()\n        +sendRequest()\n        +addCompleteRequest()\n        +removeRequest()\n        +getHistory()\n        +clearHistory()\n        +transferChatSession()\n    }\n\n    class ChatService {\n        -_sessionModels: DisposableMap~string, ChatModel~\n        -_pendingRequests: DisposableMap~string, CancellableRequest~\n        -_persistedSessions: ISerializableChatsData\n        +createChatSession()\n        +sendRequest()\n        +addCompleteRequest()\n        +removeRequest()\n        +getHistory()\n        +clearHistory()\n        -trace()\n        -saveState()\n        -deserializeChats()\n    }\n\n    class ChatModel {\n        +sessionId: string\n        +requests: IChatRequestModel[]\n        +addRequest()\n        +updateRequest()\n        +removeRequest()\n    }\n\n    class IChatRequestModel {\n        \u003c\u003cinterface\u003e\u003e\n        +id: string\n        +message: IParsedChatRequest\n        +response: IChatResponseModel\n    }\n\n    class IChatResponseModel {\n        \u003c\u003cinterface\u003e\u003e\n        +response: IMarkdownString\n        +errorDetails: IChatResponseErrorDetails\n        +result: IChatAgentResult\n    }\n\n    IChatService \u003c|.. ChatService\n    ChatService --\u003e ChatModel\n    ChatModel --\u003e IChatRequestModel\n    IChatRequestModel --\u003e IChatResponseModel\n```\n\n### Session Management\n\nThe `ChatService` manages chat sessions through the `ChatModel` class. Each chat session has a unique ID and contains a collection of requests and responses. Sessions can be persisted to storage and loaded when needed.\n\n```typescript\n// Creating a new chat session\nconst sessionId = await chatService.createChatSession();\n\n// Sending a request in the session\nawait chatService.sendRequest(sessionId, { message: 'Hello', variables: {} });\n\n// Adding a complete request and response\nchatService.addCompleteRequest(sessionId, 'Hello', undefined, 0, { message: 'Hi there!' });\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatService.ts:1-195]\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts:106-200]\n- [src/vs/workbench/contrib/chat/common/chatModel.ts:1-100]\n\n## Agent Integration\n\nThe agent integration system allows VS Code to interact with various chat providers/agents through a consistent interface. The `ChatAgentService` implements the `IChatAgentService` interface and manages the registration and use of different chat agents.\n\n```mermaid\ngraph TD\n    subgraph \"Agent Integration\"\n        IChatAgentService[\"IChatAgentService\\nAgent interface\"]\n        ChatAgentService[\"ChatAgentService\\nService implementation\"]\n        IChatAgentImplementation[\"IChatAgentImplementation\\nAgent implementation\"]\n        SetupChatAgent[\"SetupChatAgent\\nInitial setup agent\"]\n        ToolsAgent[\"Tools-enabled agent\\nSupports tool calls\"]\n    end\n    \n    subgraph \"Agent Modes\"\n        ChatMode[\"ChatMode\\nAsk | Edit | Agent\"]\n        EditingService[\"ChatEditingService\\nFile editing support\"]\n    end\n    \n    subgraph \"Extension Integration\"\n        ExtHostChatAgents[\"ExtHostChatAgents\\nExtension host side\"]\n        MainThreadChatAgents[\"MainThreadChatAgents\\nMain thread side\"]\n        LanguageModelToolsService[\"LanguageModelToolsService\\nTool support\"]\n    end\n    \n    ChatAgentService --|implements| IChatAgentService\n    SetupChatAgent --|implements| IChatAgentImplementation\n    ToolsAgent --|implements| IChatAgentImplementation\n    \n    ChatAgentService --\u003e|registers| SetupChatAgent\n    ChatAgentService --\u003e|registers| ToolsAgent\n    ChatAgentService --\u003e|uses| ChatMode\n    ChatAgentService ---|uses| EditingService\n    \n    ExtHostChatAgents \u003c--\u003e|RPC| MainThreadChatAgents\n    MainThreadChatAgents --\u003e|calls| ChatAgentService\n    ToolsAgent --\u003e|uses| LanguageModelToolsService\n```\n\n### Agent Registration\n\nAgents are registered with the `ChatAgentService` and provide implementations for generating responses to chat requests. The system supports different modes for agents:\n\n- **Ask Mode**: Standard chat interaction\n- **Edit Mode**: For code editing operations\n- **Agent Mode**: Advanced agent with tool-calling capabilities\n\n```typescript\n// Registering an agent\nchatAgentService.registerAgent(id, {\n  id,\n  name: 'My Agent',\n  isDefault: false,\n  modes: [ChatMode.Ask, ChatMode.Edit],\n  slashCommands: [],\n  locations: [ChatAgentLocation.Panel]\n});\n\n// Implementing an agent\nchatAgentService.registerAgentImplementation(id, {\n  provideResponse: async (request, progress, token) =\u003e {\n    // Process request and send response\n  }\n});\n```\n\n### Agent Response Flow\n\nWhen a chat request is made:\n\n1. `ChatService` identifies the target agent based on the request\n2. `ChatAgentService` forwards the request to the appropriate agent implementation\n3. The agent processes the request and returns responses through a progress API\n4. `ChatService` updates the UI with the responses\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatAgents.ts:1-100]\n- [src/vs/workbench/api/common/extHostChatAgents2.ts:38-110]\n- [src/vs/workbench/contrib/chat/common/constants.ts]\n\n## Chat Input\n\nThe `ChatInputPart` class handles user input in the chat interface, including:\n\n1. Text input management\n2. Variable and context attachment\n3. Input history navigation\n4. Chat mode switching (Ask/Edit/Agent)\n5. Language model selection\n\n```mermaid\nclassDiagram\n    class ChatInputPart {\n        -_inputEditor: CodeEditorWidget\n        -_attachmentModel: ChatAttachmentModel\n        -_currentMode: ChatMode\n        -_currentLanguageModel: ILanguageModelChatMetadataAndIdentifier\n        +attachmentModel: ChatAttachmentModel\n        +inputEditor: ICodeEditor\n        +currentMode: ChatMode\n        +render()\n        +focus()\n        +acceptInput()\n        +setChatMode()\n        +getAttachedAndImplicitContext()\n    }\n\n    class ChatAttachmentModel {\n        -_attachments: IChatRequestVariableEntry[]\n        +attachments: IChatRequestVariableEntry[]\n        +addContext()\n        +removeContext()\n        +clear()\n        +updateContent()\n    }\n\n    class CodeEditorWidget {\n        +onDidChangeModelContent: Event\n        +setValue()\n        +getValue()\n        +focus()\n    }\n\n    class HistoryNavigator2 {\n        +current()\n        +next()\n        +previous()\n        +add()\n    }\n\n    ChatInputPart --\u003e ChatAttachmentModel\n    ChatInputPart --\u003e CodeEditorWidget\n    ChatInputPart --\u003e HistoryNavigator2\n```\n\n### Context Attachment\n\nUsers can attach different types of context to their chat requests:\n\n- **Files**: Code files as context\n- **Selection**: Current editor selection\n- **Images**: Screenshot or image attachments\n- **Diagnostics**: Error information\n- **Tools**: Tools for Agent mode\n\nThe `ChatAttachmentModel` manages these attachments and makes them available to the agent when processing the request.\n\n```typescript\n// Adding file context\nchatWidget.attachmentModel.addContext({\n  kind: 'file',\n  name: basename(uri),\n  uri,\n  value: uri\n});\n\n// Getting all context for a request\nconst context = chatInputPart.getAttachedAndImplicitContext(sessionId);\n```\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:136-250]\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:420-550]\n- [src/vs/workbench/contrib/chat/common/chatModel.ts:34-150]\n\n## Chat Response Processing\n\nResponse processing involves several steps:\n\n1. Receiving response content from the agent\n2. Processing and rendering markdown content\n3. Handling code blocks, tool invocations, and other specialized content\n4. Rendering UI components for responses\n\n```mermaid\nflowchart TD\n    Request[User Request] --\u003e|submitted to| ChatService\n\n    subgraph \"Request Processing\"\n        ChatService --\u003e|finds target agent| AgentImplementation\n        AgentImplementation --\u003e|processes request| ResponseProgress\n    end\n\n    subgraph \"Response Processing\"\n        ResponseProgress --\u003e|markdown content| IChatProgressHistoryResponseContent\n        ResponseProgress --\u003e|code blocks| IChatResponseCodeblockUriPart\n        ResponseProgress --\u003e|tool invocations| IChatToolInvocation\n        ResponseProgress --\u003e|edits| IChatTextEditGroup\n    end\n\n    subgraph \"UI Rendering\"\n        IChatProgressHistoryResponseContent --\u003e|rendered by| ChatMarkdownContentPart\n        IChatResponseCodeblockUriPart --\u003e|rendered by| CodeBlockPart\n        IChatToolInvocation --\u003e|rendered by| ChatToolInvocationPart\n        IChatTextEditGroup --\u003e|rendered by| ChatTextEditContentPart\n    end\n\n    UI[UI Update] --\u003e|displayed to| User[User]\n```\n\n### Response Content Types\n\nThe chat system supports various response content types:\n\n| Content Type | Implementation | Description |\n|--------------|----------------|-------------|\n| Markdown | `IChatMarkdownContent` | Regular text responses with markdown formatting |\n| Code Blocks | `IChatResponseCodeblockUriPart` | Code snippets with syntax highlighting |\n| Tool Invocations | `IChatToolInvocation` | Agent using tools to perform tasks |\n| Text Edits | `IChatTextEditGroup` | Code editing operations |\n| References | `IChatContentReference` | References to files or locations |\n| File Trees | `IChatTreeData` | Directory/file structure views |\n| Working Progress | `IChatProgressMessage` | Progress indicators during response generation |\n\nSources:\n- [src/vs/workbench/contrib/chat/common/chatModel.ts:276-300]\n- [src/vs/workbench/contrib/chat/browser/chatListRenderer.ts:360-450]\n- [src/vs/workbench/contrib/chat/browser/codeBlockPart.ts:1-100]\n\n## Agent Modes\n\nThe chat system supports three primary modes of operation:\n\n### Ask Mode\n\nStandard chat interaction where the agent responds to queries with information, code examples, or explanations.\n\n```typescript\nchatWidget.input.setChatMode(ChatMode.Ask);\n```\n\n### Edit Mode\n\nEnables the agent to propose edits to files, with a specialized UI for reviewing and applying changes.\n\n```typescript\nchatWidget.input.setChatMode(ChatMode.Edit);\n```\n\n### Agent Mode\n\nAdvanced mode that enables the agent to use tools and perform more complex operations on the workspace.\n\n```typescript\nchatWidget.input.setChatMode(ChatMode.Agent);\n```\n\nThe different modes affect:\n- Which agents are available\n- UI presentation\n- Available actions\n- Response processing\n\nSources:\n- [src/vs/workbench/contrib/chat/common/constants.ts]\n- [src/vs/workbench/contrib/chat/browser/chatInputPart.ts:480-505]\n- [src/vs/workbench/contrib/chat/browser/actions/chatExecuteActions.ts:50-150]\n\n## Extension Integration\n\nThe chat system can be extended by VS Code extensions through:\n\n1. Registering custom chat agents\n2. Contributing tools for Agent mode\n3. Adding custom slash commands\n4. Extending the chat UI\n\nThe extension host communicates with the main thread through a well-defined protocol:\n\n```mermaid\nsequenceDiagram\n    participant Extension as Extension\n    participant ExtHost as ExtHostChatAgents\n    participant RPC as RPC Protocol\n    participant MainThread as MainThreadChatAgents\n    participant Service as ChatAgentService\n    participant UI as ChatWidget\n\n    Extension-\u003e\u003eExtHost: registerChatAgent()\n    ExtHost-\u003e\u003eRPC: $registerChatAgent()\n    RPC-\u003e\u003eMainThread: $registerChatAgent()\n    MainThread-\u003e\u003eService: registerAgent()\n    \n    UI-\u003e\u003eService: sendRequest()\n    Service-\u003e\u003eMainThread: provideResponse()\n    MainThread-\u003e\u003eRPC: $provideResponse()\n    RPC-\u003e\u003eExtHost: $provideResponse()\n    ExtHost-\u003e\u003eExtension: provideResponse()\n    \n    Extension-\u003e\u003eExtHost: stream.markdown()\n    ExtHost-\u003e\u003eRPC: $handleProgressChunk()\n    RPC-\u003e\u003eMainThread: $handleProgressChunk()\n    MainThread-\u003e\u003eService: progress updates\n    Service-\u003e\u003eUI: render updates\n```\n\n### Tool Integration\n\nAgents in Agent mode can access tools contributed by extensions:\n\n```typescript\n// Tool registration\nlanguageModelToolsService.registerTool({\n  id: 'myTool',\n  name: 'My Tool',\n  description: 'Does something useful',\n  invoke: async (args) =\u003e {\n    // Tool implementation\n    return { result: 'Tool result' };\n  }\n});\n\n// Tool invocation in agent response\nstream.tool({\n  toolId: 'myTool',\n  args: { param: 'value' }\n}, async (progress) =\u003e {\n  // Tool execution with progress\n  return 'Final result';\n});\n```\n\nSources:\n- [src/vs/workbench/api/common/extHostChatAgents2.ts:79-135]\n- [src/vs/workbench/api/browser/mainThreadChatAgents2.ts:1-50]\n- [src/vs/workbench/contrib/chat/common/languageModelToolsService.ts]\n\n## Chat Service Lifecycle\n\nThe chat service lifecycle follows these key steps:\n\n1. **Initialization**:\n   - Services are registered during workbench initialization\n   - Previous sessions are loaded from storage\n   - Default agents are registered\n\n2. **Session Creation**:\n   - User opens chat UI\n   - New chat session is created\n   - Session is associated with a model and widget\n\n3. **Request Processing**:\n   - User submits request\n   - Request is sent to appropriate agent\n   - Response is received and processed\n   - UI is updated\n\n4. **Session Persistence**:\n   - Sessions are saved to storage\n   - Sessions can be restored later\n\n5. **Session Cleanup**:\n   - Sessions can be cleared\n   - Resources are disposed\n\nSources:\n- [src/vs/workbench/contrib/chat/browser/chat.contribution.ts:350-400]\n- [src/vs/workbench/contrib/chat/common/chatServiceImpl.ts:142-235]\n- [src/vs/workbench/contrib/chat/browser/actions/chatClearActions.ts:1-50]\n\n## Conclusion\n\nThe Chat Service and Agent Integration system in VS Code provides a flexible and extensible architecture for incorporating AI assistants into the development environment. The system separates concerns between services, agent integration, and UI components, allowing for easy extension and customization.\n\nKey components include:\n- `ChatService`: Core service for managing chat sessions\n- `ChatAgentService`: Handles agent registration and integration\n- `ChatInputPart`: Manages user input and context\n- `ChatWidget`: Main UI component for the chat interface\n\nThe architecture supports multiple chat modes, tool integration, and extension points for customization, making it a powerful platform for AI-assisted development."])</script>
    <script>self.__next_f.push([1, "32:T4c28,"])</script>
    <script>self.__next_f.push([1, "# Git Integration\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/git/package.json](extensions/git/package.json)\n- [extensions/git/package.nls.json](extensions/git/package.nls.json)\n- [extensions/git/src/actionButton.ts](extensions/git/src/actionButton.ts)\n- [extensions/git/src/api/api1.ts](extensions/git/src/api/api1.ts)\n- [extensions/git/src/api/extension.ts](extensions/git/src/api/extension.ts)\n- [extensions/git/src/api/git.d.ts](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/askpass-empty.sh](extensions/git/src/askpass-empty.sh)\n- [extensions/git/src/askpass-main.ts](extensions/git/src/askpass-main.ts)\n- [extensions/git/src/askpass.sh](extensions/git/src/askpass.sh)\n- [extensions/git/src/askpass.ts](extensions/git/src/askpass.ts)\n- [extensions/git/src/autofetch.ts](extensions/git/src/autofetch.ts)\n- [extensions/git/src/commands.ts](extensions/git/src/commands.ts)\n- [extensions/git/src/git.ts](extensions/git/src/git.ts)\n- [extensions/git/src/gitEditor.ts](extensions/git/src/gitEditor.ts)\n- [extensions/git/src/ipc/ipcClient.ts](extensions/git/src/ipc/ipcClient.ts)\n- [extensions/git/src/ipc/ipcServer.ts](extensions/git/src/ipc/ipcServer.ts)\n- [extensions/git/src/main.ts](extensions/git/src/main.ts)\n- [extensions/git/src/model.ts](extensions/git/src/model.ts)\n- [extensions/git/src/postCommitCommands.ts](extensions/git/src/postCommitCommands.ts)\n- [extensions/git/src/repository.ts](extensions/git/src/repository.ts)\n- [extensions/git/src/ssh-askpass-empty.sh](extensions/git/src/ssh-askpass-empty.sh)\n- [extensions/git/src/ssh-askpass.sh](extensions/git/src/ssh-askpass.sh)\n- [extensions/git/src/statusbar.ts](extensions/git/src/statusbar.ts)\n- [extensions/git/src/terminal.ts](extensions/git/src/terminal.ts)\n- [extensions/git/src/test/git.test.ts](extensions/git/src/test/git.test.ts)\n- [extensions/git/src/util.ts](extensions/git/src/util.ts)\n- [extensions/git/tsconfig.json](extensions/git/tsconfig.json)\n\n\u003c/details\u003e\n\n\n\nThis wiki page documents the Git integration in VS Code, explaining how the source control functionality is implemented and how it interfaces with both VS Code's extension API and the Git command-line tool. The Git extension provides a comprehensive UI for common version control operations without requiring users to switch to the terminal.\n\nFor information about extension development in general, see [VS Code Architecture Overview](#1).\n\n## Architecture Overview\n\nThe Git integration in VS Code is implemented as a built-in extension that provides source control features through VS Code's Source Control API. It acts as a bridge between VS Code and the Git command-line tool installed on the user's system.\n\n### Core Components Diagram\n\n```mermaid\ngraph TD\n    subgraph \"VS Code\"\n        SCM[\"Source Control API\"]\n        StatusBar[\"Status Bar API\"]\n        Workspace[\"Workspace API\"]\n        Terminal[\"Terminal API\"]\n    end\n    \n    subgraph \"Git Extension\"\n        Model[\"Model\u003cbr\u003eManages repositories\"]\n        Repository[\"Repository\u003cbr\u003eTracks state of Git repo\"]\n        CommandCenter[\"CommandCenter\u003cbr\u003eExecutes Git commands\"]\n        GitService[\"Git\u003cbr\u003eInteracts with Git executable\"]\n        API[\"Git Extension API\u003cbr\u003eExposes Git functionality\"]\n    end\n    \n    subgraph \"External\"\n        GitExecutable[\"Git Executable\"]\n        Credentials[\"Credential Storage\"]\n    end\n    \n    SCM \u003c--\u003e Model\n    StatusBar \u003c--\u003e Repository\n    Workspace --\u003e Model\n    Terminal \u003c--\u003e GitService\n    \n    Model --\u003e Repository\n    Repository --\u003e CommandCenter\n    CommandCenter --\u003e GitService\n    GitService --\u003e GitExecutable\n    \n    Repository --\u003e API\n    \n    GitExecutable \u003c--\u003e Credentials\n```\n\nSources:\n- [extensions/git/src/model.ts:174-197](extensions/git/src/model.ts)\n- [extensions/git/src/repository.ts:673-687](extensions/git/src/repository.ts)\n- [extensions/git/src/commands.ts:714-732](extensions/git/src/commands.ts)\n- [extensions/git/src/git.ts:369-386](extensions/git/src/git.ts)\n- [extensions/git/src/main.ts:88-120](extensions/git/src/main.ts)\n\n### Git Extension Lifecycle\n\n```mermaid\nsequenceDiagram\n    participant VS as VS Code\n    participant Main as Main (main.ts)\n    participant Model as Model (model.ts)\n    participant Git as Git (git.ts)\n    participant Repo as Repository\n    \n    VS-\u003e\u003eMain: activate(context)\n    Main-\u003e\u003eMain: _activate(context)\n    Main-\u003e\u003eMain: createModel()\n    Main-\u003e\u003eGit: findGit(pathHints)\n    Git--\u003e\u003eMain: Git instance\n    Main-\u003e\u003eModel: new Model(git, ...)\n    Model-\u003e\u003eModel: doInitialScan()\n    Model-\u003e\u003eModel: scanWorkspaceFolders()\n    Model-\u003e\u003eRepo: openRepository()\n    Repo-\u003e\u003eRepo: git.getRepositoryDotGit()\n    Repo--\u003e\u003eModel: repository instance\n    Model--\u003e\u003eMain: model instance\n    Main-\u003e\u003eVS: return GitExtensionImpl\n```\n\nSources:\n- [extensions/git/src/main.ts:248-254](extensions/git/src/main.ts)\n- [extensions/git/src/main.ts:188-242](extensions/git/src/main.ts)\n- [extensions/git/src/api/extension.ts:12-21](extensions/git/src/api/extension.ts)\n\n## Repository Management\n\nThe Git extension manages one or more Git repositories found in the workspace. Each repository is represented by a `Repository` class that tracks the state of the Git repository and provides operations to interact with it.\n\n### Repository Structure\n\n```mermaid\nclassDiagram\n    class Repository {\n        -sourceControl: SourceControl\n        -mergeGroup: SourceControlResourceGroup\n        -indexGroup: SourceControlResourceGroup\n        -workingTreeGroup: SourceControlResourceGroup\n        -untrackedGroup: SourceControlResourceGroup\n        -HEAD: Branch\n        -operations: OperationManager\n        +root: string\n        +status()\n        +checkout()\n        +commit()\n        +pull()\n        +push()\n        +sync()\n        +fetch()\n    }\n    \n    class Resource {\n        +resourceUri: Uri\n        +type: Status\n        +original: Uri\n        +renameResourceUri?: Uri\n        +command: Command\n        +resourceGroupType: ResourceGroupType\n        +letter: string\n        +color: ThemeColor\n        +open()\n    }\n    \n    class Model {\n        -repositories: Repository[]\n        -openRepositories: OpenRepository[]\n        +getRepository()\n        +registerGitProvider()\n        +openRepository()\n        +closeRepository()\n    }\n    \n    Model --\u003e \"0..*\" Repository : manages\n    Repository --\u003e \"1..*\" Resource : contains\n```\n\nSources:\n- [extensions/git/src/repository.ts:673-687](extensions/git/src/repository.ts)\n- [extensions/git/src/repository.ts:49-333](extensions/git/src/repository.ts)\n- [extensions/git/src/model.ts:174-197](extensions/git/src/model.ts)\n\n### Resource Groups\n\nThe Git extension organizes file changes into different resource groups:\n\n| Group Name | ResourceGroupType | Description |\n|------------|-------------------|-------------|\n| Merge Changes | `ResourceGroupType.Merge` | Files with merge conflicts |\n| Staged Changes | `ResourceGroupType.Index` | Files staged for commit |\n| Changes | `ResourceGroupType.WorkingTree` | Modified but unstaged files |\n| Untracked | `ResourceGroupType.Untracked` | New files not tracked by Git |\n\nEach file in these groups is represented by a `Resource` instance which tracks the status of the file and provides commands to operate on it.\n\nSources:\n- [extensions/git/src/repository.ts:42-47](extensions/git/src/repository.ts)\n- [extensions/git/src/repository.ts:334-338](extensions/git/src/repository.ts)\n- [extensions/git/src/repository.ts:339-344](extensions/git/src/repository.ts)\n\n## Git Operations\n\nThe Git extension implements Git operations through the `CommandCenter` class, which provides methods for all Git commands exposed to the UI.\n\n### Command Flow\n\n```mermaid\ngraph TD\n    subgraph \"VS Code UI\"\n        UI_Command[\"UI Command\u003cbr\u003e(e.g. 'Git: Commit')\"]\n        ContextMenu[\"Context Menu\"]\n        StatusBar[\"Status Bar\"]\n        SCM_View[\"SCM View\"]\n    end\n    \n    subgraph \"Git Extension\"\n        CommandCenter[\"CommandCenter\"]\n        Repository[\"Repository\"]\n        Git[\"Git Service\"]\n    end\n    \n    subgraph \"External\"\n        GitExecutable[\"Git Executable\"]\n    end\n    \n    UI_Command --\u003e CommandCenter\n    ContextMenu --\u003e CommandCenter\n    StatusBar --\u003e CommandCenter\n    SCM_View --\u003e CommandCenter\n    \n    CommandCenter --\u003e Repository\n    Repository --\u003e Git\n    Git --\u003e GitExecutable\n    \n    CommandCenter -- \"e.g. commit()\" --\u003e Repository\n    Repository -- \"e.g. git.exec(['commit', ...], options)\" --\u003e Git\n    Git -- \"Spawns Git process\" --\u003e GitExecutable\n```\n\nSources:\n- [extensions/git/src/commands.ts:714-732](extensions/git/src/commands.ts)\n- [extensions/git/src/commands.ts:316-326](extensions/git/src/commands.ts)\n- [extensions/git/src/git.ts:584-597](extensions/git/src/git.ts)\n\n### Command Registry\n\nThe Git extension uses a command decorator pattern to register Git commands with VS Code:\n\n```typescript\nfunction command(commandId: string, options: ScmCommandOptions = {}): Function {\n    return (_target: any, key: string, descriptor: any) =\u003e {\n        Commands.push({ commandId, key, method: descriptor.value, options });\n    };\n}\n\n// Example usage\n@command('git.commit')\nasync commit(repository: Repository): Promise\u003cvoid\u003e {\n    // Implementation\n}\n```\n\nThis approach allows the extension to define a large number of Git commands that are automatically registered with VS Code.\n\nSources:\n- [extensions/git/src/commands.ts:316-326](extensions/git/src/commands.ts)\n- [extensions/git/src/commands.ts:734-742](extensions/git/src/commands.ts)\n\n## State Handling and Status\n\nThe Git extension tracks the state of repositories and updates VS Code's UI accordingly.\n\n### Repository State Tracking\n\n```mermaid\ngraph TD\n    subgraph \"VS Code Integration\"\n        SCM[\"Source Control View\"]\n        StatusBar[\"Status Bar\"]\n        Decorations[\"File Decorations\"]\n    end\n    \n    subgraph \"Git Extension\"\n        Repository[\"Repository\"]\n        GitStatus[\"git status command\"]\n        WorkspaceWatcher[\"Workspace Watcher\"]\n        DotGitWatcher[\"DotGit Watcher\"]\n    end\n    \n    GitStatus --\u003e Repository\n    WorkspaceWatcher --\u003e Repository\n    DotGitWatcher --\u003e Repository\n    \n    Repository -- \"statusbar.update()\" --\u003e StatusBar\n    Repository -- \"resourceStates update\" --\u003e SCM\n    Repository -- \"decoration events\" --\u003e Decorations\n```\n\nSources:\n- [extensions/git/src/repository.ts:2440-2448](extensions/git/src/repository.ts)\n- [extensions/git/src/statusbar.ts:20-116](extensions/git/src/statusbar.ts)\n- [extensions/git/src/repository.ts:439-489](extensions/git/src/repository.ts)\n\n### Status Update Flow\n\nThe Git extension periodically updates repository status using the following flow:\n\n1. File system watchers detect changes in workspace files or `.git` directory\n2. The repository triggers a status update by running `git status`\n3. Status information is parsed and mapped to resource states\n4. Resource groups are updated, which triggers UI updates in VS Code\n\nThis allows the Git extension to maintain an up-to-date view of the repository state without requiring manual refreshes.\n\nSources:\n- [extensions/git/src/repository.ts:2425-2485](extensions/git/src/repository.ts)\n- [extensions/git/src/repository.ts:439-489](extensions/git/src/repository.ts)\n\n## User Interface Integration\n\nThe Git extension integrates with multiple areas of the VS Code UI to provide Git functionality.\n\n### Status Bar Integration\n\nThe extension adds Git status information and commands to VS Code's status bar through two main components:\n\n1. `CheckoutStatusBar`: Displays the current branch and provides a dropdown to switch branches\n2. `SyncStatusBar`: Shows sync status and provides sync/publish commands\n\n```mermaid\ngraph TD\n    subgraph \"Status Bar Items\"\n        CheckoutItem[\"Checkout Item\u003cbr\u003e(Branch Name)\"]\n        SyncItem[\"Sync Item\u003cbr\u003e(Sync status)\"]\n    end\n    \n    subgraph \"Git Extension\"\n        StatusBarCommands[\"StatusBarCommands\"]\n        CheckoutStatusBar[\"CheckoutStatusBar\"]\n        SyncStatusBar[\"SyncStatusBar\"]\n        Repository[\"Repository\"]\n    end\n    \n    StatusBarCommands --\u003e CheckoutStatusBar\n    StatusBarCommands --\u003e SyncStatusBar\n    CheckoutStatusBar --\u003e Repository\n    SyncStatusBar --\u003e Repository\n    \n    CheckoutStatusBar --\u003e CheckoutItem\n    SyncStatusBar --\u003e SyncItem\n    \n    CheckoutItem -- \"Click\" --\u003e Commands[\"git.checkout command\"]\n    SyncItem -- \"Click\" --\u003e Commands[\"git.sync command\"]\n```\n\nSources:\n- [extensions/git/src/statusbar.ts:20-116](extensions/git/src/statusbar.ts)\n- [extensions/git/src/statusbar.ts:119-292](extensions/git/src/statusbar.ts)\n\n### Action Button\n\nThe Git extension provides a context-aware action button in the Source Control view that adapts to the repository state:\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e CommitEnabled: Repository has changes\n    [*] --\u003e PublishBranch: Unpublished branch\n    [*] --\u003e SyncChanges: Remote changes available\n    [*] --\u003e CommitDisabled: No changes to commit\n    \n    CommitEnabled --\u003e [*]\n    PublishBranch --\u003e [*]\n    SyncChanges --\u003e [*]\n    CommitDisabled --\u003e [*]\n```\n\nThe action button adapts its behavior based on the repository state, offering the most relevant action as the primary button.\n\nSources:\n- [extensions/git/src/actionButton.ts:43-59](extensions/git/src/actionButton.ts)\n- [extensions/git/src/actionButton.ts:100-120](extensions/git/src/actionButton.ts)\n\n## Credential Handling\n\nThe Git extension implements a secure way to handle Git credentials through its Askpass implementation.\n\n### Askpass Flow\n\n```mermaid\nsequenceDiagram\n    participant Git as Git Executable\n    participant Shell as askpass.sh\n    participant Node as Node.js Process\n    participant Extension as VS Code Extension\n    participant UI as VS Code UI\n    \n    Git-\u003e\u003eShell: Invoke with credential query\n    Shell-\u003e\u003eShell: Create temporary pipe file\n    Shell-\u003e\u003eNode: Spawn Node process with askpass-main.js\n    Node-\u003e\u003eExtension: Send IPC request with credential query\n    Extension-\u003e\u003eUI: Show credential prompt to user\n    UI--\u003e\u003eExtension: User enters credentials\n    Extension--\u003e\u003eNode: Return credentials via IPC\n    Node-\u003e\u003eShell: Write credentials to pipe file\n    Shell--\u003e\u003eGit: Return credentials\n    Shell-\u003e\u003eShell: Remove pipe file\n```\n\nThis secure flow allows VS Code to prompt for credentials when Git operations require authentication, without storing credentials in process memory for longer than necessary.\n\nSources:\n- [extensions/git/src/askpass.ts:13-47](extensions/git/src/askpass.ts)\n- [extensions/git/src/askpass-main.ts:15-64](extensions/git/src/askpass-main.ts)\n- [extensions/git/src/askpass.sh:1-6](extensions/git/src/askpass.sh)\n\n## Extension API\n\nThe Git extension provides an API that other VS Code extensions can consume to interact with Git repositories.\n\n### API Structure\n\n```mermaid\nclassDiagram\n    class GitExtension {\n        +enabled: boolean\n        +onDidChangeEnablement: Event\n        +getAPI(version: 1): API\n    }\n    \n    class API {\n        +state: APIState\n        +onDidChangeState: Event\n        +git: Git\n        +repositories: Repository[]\n        +onDidOpenRepository: Event\n        +onDidCloseRepository: Event\n        +toGitUri(uri: Uri, ref: string): Uri\n        +getRepository(uri: Uri): Repository\n    }\n    \n    class Repository {\n        +rootUri: Uri\n        +state: RepositoryState\n        +inputBox: InputBox\n        +ui: RepositoryUIState\n        +add(paths: string[])\n        +commit(message: string)\n        +push(remote?: string)\n        +pull()\n        +checkout(ref: string)\n    }\n    \n    GitExtension --\u003e API : getAPI(1)\n    API --\u003e \"0..*\" Repository : repositories\n```\n\nSources:\n- [extensions/git/src/api/git.d.ts:378-394](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/api/git.d.ts:355-376](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/api/git.d.ts:196-276](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/api/api1.ts:74-97](extensions/git/src/api/api1.ts)\n\n### Extension Point Usage\n\nExtensions can consume the Git API like this:\n\n```typescript\n// Get Git extension\nconst gitExtension = extensions.getExtension\u003cGitExtension\u003e('vscode.git').exports;\nconst git = gitExtension.getAPI(1);\n\n// Access repositories\nfor (const repository of git.repositories) {\n    console.log(repository.state.HEAD?.name);\n    \n    // Perform operations\n    await repository.pull();\n    await repository.push();\n}\n```\n\nThis API allows other extensions to build on top of the Git integration, adding new features or custom workflows.\n\nSources:\n- [extensions/git/src/api/extension.ts:12-21](extensions/git/src/api/extension.ts)\n\n## Error Handling\n\nThe Git extension implements comprehensive error handling to provide meaningful feedback to users when Git operations fail.\n\n### Git Error Codes\n\nThe extension defines a set of error codes that map Git command-line errors to more user-friendly error messages:\n\n```typescript\nexport const enum GitErrorCodes {\n    BadConfigFile = 'BadConfigFile',\n    AuthenticationFailed = 'AuthenticationFailed',\n    NoUserNameConfigured = 'NoUserNameConfigured',\n    // Many more error codes...\n}\n```\n\nWhen a Git command fails, the extension parses the error output and maps it to one of these error codes, which allows for more specific error handling and user guidance.\n\nSources:\n- [extensions/git/src/api/git.d.ts:396-440](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/git.ts:319-347](extensions/git/src/git.ts)\n\n### Error Display Flow\n\n```mermaid\ngraph TD\n    Command[\"Git Command Execution\"] --\u003e|Error| ErrorHandler[\"Error Handler\"]\n    ErrorHandler --\u003e|Parse error output| ErrorCode[\"Determine GitErrorCode\"]\n    ErrorCode --\u003e|Based on code| UserMessage[\"Show User Message\"]\n    ErrorCode --\u003e|For specific errors| SpecialHandling[\"Special Handling\u003cbr\u003e(e.g., credential prompts)\"]\n```\n\nSources:\n- [extensions/git/src/git.ts:273-309](extensions/git/src/git.ts)\n- [extensions/git/src/commands.ts:998-1019](extensions/git/src/commands.ts)\n\n## Configuration Options\n\nThe Git extension provides numerous configuration options that users can customize through VS Code's settings:\n\n| Setting | Description | Default |\n|---------|-------------|---------|\n| `git.enabled` | Enable/disable Git integration | `true` |\n| `git.path` | Path to Git executable | Auto-detected |\n| `git.autoRepositoryDetection` | How repositories are detected | `true` |\n| `git.autofetch` | Auto-fetch from remotes | `false` |\n| `git.confirmSync` | Confirm before sync | `true` |\n| `git.enableSmartCommit` | Commit all changes when no staged changes | `false` |\n| `git.openAfterClone` | Open repository after clone | `prompt` |\n\nThese settings and many more allow users to customize the Git integration to their preferences and workflows.\n\nSources:\n- [extensions/git/package.json:142-248](extensions/git/package.json)\n- [extensions/git/package.nls.json:142-248](extensions/git/package.nls.json)\n\n## Conclusion\n\nThe Git integration in VS Code provides a comprehensive interface to Git functionality directly within the editor. By leveraging VS Code's Source Control API and interfacing with the Git command-line tool, it offers a seamless experience for users to manage their Git repositories without switching contexts.\n\nThe extension's architecture, with its clear separation of concerns between UI components, command handling, repository state management, and Git interaction, makes it maintainable and extensible. Its extensibility is further enhanced by the Git Extension API, which allows other extensions to build on top of its functionality."])</script>
    <script>self.__next_f.push([1, "33:T3eea,"])</script>
    <script>self.__next_f.push([1, "# Git Extension Architecture\n\n\u003cdetails\u003e\n\u003csummary\u003eRelevant source files\u003c/summary\u003e\n\nThe following files were used as context for generating this wiki page:\n\n- [extensions/git/package.json](extensions/git/package.json)\n- [extensions/git/package.nls.json](extensions/git/package.nls.json)\n- [extensions/git/src/actionButton.ts](extensions/git/src/actionButton.ts)\n- [extensions/git/src/api/api1.ts](extensions/git/src/api/api1.ts)\n- [extensions/git/src/api/extension.ts](extensions/git/src/api/extension.ts)\n- [extensions/git/src/api/git.d.ts](extensions/git/src/api/git.d.ts)\n- [extensions/git/src/askpass-empty.sh](extensions/git/src/askpass-empty.sh)\n- [extensions/git/src/askpass-main.ts](extensions/git/src/askpass-main.ts)\n- [extensions/git/src/askpass.sh](extensions/git/src/askpass.sh)\n- [extensions/git/src/askpass.ts](extensions/git/src/askpass.ts)\n- [extensions/git/src/autofetch.ts](extensions/git/src/autofetch.ts)\n- [extensions/git/src/commands.ts](extensions/git/src/commands.ts)\n- [extensions/git/src/git.ts](extensions/git/src/git.ts)\n- [extensions/git/src/gitEditor.ts](extensions/git/src/gitEditor.ts)\n- [extensions/git/src/ipc/ipcClient.ts](extensions/git/src/ipc/ipcClient.ts)\n- [extensions/git/src/ipc/ipcServer.ts](extensions/git/src/ipc/ipcServer.ts)\n- [extensions/git/src/main.ts](extensions/git/src/main.ts)\n- [extensions/git/src/model.ts](extensions/git/src/model.ts)\n- [extensions/git/src/postCommitCommands.ts](extensions/git/src/postCommitCommands.ts)\n- [extensions/git/src/repository.ts](extensions/git/src/repository.ts)\n- [extensions/git/src/ssh-askpass-empty.sh](extensions/git/src/ssh-askpass-empty.sh)\n- [extensions/git/src/ssh-askpass.sh](extensions/git/src/ssh-askpass.sh)\n- [extensions/git/src/statusbar.ts](extensions/git/src/statusbar.ts)\n- [extensions/git/src/terminal.ts](extensions/git/src/terminal.ts)\n- [extensions/git/src/test/git.test.ts](extensions/git/src/test/git.test.ts)\n- [extensions/git/src/util.ts](extensions/git/src/util.ts)\n- [extensions/git/tsconfig.json](extensions/git/tsconfig.json)\n\n\u003c/details\u003e\n\n\n\nThis document provides a comprehensive overview of the VS Code Git extension's internal architecture. It covers the primary components, data flows, and design patterns used within the extension. For information about using the Git extension as an end user, refer to the VS Code documentation. For information about consuming the Git extension's API from another extension, see [Git Extension API](#4.3).\n\n## Overview\n\nThe VS Code Git extension provides Git functionality directly within the editor. It enables source control operations like committing, branching, pushing/pulling, and viewing file history without leaving VS Code. The extension architecture follows a layered design with clear separation of concerns.\n\n```mermaid\ngraph TD\n    subgraph \"User Interface\"\n        SCM[\"Source Control View\"]\n        SB[\"Status Bar\"]\n        CMD[\"Commands\"]\n        DEC[\"Decorations\"]\n    end\n    \n    subgraph \"Business Logic\"\n        CC[\"CommandCenter\"]\n        M[\"Model\"]\n        R[\"Repository\"]\n    end\n    \n    subgraph \"Git Integration\"\n        G[\"Git\"]\n        PH[\"Protocol Handlers\"]\n        AP[\"Askpass\"]\n    end\n    \n    subgraph \"Extension API\"\n        API[\"Git API\"]\n        APIREPO[\"ApiRepository\"]\n    end\n    \n    CMD --\u003e CC\n    SCM --\u003e R\n    SB --\u003e R\n    DEC --\u003e R\n    \n    CC --\u003e M\n    CC --\u003e R\n    \n    M --\u003e R\n    R --\u003e G\n    G --\u003e AP\n    G --\u003e PH\n    \n    API --\u003e M\n    API --\u003e APIREPO\n    APIREPO --\u003e R\n```\n\nSources:\n- [extensions/git/src/main.ts:111-121](extensions/git/src/main.ts:111-121)\n- [extensions/git/src/api/api1.ts:388-403](extensions/git/src/api/api1.ts:388-403)\n- [extensions/git/src/repository.ts:673-745](extensions/git/src/repository.ts:673-745)\n\n## Core Components\n\n### Git Executable Wrapper\n\nAt the lowest level, the extension communicates with the Git command-line executable through the `Git` class. This class:\n- Handles finding and validating the Git executable\n- Provides methods to execute Git commands and process their output\n- Implements error handling for Git command execution\n- Supports cancellation of long-running operations\n\n```mermaid\ngraph TD\n    Git[\"Git Class\"]\n    Exec[\"Git Executable\"]\n    Output[\"Command Output\"]\n    Error[\"Error Handling\"]\n    \n    Git --\u003e|\"spawns process\"| Exec\n    Exec --\u003e|\"stdout/stderr\"| Output\n    Output --\u003e|\"parsed\"| Git\n    Exec --\u003e|\"error\"| Error\n    Error --\u003e|\"GitError\"| Git\n```\n\nSources:\n- [extensions/git/src/git.ts:369-740](extensions/git/src/git.ts:369-740)\n- [extensions/git/src/git.ts:560-598](extensions/git/src/git.ts:560-598)\n\n### Model\n\nThe `Model` class acts as the central coordination component, managing:\n- Repository discovery and instantiation\n- Access to repositories through the VS Code workspace\n- Extension API surface exposure\n- Event aggregation from all repositories\n\n```mermaid\ngraph TD\n    Model[\"Model\"]\n    WSF[\"Workspace Folders\"]\n    RepoDisco[\"Repository Discovery\"]\n    RepoList[\"Repository Collection\"]\n    Events[\"Event Aggregation\"]\n    API[\"API Surface\"]\n    \n    WSF --\u003e|\"scan\"| RepoDisco\n    RepoDisco --\u003e|\"create\"| RepoList\n    RepoList --\u003e|\"maintain\"| Model\n    RepoList --\u003e|\"events\"| Events\n    Events --\u003e|\"aggregate\"| Model\n    Model --\u003e|\"expose\"| API\n```\n\nSources:\n- [extensions/git/src/model.ts:174-737](extensions/git/src/model.ts:174-737)\n- [extensions/git/src/main.ts:91-97](extensions/git/src/main.ts:91-97)\n\n### Repository\n\nThe `Repository` class represents a Git repository and is one of the most complex components. It:\n- Maintains the repository state (branches, commits, working tree)\n- Provides methods for Git operations (commit, push, pull, etc.)\n- Manages UI resource groups (changes, staged, merge conflicts)\n- Handles file watching for repository changes\n- Integrates with VS Code's Source Control API\n\n```mermaid\ngraph TD\n    Repo[\"Repository\"]\n    \n    subgraph \"State Management\"\n        State[\"Repository State\"]\n        HEAD[\"HEAD Information\"]\n        Remotes[\"Remote Repositories\"]\n        Branches[\"Branches\"]\n        Operations[\"Operation Manager\"]\n    end\n    \n    subgraph \"Resource Groups\"\n        MergeG[\"Merge Group\"]\n        IndexG[\"Index/Staged Group\"]\n        WorkingG[\"Working Tree Group\"]\n        UntrackedG[\"Untracked Group\"]\n    end\n    \n    subgraph \"Watchers\"\n        FileWatcher[\"File Watcher\"]\n        DotGitWatcher[\"DotGit Watcher\"]\n    end\n    \n    Repo --\u003e State\n    State --\u003e HEAD\n    State --\u003e Remotes\n    State --\u003e Branches\n    Repo --\u003e Operations\n    \n    Repo --\u003e MergeG\n    Repo --\u003e IndexG\n    Repo --\u003e WorkingG\n    Repo --\u003e UntrackedG\n    \n    Repo --\u003e FileWatcher\n    Repo --\u003e DotGitWatcher\n    \n    FileWatcher --\u003e|\"trigger refresh\"| Repo\n    DotGitWatcher --\u003e|\"trigger refresh\"| Repo\n```\n\nSources:\n- [extensions/git/src/repository.ts:673-2935](extensions/git/src/repository.ts:673-2935)\n- [extensions/git/src/repository.ts:49-333](extensions/git/src/repository.ts:49-333)\n\n### Command Center\n\nThe `CommandCenter` class handles the implementation of Git commands that can be invoked by users:\n- Registers VS Code commands related to Git\n- Implements command handlers (commit, checkout, push, etc.)\n- Bridges between UI interactions and repository operations\n- Provides feedback to users through notifications\n\n```mermaid\ngraph TD\n    CC[\"CommandCenter\"]\n    Commands[\"VS Code Commands\"]\n    Git[\"Git\"]\n    Model[\"Model\"]\n    Repo[\"Repository\"]\n    UI[\"UI Notifications\"]\n    \n    Commands --\u003e|\"register\"| CC\n    CC --\u003e|\"find repo\"| Model\n    Model --\u003e|\"return\"| Repo\n    CC --\u003e|\"execute operation\"| Repo\n    Repo --\u003e|\"git command\"| Git\n    CC --\u003e|\"show result\"| UI\n```\n\nSources:\n- [extensions/git/src/commands.ts:714-1239](extensions/git/src/commands.ts:714-1239)\n- [extensions/git/src/commands.ts:316-326](extensions/git/src/commands.ts:316-326)\n\n## Resource Management\n\nGit resources (modified, staged, untracked files) are managed through a hierarchical system:\n\n### Resource Groups\n\nThe extension creates four main resource groups:\n- Merge Group: Files with merge conflicts\n- Index Group: Staged changes\n- Working Tree Group: Modified but unstaged files\n- Untracked Group: Untracked files\n\nEach resource group is represented as a `SourceControlResourceGroup` in VS Code's SCM API.\n\n### Resources\n\nIndividual files are represented by the `Resource` class, which:\n- Contains file status information (modified, added, deleted, etc.)\n- Provides command handlers for the resource (open, stage, revert)\n- Maps Git statuses to VS Code decorations\n- Handles the display of changes in diff views\n\n```mermaid\ngraph TD\n    Repository[\"Repository\"]\n    \n    subgraph \"Resource Groups\"\n        MergeGroup[\"Merge Group\"]\n        IndexGroup[\"Index/Staged Group\"]\n        WorkingTreeGroup[\"Working Tree Group\"]\n        UntrackedGroup[\"Untracked Group\"]\n    end\n    \n    subgraph \"Resources\"\n        ModifiedResource[\"Modified Resource\"]\n        StagedResource[\"Staged Resource\"]\n        ConflictResource[\"Conflict Resource\"]\n        UntrackedResource[\"Untracked Resource\"]\n    end\n    \n    Repository --\u003e MergeGroup\n    Repository --\u003e IndexGroup\n    Repository --\u003e WorkingTreeGroup\n    Repository --\u003e UntrackedGroup\n    \n    MergeGroup --\u003e ConflictResource\n    IndexGroup --\u003e StagedResource\n    WorkingTreeGroup --\u003e ModifiedResource\n    UntrackedGroup --\u003e UntrackedResource\n```\n\nSources:\n- [extensions/git/src/repository.ts:49-333](extensions/git/src/repository.ts:49-333)\n- [extensions/git/src/repository.ts:335-654](extensions/git/src/repository.ts:335-654)\n\n## Git Operations\n\nThe extension implements Git operations through a combination of:\n\n### Operation Manager\n\nThe `OperationManager` class in the Repository:\n- Tracks ongoing Git operations\n- Ensures operations don't conflict\n- Provides progress reporting\n- Manages operation queuing\n\n```mermaid\ngraph TD\n    Operation[\"Operation\"]\n    Manager[\"OperationManager\"]\n    Progress[\"Progress Reporting\"]\n    \n    Operation --\u003e|\"queue\"| Manager\n    Manager --\u003e|\"execute\"| Operation\n    Operation --\u003e|\"report\"| Progress\n```\n\n### Command Implementation Flow\n\nWhen a Git command is executed:\n\n1. Command is invoked from UI or command palette\n2. CommandCenter processes the command\n3. CommandCenter finds appropriate repository\n4. Repository creates an operation and queues it\n5. Operation is executed through Git class\n6. Results are processed and reflected in UI\n\nSources:\n- [extensions/git/src/commands.ts:734-742](extensions/git/src/commands.ts:734-742)\n- [extensions/git/src/repository.ts:2155-2160](extensions/git/src/repository.ts:2155-2160)\n\n## Extension API\n\nThe Git extension provides an API for other extensions to consume.\n\n### API Structure\n\n```mermaid\ngraph TD\n    GitExtension[\"GitExtension Interface\"]\n    API[\"API Interface\"]\n    ApiImpl[\"API Implementation\"]\n    \n    subgraph \"External Extension\"\n        Consumer[\"API Consumer\"]\n    end\n    \n    subgraph \"Internal Implementation\"\n        Model[\"Model\"]\n        Repository[\"Repository\"]\n        ApiRepository[\"ApiRepository\"]\n    end\n    \n    Consumer --\u003e|\"getAPI()\"| GitExtension\n    GitExtension --\u003e|\"return\"| API\n    API --\u003e|\"implemented by\"| ApiImpl\n    ApiImpl --\u003e|\"uses\"| Model\n    Model --\u003e|\"contains\"| Repository\n    ApiRepository --\u003e|\"wraps\"| Repository\n    ApiImpl --\u003e|\"returns\"| ApiRepository\n```\n\nThe API provides:\n- Access to Git repositories\n- Repository state information\n- Operations to manipulate repositories\n- Events for repository changes\n\nSources:\n- [extensions/git/src/api/git.d.ts:378-394](extensions/git/src/api/git.d.ts:378-394)\n- [extensions/git/src/api/api1.ts:10-70](extensions/git/src/api/api1.ts:10-70)\n- [extensions/git/src/api/api1.ts:74-263](extensions/git/src/api/api1.ts:74-263)\n\n## Authentication and Environment Management\n\nGit operations often require authentication or specific environment settings. The extension handles this through:\n\n### Askpass\n\nThe `Askpass` class:\n- Handles Git credential requests\n- Prompts users for usernames and passwords\n- Manages SSH key passphrases\n- Caches credentials for a limited time\n\n```mermaid\ngraph TD\n    Git[\"Git Process\"]\n    AskpassScript[\"Askpass Script\"]\n    AskpassMain[\"Askpass Main Process\"]\n    AskpassClass[\"Askpass Class\"]\n    UserPrompt[\"VS Code Input Box\"]\n    \n    Git --\u003e|\"needs credentials\"| AskpassScript\n    AskpassScript --\u003e|\"invoke\"| AskpassMain\n    AskpassMain --\u003e|\"IPC\"| AskpassClass\n    AskpassClass --\u003e|\"prompt\"| UserPrompt\n    UserPrompt --\u003e|\"credentials\"| AskpassClass\n    AskpassClass --\u003e|\"return\"| AskpassMain\n    AskpassMain --\u003e|\"return\"| AskpassScript\n    AskpassScript --\u003e|\"provide to\"| Git\n```\n\n### Terminal Environment\n\nThe `TerminalEnvironmentManager` ensures that:\n- Git processes in VS Code terminals use the same authentication\n- Git processes have the correct environment variables\n- Git editor integration works correctly\n\nSources:\n- [extensions/git/src/askpass.ts:13-261](extensions/git/src/askpass.ts:13-261)\n- [extensions/git/src/terminal.ts:15-45](extensions/git/src/terminal.ts:15-45)\n- [extensions/git/src/main.ts:73-81](extensions/git/src/main.ts:73-81)\n\n## Extension Initialization\n\nThe extension follows a specific initialization sequence:\n\n1. Extension is activated by VS Code\n2. Git executable is located and validated\n3. IPC server is initialized for inter-process communication\n4. Askpass and Git editor helpers are set up\n5. Model is created and initialized\n6. CommandCenter is created and commands are registered\n7. UI components are initialized (decorations, timeline, SCM providers)\n\n```mermaid\ngraph TD\n    Activate[\"activate()\"]\n    FindGit[\"Find Git Executable\"]\n    CreateIPC[\"Create IPC Server\"]\n    CreateAskpass[\"Create Askpass\"]\n    CreateModel[\"Create Model\"]\n    CreateCommandCenter[\"Create CommandCenter\"]\n    InitUI[\"Initialize UI Components\"]\n    \n    Activate --\u003e FindGit\n    FindGit --\u003e CreateIPC\n    CreateIPC --\u003e CreateAskpass\n    CreateAskpass --\u003e CreateModel\n    CreateModel --\u003e CreateCommandCenter\n    CreateCommandCenter --\u003e InitUI\n```\n\nSources:\n- [extensions/git/src/main.ts:39-138](extensions/git/src/main.ts:39-138)\n- [extensions/git/src/main.ts:188-241](extensions/git/src/main.ts:188-241)\n\n## Error Handling and Telemetry\n\nThe extension includes robust error handling and telemetry:\n\n- `GitError` class encapsulates Git command errors\n- Error codes are mapped to user-friendly messages\n- Telemetry reporting for key operations \n- Error telemetry to help identify common issues\n\nSources:\n- [extensions/git/src/git.ts:273-310](extensions/git/src/git.ts:273-310)\n- [extensions/git/src/git.ts:319-346](extensions/git/src/git.ts:319-346)\n- [extensions/git/src/commands.ts:886-1016](extensions/git/src/commands.ts:886-1016)\n\n## Key Implementation Patterns\n\n### Event System\n\nThe extension makes extensive use of VS Code's event system:\n- Events are used to communicate state changes\n- Event handling is used for repository changes\n- Custom event filtering and mapping methods are implemented\n\n```typescript\n// Example of event handling pattern from repository.ts\nrepository.onDidRunGitStatus(this.onDidRunGitStatus, this, this.disposables);\nrepository.onDidChangeOperations(this.onDidChangeOperations, this, this.disposables);\n```\n\n### Decorators\n\nThe extension uses TypeScript decorators for:\n- Command registration\n- Method caching (memoize)\n- Rate limiting (throttle)\n- Postponing execution (debounce)\n- Ensuring sequential execution (sequentialize)\n\nSources:\n- [extensions/git/src/util.ts:95-109](extensions/git/src/util.ts:95-109)\n- [extensions/git/src/commands.ts:318-326](extensions/git/src/commands.ts:318-326)\n- [extensions/git/src/repository.ts:146-175](extensions/git/src/repository.ts:146-175)\n\n## Conclusion\n\nThe Git extension is a complex system with a well-defined architecture. It separates concerns between Git command execution, repository state management, UI integration, and API exposure. The layered approach allows for clean separation between different components while maintaining flexibility and extensibility.\n\nThis architecture enables the Git extension to provide a seamless Git experience within VS Code while also exposing functionality for other extensions to build upon."])</script>
    <script>self.__next_f.push([1, "16:[\"$\",\"$L17\",null,{\"repoName\":\"microsoft/vscode\",\"wiki\":{\"metadata\":{\"repo_name\":\"microsoft/vscode\",\"commit_hash\":\"47618583\",\"generated_at\":\"2025-04-17T00:43:47.596625\"},\"pages\":[{\"page_plan\":{\"id\":\"1\",\"title\":\"VS Code Architecture Overview\"},\"content\":\"$18\"},{\"page_plan\":{\"id\":\"1.1\",\"title\":\"Process Architecture\"},\"content\":\"$19\"},{\"page_plan\":{\"id\":\"1.2\",\"title\":\"Dependency Management and Build System\"},\"content\":\"$1a\"},{\"page_plan\":{\"id\":\"2\",\"title\":\"Core Services and Components\"},\"content\":\"$1b\"},{\"page_plan\":{\"id\":\"2.3\",\"title\":\"Configuration System\"},\"content\":\"$1c\"},{\"page_plan\":{\"id\":\"2.4\",\"title\":\"List and Tree Components\"},\"content\":\"$1d\"},{\"page_plan\":{\"id\":\"3\",\"title\":\"Monaco Editor\"},\"content\":\"$1e\"},{\"page_plan\":{\"id\":\"3.1\",\"title\":\"Text Model and View Model\"},\"content\":\"$1f\"},{\"page_plan\":{\"id\":\"3.2\",\"title\":\"Editor Features and Contributions\"},\"content\":\"$20\"},{\"page_plan\":{\"id\":\"4\",\"title\":\"Extension System\"},\"content\":\"$21\"},{\"page_plan\":{\"id\":\"4.1\",\"title\":\"Extension Host Protocol\"},\"content\":\"$22\"},{\"page_plan\":{\"id\":\"4.2\",\"title\":\"Extension Management\"},\"content\":\"$23\"},{\"page_plan\":{\"id\":\"4.3\",\"title\":\"Extension API\"},\"content\":\"$24\"},{\"page_plan\":{\"id\":\"5\",\"title\":\"Integrated Terminal\"},\"content\":\"$25\"},{\"page_plan\":{\"id\":\"5.1\",\"title\":\"Terminal Instance and Process Management\"},\"content\":\"$26\"},{\"page_plan\":{\"id\":\"5.2\",\"title\":\"Terminal UI and Integration\"},\"content\":\"$27\"},{\"page_plan\":{\"id\":\"6\",\"title\":\"Debugging System\"},\"content\":\"$28\"},{\"page_plan\":{\"id\":\"6.1\",\"title\":\"Debug Service and Session Management\"},\"content\":\"$29\"},{\"page_plan\":{\"id\":\"6.2\",\"title\":\"Debug Adapter Protocol\"},\"content\":\"$2a\"},{\"page_plan\":{\"id\":\"7\",\"title\":\"Task System\"},\"content\":\"$2b\"},{\"page_plan\":{\"id\":\"7.1\",\"title\":\"Task Configuration and Execution\"},\"content\":\"$2c\"},{\"page_plan\":{\"id\":\"8\",\"title\":\"Notebook Editor\"},\"content\":\"$2d\"},{\"page_plan\":{\"id\":\"8.1\",\"title\":\"Notebook Model and View Model\"},\"content\":\"$2e\"},{\"page_plan\":{\"id\":\"9\",\"title\":\"Chat and AI Integration\"},\"content\":\"$2f\"},{\"page_plan\":{\"id\":\"9.1\",\"title\":\"Chat UI Components\"},\"content\":\"$30\"},{\"page_plan\":{\"id\":\"9.2\",\"title\":\"Chat Service and Agent Integration\"},\"content\":\"$31\"},{\"page_plan\":{\"id\":\"10\",\"title\":\"Git Integration\"},\"content\":\"$32\"},{\"page_plan\":{\"id\":\"10.1\",\"title\":\"Git Extension Architecture\"},\"content\":\"$33\"}]},\"children\":[\"$\",\"$L3\",null,{\"parallelRouterKey\":\"children\",\"error\":\"$undefined\",\"errorStyles\":\"$undefined\",\"errorScripts\":\"$undefined\",\"template\":[\"$\",\"$L4\",null,{}],\"templateStyles\":\"$undefined\",\"templateScripts\":\"$undefined\",\"notFound\":\"$undefined\",\"forbidden\":\"$undefined\",\"unauthorized\":\"$undefined\"}]}]\n"])</script>
    <script>self.__next_f.push([1, "c:null\n10:[[\"$\",\"title\",\"0\",{\"children\":\"microsoft/vscode | DeepWiki\"}],[\"$\",\"meta\",\"1\",{\"name\":\"description\",\"content\":\"This document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core serv\"}],[\"$\",\"meta\",\"2\",{\"property\":\"og:title\",\"content\":\"microsoft/vscode | DeepWiki\"}],[\"$\",\"meta\",\"3\",{\"property\":\"og:description\",\"content\":\"This document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core serv\"}],[\"$\",\"meta\",\"4\",{\"property\":\"og:url\",\"content\":\"https://deepwiki.com/microsoft/vscode\"}],[\"$\",\"meta\",\"5\",{\"property\":\"og:site_name\",\"content\":\"DeepWiki\"}],[\"$\",\"meta\",\"6\",{\"property\":\"og:type\",\"content\":\"website\"}],[\"$\",\"meta\",\"7\",{\"name\":\"twitter:card\",\"content\":\"summary\"}],[\"$\",\"meta\",\"8\",{\"name\":\"twitter:title\",\"content\":\"microsoft/vscode | DeepWiki\"}],[\"$\",\"meta\",\"9\",{\"name\":\"twitter:description\",\"content\":\"This document provides a high-level overview of the Visual Studio Code architecture, explaining the core components and how they interact with each other. It covers the process architecture, core serv\"}],[\"$\",\"link\",\"10\",{\"rel\":\"icon\",\"href\":\"/favicon.ico\",\"type\":\"image/x-icon\",\"sizes\":\"48x48\"}],[\"$\",\"link\",\"11\",{\"rel\":\"icon\",\"href\":\"/icon.png?66aaf51e0e68c818\",\"type\":\"image/png\",\"sizes\":\"16x16\"}],[\"$\",\"link\",\"12\",{\"rel\":\"apple-touch-icon\",\"href\":\"/apple-icon.png?a4f658907db0ab87\",\"type\":\"image/png\",\"sizes\":\"180x180\"}]]\n"])</script>
</body>

</html>